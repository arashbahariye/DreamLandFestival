{
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/firstAPI/app.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar router = express.Router();\n\nvar path = require('path');\n\nvar uuidv4 = require('uuid/v4');\n\nvar bodyParser = require('body-parser');\n\nvar reservationRoutes = require('./routes/reservation');\n\nvar fs = require('fs');\n\nvar helmet = require('helmet');\n\nvar morgan = require('morgan'); //const db = require('./utils/database');\n\n\nvar sequelize = require('./utils/database');\n\nvar app = express();\napp.use(helmet());\nvar logStream = fs.createWriteStream(path.join(__dirname, 'access.log'), {\n  flags: 'a'\n});\napp.use(morgan('combined', {\n  stream: logStream\n}));\napp.use(bodyParser.json()); //application/json\n\napp.use(function (req, res, next) {\n  res.setHeader('Access-Control-Allow-Origin', '*');\n  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, PATCH, DELETE');\n  res.setHeader('Access-Control-Allow-Headers', 'Content-Type, Authorization');\n  next();\n});\napp.use(express[\"static\"]('public'));\nrouter.get('/', function (req, res) {\n  res.sendFile(path.join(__dirname + '/index.html'));\n}); //Routing\n\napp.use('/', router);\n\nrequire(\"./routes\")(app);\n\nvar User = require('./models/user');\n\nvar Ticket = require('./models/ticket');\n\nvar Artistic_Event = require('./models/artisticevent');\n\nvar Performer = require('./models/performer');\n\nvar Seminary = require('./models/seminary');\n\nvar Similarity = require('./models/similarity');\n\nvar Performance = require('./models/performance'); //user and ticket\n\n\nUser.hasMany(Ticket);\nTicket.belongsTo(User, {\n  constraints: true,\n  onDelete: 'CASCADE'\n}); //artistic event and performer\n\nArtistic_Event.belongsToMany(Performer, {\n  through: Performance\n});\nPerformer.belongsToMany(Artistic_Event, {\n  through: Performance\n}); //artistic event and seminary\n\nArtistic_Event.hasOne(Seminary); //artistic event and artistic event\n\nArtistic_Event.belongsToMany(Artistic_Event, {\n  as: 'artisticEvent2',\n  through: Similarity\n});\nconsole.log(process.env.NODE_ENV || 'develop');\nsequelize.authenticate().then(function (rec) {\n  console.log('Connessione Stabilita con Successo'); //sequelize.sync({force:true})\n\n  sequelize.sync().then(function (user) {\n    console.log('Sync al DB con Successo');\n  })[\"catch\"](function (err) {\n    console.log('Sync al DB Error:', err);\n  });\n})[\"catch\"](function (err) {\n  console.log('Connession al DB Error:', err);\n});\napp.listen(process.env.PORT || 8081);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInJvdXRlciIsIlJvdXRlciIsInBhdGgiLCJ1dWlkdjQiLCJib2R5UGFyc2VyIiwicmVzZXJ2YXRpb25Sb3V0ZXMiLCJmcyIsImhlbG1ldCIsIm1vcmdhbiIsInNlcXVlbGl6ZSIsImFwcCIsInVzZSIsImxvZ1N0cmVhbSIsImNyZWF0ZVdyaXRlU3RyZWFtIiwiam9pbiIsIl9fZGlybmFtZSIsImZsYWdzIiwic3RyZWFtIiwianNvbiIsInJlcSIsInJlcyIsIm5leHQiLCJzZXRIZWFkZXIiLCJnZXQiLCJzZW5kRmlsZSIsIlVzZXIiLCJUaWNrZXQiLCJBcnRpc3RpY19FdmVudCIsIlBlcmZvcm1lciIsIlNlbWluYXJ5IiwiU2ltaWxhcml0eSIsIlBlcmZvcm1hbmNlIiwiaGFzTWFueSIsImJlbG9uZ3NUbyIsImNvbnN0cmFpbnRzIiwib25EZWxldGUiLCJiZWxvbmdzVG9NYW55IiwidGhyb3VnaCIsImhhc09uZSIsImFzIiwiY29uc29sZSIsImxvZyIsInByb2Nlc3MiLCJlbnYiLCJOT0RFX0VOViIsImF1dGhlbnRpY2F0ZSIsInRoZW4iLCJyZWMiLCJzeW5jIiwidXNlciIsImVyciIsImxpc3RlbiIsIlBPUlQiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxJQUFNQyxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0csTUFBUixFQUFmOztBQUNBLElBQU1DLElBQUksR0FBR0gsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTUksTUFBTSxHQUFHSixPQUFPLENBQUMsU0FBRCxDQUF0Qjs7QUFDQSxJQUFNSyxVQUFVLEdBQUdMLE9BQU8sQ0FBQyxhQUFELENBQTFCOztBQUNBLElBQU1NLGlCQUFpQixHQUFHTixPQUFPLENBQUMsc0JBQUQsQ0FBakM7O0FBQ0EsSUFBTU8sRUFBRSxHQUFHUCxPQUFPLENBQUMsSUFBRCxDQUFsQjs7QUFDQSxJQUFJUSxNQUFNLEdBQUdSLE9BQU8sQ0FBQyxRQUFELENBQXBCOztBQUNBLElBQUlTLE1BQU0sR0FBR1QsT0FBTyxDQUFDLFFBQUQsQ0FBcEIsQyxDQUVBOzs7QUFDQSxJQUFNVSxTQUFTLEdBQUlWLE9BQU8sQ0FBQyxrQkFBRCxDQUExQjs7QUFFQSxJQUFNVyxHQUFHLEdBQUdaLE9BQU8sRUFBbkI7QUFFQVksR0FBRyxDQUFDQyxHQUFKLENBQVFKLE1BQU0sRUFBZDtBQUVBLElBQU1LLFNBQVMsR0FBR04sRUFBRSxDQUFDTyxpQkFBSCxDQUFxQlgsSUFBSSxDQUFDWSxJQUFMLENBQVVDLFNBQVYsRUFBcUIsWUFBckIsQ0FBckIsRUFBeUQ7QUFBQ0MsRUFBQUEsS0FBSyxFQUFHO0FBQVQsQ0FBekQsQ0FBbEI7QUFDQU4sR0FBRyxDQUFDQyxHQUFKLENBQVFILE1BQU0sQ0FBQyxVQUFELEVBQWE7QUFBQ1MsRUFBQUEsTUFBTSxFQUFHTDtBQUFWLENBQWIsQ0FBZDtBQUVBRixHQUFHLENBQUNDLEdBQUosQ0FBUVAsVUFBVSxDQUFDYyxJQUFYLEVBQVIsRSxDQUE0Qjs7QUFFNUJSLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFVBQUNRLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEVBQW9CO0FBQ3hCRCxFQUFBQSxHQUFHLENBQUNFLFNBQUosQ0FBYyw2QkFBZCxFQUE2QyxHQUE3QztBQUNBRixFQUFBQSxHQUFHLENBQUNFLFNBQUosQ0FBYyw4QkFBZCxFQUE4QywrQkFBOUM7QUFDQUYsRUFBQUEsR0FBRyxDQUFDRSxTQUFKLENBQWMsOEJBQWQsRUFBOEMsNkJBQTlDO0FBQ0FELEVBQUFBLElBQUk7QUFDUCxDQUxEO0FBT0FYLEdBQUcsQ0FBQ0MsR0FBSixDQUFRYixPQUFPLFVBQVAsQ0FBZSxRQUFmLENBQVI7QUFFQUUsTUFBTSxDQUFDdUIsR0FBUCxDQUFXLEdBQVgsRUFBZSxVQUFTSixHQUFULEVBQWFDLEdBQWIsRUFBaUI7QUFDNUJBLEVBQUFBLEdBQUcsQ0FBQ0ksUUFBSixDQUFhdEIsSUFBSSxDQUFDWSxJQUFMLENBQVVDLFNBQVMsR0FBRyxhQUF0QixDQUFiO0FBQ0gsQ0FGRCxFLENBSUE7O0FBQ0FMLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLEdBQVIsRUFBWVgsTUFBWjs7QUFDQUQsT0FBTyxDQUFDLFVBQUQsQ0FBUCxDQUFvQlcsR0FBcEI7O0FBRUEsSUFBTWUsSUFBSSxHQUFHMUIsT0FBTyxDQUFDLGVBQUQsQ0FBcEI7O0FBQ0EsSUFBTTJCLE1BQU0sR0FBRzNCLE9BQU8sQ0FBQyxpQkFBRCxDQUF0Qjs7QUFDQSxJQUFNNEIsY0FBYyxHQUFHNUIsT0FBTyxDQUFDLHdCQUFELENBQTlCOztBQUNBLElBQU02QixTQUFTLEdBQUc3QixPQUFPLENBQUMsb0JBQUQsQ0FBekI7O0FBQ0EsSUFBTThCLFFBQVEsR0FBRzlCLE9BQU8sQ0FBQyxtQkFBRCxDQUF4Qjs7QUFDQSxJQUFNK0IsVUFBVSxHQUFHL0IsT0FBTyxDQUFDLHFCQUFELENBQTFCOztBQUNBLElBQU1nQyxXQUFXLEdBQUdoQyxPQUFPLENBQUMsc0JBQUQsQ0FBM0IsQyxDQUVBOzs7QUFDQTBCLElBQUksQ0FBQ08sT0FBTCxDQUFhTixNQUFiO0FBQ0FBLE1BQU0sQ0FBQ08sU0FBUCxDQUFpQlIsSUFBakIsRUFBdUI7QUFBRVMsRUFBQUEsV0FBVyxFQUFHLElBQWhCO0FBQXNCQyxFQUFBQSxRQUFRLEVBQUc7QUFBakMsQ0FBdkIsRSxDQUVBOztBQUNBUixjQUFjLENBQUNTLGFBQWYsQ0FBNkJSLFNBQTdCLEVBQXdDO0FBQUNTLEVBQUFBLE9BQU8sRUFBR047QUFBWCxDQUF4QztBQUNBSCxTQUFTLENBQUNRLGFBQVYsQ0FBd0JULGNBQXhCLEVBQXdDO0FBQUNVLEVBQUFBLE9BQU8sRUFBR047QUFBWCxDQUF4QyxFLENBRUE7O0FBQ0FKLGNBQWMsQ0FBQ1csTUFBZixDQUFzQlQsUUFBdEIsRSxDQUVBOztBQUNBRixjQUFjLENBQUNTLGFBQWYsQ0FBNkJULGNBQTdCLEVBQTZDO0FBQUVZLEVBQUFBLEVBQUUsRUFBRSxnQkFBTjtBQUF3QkYsRUFBQUEsT0FBTyxFQUFFUDtBQUFqQyxDQUE3QztBQUVBVSxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFFBQVosSUFBd0IsU0FBcEM7QUFFQW5DLFNBQVMsQ0FBQ29DLFlBQVYsR0FBeUJDLElBQXpCLENBQStCLFVBQUFDLEdBQUcsRUFBSTtBQUNsQ1AsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksb0NBQVosRUFEa0MsQ0FFbEM7O0FBQ0FoQyxFQUFBQSxTQUFTLENBQUN1QyxJQUFWLEdBQ0NGLElBREQsQ0FDTSxVQUFBRyxJQUFJLEVBQUk7QUFDVlQsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVkseUJBQVo7QUFDSCxHQUhELFdBR1UsVUFBQVMsR0FBRyxFQUFJO0FBQ2JWLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLG1CQUFaLEVBQWdDUyxHQUFoQztBQUNILEdBTEQ7QUFNSCxDQVRELFdBU1UsVUFBQUEsR0FBRyxFQUFJO0FBQ1pWLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHlCQUFaLEVBQXNDUyxHQUF0QztBQUNKLENBWEQ7QUFhQXhDLEdBQUcsQ0FBQ3lDLE1BQUosQ0FBV1QsT0FBTyxDQUFDQyxHQUFSLENBQVlTLElBQVosSUFBb0IsSUFBL0IiLCJzb3VyY2VSb290IjoiL1VzZXJzL0FsZXNzYW5kcm9fTXVzb2xpbm8vRGVza3RvcC9maXJzdEFQSSIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbmNvbnN0IHV1aWR2NCA9IHJlcXVpcmUoJ3V1aWQvdjQnKTtcbmNvbnN0IGJvZHlQYXJzZXIgPSByZXF1aXJlKCdib2R5LXBhcnNlcicpO1xuY29uc3QgcmVzZXJ2YXRpb25Sb3V0ZXMgPSByZXF1aXJlKCcuL3JvdXRlcy9yZXNlcnZhdGlvbicpO1xuY29uc3QgZnMgPSByZXF1aXJlKCdmcycpO1xudmFyIGhlbG1ldCA9IHJlcXVpcmUoJ2hlbG1ldCcpO1xudmFyIG1vcmdhbiA9IHJlcXVpcmUoJ21vcmdhbicpO1xuXG4vL2NvbnN0IGRiID0gcmVxdWlyZSgnLi91dGlscy9kYXRhYmFzZScpO1xuY29uc3Qgc2VxdWVsaXplICA9IHJlcXVpcmUoJy4vdXRpbHMvZGF0YWJhc2UnKTtcblxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuXG5hcHAudXNlKGhlbG1ldCgpKTtcblxuY29uc3QgbG9nU3RyZWFtID0gZnMuY3JlYXRlV3JpdGVTdHJlYW0ocGF0aC5qb2luKF9fZGlybmFtZSwgJ2FjY2Vzcy5sb2cnKSwge2ZsYWdzIDogJ2EnfSk7XG5hcHAudXNlKG1vcmdhbignY29tYmluZWQnLCB7c3RyZWFtIDogbG9nU3RyZWFtfSkpO1xuXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTsgLy9hcHBsaWNhdGlvbi9qc29uXG5cbmFwcC51c2UoKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgcmVzLnNldEhlYWRlcignQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luJywgJyonKTtcbiAgICByZXMuc2V0SGVhZGVyKCdBY2Nlc3MtQ29udHJvbC1BbGxvdy1NZXRob2RzJywgJ0dFVCwgUE9TVCwgUFVULCBQQVRDSCwgREVMRVRFJyk7XG4gICAgcmVzLnNldEhlYWRlcignQWNjZXNzLUNvbnRyb2wtQWxsb3ctSGVhZGVycycsICdDb250ZW50LVR5cGUsIEF1dGhvcml6YXRpb24nKTtcbiAgICBuZXh0KCk7XG59KTtcblxuYXBwLnVzZShleHByZXNzLnN0YXRpYygncHVibGljJykpO1xuXG5yb3V0ZXIuZ2V0KCcvJyxmdW5jdGlvbihyZXEscmVzKXtcbiAgICByZXMuc2VuZEZpbGUocGF0aC5qb2luKF9fZGlybmFtZSArICcvaW5kZXguaHRtbCcpKTtcbn0pO1xuXG4vL1JvdXRpbmdcbmFwcC51c2UoJy8nLHJvdXRlcik7XG5yZXF1aXJlKFwiLi9yb3V0ZXNcIikoYXBwKTtcblxuY29uc3QgVXNlciA9IHJlcXVpcmUoJy4vbW9kZWxzL3VzZXInKTtcbmNvbnN0IFRpY2tldCA9IHJlcXVpcmUoJy4vbW9kZWxzL3RpY2tldCcpO1xuY29uc3QgQXJ0aXN0aWNfRXZlbnQgPSByZXF1aXJlKCcuL21vZGVscy9hcnRpc3RpY2V2ZW50Jyk7XG5jb25zdCBQZXJmb3JtZXIgPSByZXF1aXJlKCcuL21vZGVscy9wZXJmb3JtZXInKTtcbmNvbnN0IFNlbWluYXJ5ID0gcmVxdWlyZSgnLi9tb2RlbHMvc2VtaW5hcnknKTtcbmNvbnN0IFNpbWlsYXJpdHkgPSByZXF1aXJlKCcuL21vZGVscy9zaW1pbGFyaXR5Jyk7XG5jb25zdCBQZXJmb3JtYW5jZSA9IHJlcXVpcmUoJy4vbW9kZWxzL3BlcmZvcm1hbmNlJyk7XG5cbi8vdXNlciBhbmQgdGlja2V0XG5Vc2VyLmhhc01hbnkoVGlja2V0KTtcblRpY2tldC5iZWxvbmdzVG8oVXNlciwgeyBjb25zdHJhaW50cyA6IHRydWUsIG9uRGVsZXRlIDogJ0NBU0NBREUnfSk7XG5cbi8vYXJ0aXN0aWMgZXZlbnQgYW5kIHBlcmZvcm1lclxuQXJ0aXN0aWNfRXZlbnQuYmVsb25nc1RvTWFueShQZXJmb3JtZXIsIHt0aHJvdWdoIDogUGVyZm9ybWFuY2V9KTtcblBlcmZvcm1lci5iZWxvbmdzVG9NYW55KEFydGlzdGljX0V2ZW50LCB7dGhyb3VnaCA6IFBlcmZvcm1hbmNlfSk7XG5cbi8vYXJ0aXN0aWMgZXZlbnQgYW5kIHNlbWluYXJ5XG5BcnRpc3RpY19FdmVudC5oYXNPbmUoU2VtaW5hcnkpO1xuXG4vL2FydGlzdGljIGV2ZW50IGFuZCBhcnRpc3RpYyBldmVudFxuQXJ0aXN0aWNfRXZlbnQuYmVsb25nc1RvTWFueShBcnRpc3RpY19FdmVudCwgeyBhczogJ2FydGlzdGljRXZlbnQyJywgdGhyb3VnaDogU2ltaWxhcml0eSB9KTtcblxuY29uc29sZS5sb2cocHJvY2Vzcy5lbnYuTk9ERV9FTlYgfHwgJ2RldmVsb3AnKTtcblxuc2VxdWVsaXplLmF1dGhlbnRpY2F0ZSgpLnRoZW4oIHJlYyA9PiB7XG4gICAgY29uc29sZS5sb2coJ0Nvbm5lc3Npb25lIFN0YWJpbGl0YSBjb24gU3VjY2Vzc28nKTtcbiAgICAvL3NlcXVlbGl6ZS5zeW5jKHtmb3JjZTp0cnVlfSlcbiAgICBzZXF1ZWxpemUuc3luYygpXG4gICAgLnRoZW4odXNlciA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdTeW5jIGFsIERCIGNvbiBTdWNjZXNzbycpO1xuICAgIH0pLmNhdGNoKCBlcnIgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZygnU3luYyBhbCBEQiBFcnJvcjonLGVycik7XG4gICAgfSk7XG59KS5jYXRjaCggZXJyID0+IHtcbiAgICAgY29uc29sZS5sb2coJ0Nvbm5lc3Npb24gYWwgREIgRXJyb3I6JyxlcnIpO1xufSk7XG5cbmFwcC5saXN0ZW4ocHJvY2Vzcy5lbnYuUE9SVCB8fCA4MDgxKTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "path",
        "uuidv4",
        "bodyParser",
        "reservationRoutes",
        "fs",
        "helmet",
        "morgan",
        "sequelize",
        "app",
        "use",
        "logStream",
        "createWriteStream",
        "join",
        "__dirname",
        "flags",
        "stream",
        "json",
        "req",
        "res",
        "next",
        "setHeader",
        "get",
        "sendFile",
        "User",
        "Ticket",
        "Artistic_Event",
        "Performer",
        "Seminary",
        "Similarity",
        "Performance",
        "hasMany",
        "belongsTo",
        "constraints",
        "onDelete",
        "belongsToMany",
        "through",
        "hasOne",
        "as",
        "console",
        "log",
        "process",
        "env",
        "NODE_ENV",
        "authenticate",
        "then",
        "rec",
        "sync",
        "user",
        "err",
        "listen",
        "PORT"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AACA,IAAMC,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMI,MAAM,GAAGJ,OAAO,CAAC,SAAD,CAAtB;;AACA,IAAMK,UAAU,GAAGL,OAAO,CAAC,aAAD,CAA1B;;AACA,IAAMM,iBAAiB,GAAGN,OAAO,CAAC,sBAAD,CAAjC;;AACA,IAAMO,EAAE,GAAGP,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAIQ,MAAM,GAAGR,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIS,MAAM,GAAGT,OAAO,CAAC,QAAD,CAApB,C,CAEA;;;AACA,IAAMU,SAAS,GAAIV,OAAO,CAAC,kBAAD,CAA1B;;AAEA,IAAMW,GAAG,GAAGZ,OAAO,EAAnB;AAEAY,GAAG,CAACC,GAAJ,CAAQJ,MAAM,EAAd;AAEA,IAAMK,SAAS,GAAGN,EAAE,CAACO,iBAAH,CAAqBX,IAAI,CAACY,IAAL,CAAUC,SAAV,EAAqB,YAArB,CAArB,EAAyD;AAACC,EAAAA,KAAK,EAAG;AAAT,CAAzD,CAAlB;AACAN,GAAG,CAACC,GAAJ,CAAQH,MAAM,CAAC,UAAD,EAAa;AAACS,EAAAA,MAAM,EAAGL;AAAV,CAAb,CAAd;AAEAF,GAAG,CAACC,GAAJ,CAAQP,UAAU,CAACc,IAAX,EAAR,E,CAA4B;;AAE5BR,GAAG,CAACC,GAAJ,CAAQ,UAACQ,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxBD,EAAAA,GAAG,CAACE,SAAJ,CAAc,6BAAd,EAA6C,GAA7C;AACAF,EAAAA,GAAG,CAACE,SAAJ,CAAc,8BAAd,EAA8C,+BAA9C;AACAF,EAAAA,GAAG,CAACE,SAAJ,CAAc,8BAAd,EAA8C,6BAA9C;AACAD,EAAAA,IAAI;AACP,CALD;AAOAX,GAAG,CAACC,GAAJ,CAAQb,OAAO,UAAP,CAAe,QAAf,CAAR;AAEAE,MAAM,CAACuB,GAAP,CAAW,GAAX,EAAe,UAASJ,GAAT,EAAaC,GAAb,EAAiB;AAC5BA,EAAAA,GAAG,CAACI,QAAJ,CAAatB,IAAI,CAACY,IAAL,CAAUC,SAAS,GAAG,aAAtB,CAAb;AACH,CAFD,E,CAIA;;AACAL,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAYX,MAAZ;;AACAD,OAAO,CAAC,UAAD,CAAP,CAAoBW,GAApB;;AAEA,IAAMe,IAAI,GAAG1B,OAAO,CAAC,eAAD,CAApB;;AACA,IAAM2B,MAAM,GAAG3B,OAAO,CAAC,iBAAD,CAAtB;;AACA,IAAM4B,cAAc,GAAG5B,OAAO,CAAC,wBAAD,CAA9B;;AACA,IAAM6B,SAAS,GAAG7B,OAAO,CAAC,oBAAD,CAAzB;;AACA,IAAM8B,QAAQ,GAAG9B,OAAO,CAAC,mBAAD,CAAxB;;AACA,IAAM+B,UAAU,GAAG/B,OAAO,CAAC,qBAAD,CAA1B;;AACA,IAAMgC,WAAW,GAAGhC,OAAO,CAAC,sBAAD,CAA3B,C,CAEA;;;AACA0B,IAAI,CAACO,OAAL,CAAaN,MAAb;AACAA,MAAM,CAACO,SAAP,CAAiBR,IAAjB,EAAuB;AAAES,EAAAA,WAAW,EAAG,IAAhB;AAAsBC,EAAAA,QAAQ,EAAG;AAAjC,CAAvB,E,CAEA;;AACAR,cAAc,CAACS,aAAf,CAA6BR,SAA7B,EAAwC;AAACS,EAAAA,OAAO,EAAGN;AAAX,CAAxC;AACAH,SAAS,CAACQ,aAAV,CAAwBT,cAAxB,EAAwC;AAACU,EAAAA,OAAO,EAAGN;AAAX,CAAxC,E,CAEA;;AACAJ,cAAc,CAACW,MAAf,CAAsBT,QAAtB,E,CAEA;;AACAF,cAAc,CAACS,aAAf,CAA6BT,cAA7B,EAA6C;AAAEY,EAAAA,EAAE,EAAE,gBAAN;AAAwBF,EAAAA,OAAO,EAAEP;AAAjC,CAA7C;AAEAU,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAAR,CAAYC,QAAZ,IAAwB,SAApC;AAEAnC,SAAS,CAACoC,YAAV,GAAyBC,IAAzB,CAA+B,UAAAC,GAAG,EAAI;AAClCP,EAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ,EADkC,CAElC;;AACAhC,EAAAA,SAAS,CAACuC,IAAV,GACCF,IADD,CACM,UAAAG,IAAI,EAAI;AACVT,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACH,GAHD,WAGU,UAAAS,GAAG,EAAI;AACbV,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgCS,GAAhC;AACH,GALD;AAMH,CATD,WASU,UAAAA,GAAG,EAAI;AACZV,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAsCS,GAAtC;AACJ,CAXD;AAaAxC,GAAG,CAACyC,MAAJ,CAAWT,OAAO,CAACC,GAAR,CAAYS,IAAZ,IAAoB,IAA/B",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "sourcesContent": [
        "const express = require('express');\nconst router = express.Router();\nconst path = require('path');\nconst uuidv4 = require('uuid/v4');\nconst bodyParser = require('body-parser');\nconst reservationRoutes = require('./routes/reservation');\nconst fs = require('fs');\nvar helmet = require('helmet');\nvar morgan = require('morgan');\n\n//const db = require('./utils/database');\nconst sequelize  = require('./utils/database');\n\nconst app = express();\n\napp.use(helmet());\n\nconst logStream = fs.createWriteStream(path.join(__dirname, 'access.log'), {flags : 'a'});\napp.use(morgan('combined', {stream : logStream}));\n\napp.use(bodyParser.json()); //application/json\n\napp.use((req, res, next) => {\n    res.setHeader('Access-Control-Allow-Origin', '*');\n    res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, PATCH, DELETE');\n    res.setHeader('Access-Control-Allow-Headers', 'Content-Type, Authorization');\n    next();\n});\n\napp.use(express.static('public'));\n\nrouter.get('/',function(req,res){\n    res.sendFile(path.join(__dirname + '/index.html'));\n});\n\n//Routing\napp.use('/',router);\nrequire(\"./routes\")(app);\n\nconst User = require('./models/user');\nconst Ticket = require('./models/ticket');\nconst Artistic_Event = require('./models/artisticevent');\nconst Performer = require('./models/performer');\nconst Seminary = require('./models/seminary');\nconst Similarity = require('./models/similarity');\nconst Performance = require('./models/performance');\n\n//user and ticket\nUser.hasMany(Ticket);\nTicket.belongsTo(User, { constraints : true, onDelete : 'CASCADE'});\n\n//artistic event and performer\nArtistic_Event.belongsToMany(Performer, {through : Performance});\nPerformer.belongsToMany(Artistic_Event, {through : Performance});\n\n//artistic event and seminary\nArtistic_Event.hasOne(Seminary);\n\n//artistic event and artistic event\nArtistic_Event.belongsToMany(Artistic_Event, { as: 'artisticEvent2', through: Similarity });\n\nconsole.log(process.env.NODE_ENV || 'develop');\n\nsequelize.authenticate().then( rec => {\n    console.log('Connessione Stabilita con Successo');\n    //sequelize.sync({force:true})\n    sequelize.sync()\n    .then(user => {\n        console.log('Sync al DB con Successo');\n    }).catch( err => {\n        console.log('Sync al DB Error:',err);\n    });\n}).catch( err => {\n     console.log('Connession al DB Error:',err);\n});\n\napp.listen(process.env.PORT || 8081);"
      ]
    },
    "sourceType": "script",
    "mtime": 1577444035723
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/routes/feed.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes/feed.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes/feed.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes/feed.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes",
        "sourceFileName": "feed.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar _require = require('express-validator/check'),\n    body = _require.body,\n    query = _require.query;\n\nvar router = express.Router();\n\nvar isAuth = require('../middleware/is-auth');\n\nvar feedController = require('../controllers/feed');\n\nvar path = require('path');\n\nvar multer = require('multer');\n\nvar uuidv4 = require('uuid/v4');\n\nvar storage = multer.diskStorage({\n  destination: function destination(req, file, callback) {\n    callback(null, 'public/images');\n  },\n  filename: function filename(req, file, callback) {\n    //callback(null, Date.now() + '-' + file.originalname);\n    callback(null, uuidv4() + path.extname(file.originalname));\n  }\n});\n\nvar fileFilter = function fileFilter(req, file, callback) {\n  if (file.mimetype == 'image/png' || file.mimetype == 'image/jpg' || file.mimetype == 'image/jpeg') {\n    callback(null, true);\n  } else {\n    req.fileValidationError = \"Estensione non consentita solo: 'image/jpg' | 'image/png' | 'image/jpeg'\";\n    callback(null, false);\n  }\n};\n\nvar upload = multer({\n  storage: storage,\n  fileFilter: fileFilter\n});\nvar cpUpload = upload.single('image');\nrouter.post('/post', [isAuth, cpUpload], [body('title').trim().isLowercase().withMessage('Titolo LowerCase').isLength({\n  min: 3\n}).withMessage('Titolo Maggiore di 3 Caratteri'), body('description').trim().isLength({\n  min: 5\n}).withMessage('Descrizione Maggiore di 5 Caratteri')], feedController.createPost);\nrouter.get('/post', feedController.getPosts);\nrouter.post('/post/:id/like', isAuth, feedController.likePost);\nrouter.get('/post/user/me', isAuth, feedController.getPostsByMe);\nrouter.get('/post/search', feedController.searchPost);\nrouter.get('/post/:id', feedController.getPost);\nrouter.put('/post/:id', isAuth, feedController.editPost);\nrouter[\"delete\"]('/post/:id', isAuth, feedController.deletePost);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZlZWQuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJib2R5IiwicXVlcnkiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJpc0F1dGgiLCJmZWVkQ29udHJvbGxlciIsInBhdGgiLCJtdWx0ZXIiLCJ1dWlkdjQiLCJzdG9yYWdlIiwiZGlza1N0b3JhZ2UiLCJkZXN0aW5hdGlvbiIsInJlcSIsImZpbGUiLCJjYWxsYmFjayIsImZpbGVuYW1lIiwiZXh0bmFtZSIsIm9yaWdpbmFsbmFtZSIsImZpbGVGaWx0ZXIiLCJtaW1ldHlwZSIsImZpbGVWYWxpZGF0aW9uRXJyb3IiLCJ1cGxvYWQiLCJjcFVwbG9hZCIsInNpbmdsZSIsInBvc3QiLCJ0cmltIiwiaXNMb3dlcmNhc2UiLCJ3aXRoTWVzc2FnZSIsImlzTGVuZ3RoIiwibWluIiwiY3JlYXRlUG9zdCIsImdldCIsImdldFBvc3RzIiwibGlrZVBvc3QiLCJnZXRQb3N0c0J5TWUiLCJzZWFyY2hQb3N0IiwiZ2V0UG9zdCIsInB1dCIsImVkaXRQb3N0IiwiZGVsZXRlUG9zdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7ZUFDd0JBLE9BQU8sQ0FBQyx5QkFBRCxDO0lBQXZCQyxJLFlBQUFBLEk7SUFBTUMsSyxZQUFBQSxLOztBQUNkLElBQU1DLE1BQU0sR0FBR0osT0FBTyxDQUFDSyxNQUFSLEVBQWY7O0FBRUEsSUFBTUMsTUFBTSxHQUFHTCxPQUFPLENBQUMsdUJBQUQsQ0FBdEI7O0FBRUEsSUFBTU0sY0FBYyxHQUFHTixPQUFPLENBQUMscUJBQUQsQ0FBOUI7O0FBRUEsSUFBTU8sSUFBSSxHQUFHUCxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxJQUFNUSxNQUFNLEdBQUdSLE9BQU8sQ0FBQyxRQUFELENBQXRCOztBQUNBLElBQU1TLE1BQU0sR0FBR1QsT0FBTyxDQUFDLFNBQUQsQ0FBdEI7O0FBRUEsSUFBTVUsT0FBTyxHQUFHRixNQUFNLENBQUNHLFdBQVAsQ0FBbUI7QUFDL0JDLEVBQUFBLFdBQVcsRUFBRyxxQkFBQ0MsR0FBRCxFQUFNQyxJQUFOLEVBQVlDLFFBQVosRUFBeUI7QUFDbkNBLElBQUFBLFFBQVEsQ0FBQyxJQUFELEVBQU8sZUFBUCxDQUFSO0FBQ0gsR0FIOEI7QUFJL0JDLEVBQUFBLFFBQVEsRUFBRyxrQkFBQ0gsR0FBRCxFQUFNQyxJQUFOLEVBQVlDLFFBQVosRUFBeUI7QUFDaEM7QUFDQUEsSUFBQUEsUUFBUSxDQUFDLElBQUQsRUFBT04sTUFBTSxLQUFLRixJQUFJLENBQUNVLE9BQUwsQ0FBYUgsSUFBSSxDQUFDSSxZQUFsQixDQUFsQixDQUFSO0FBQ0g7QUFQOEIsQ0FBbkIsQ0FBaEI7O0FBVUEsSUFBTUMsVUFBVSxHQUFJLFNBQWRBLFVBQWMsQ0FBQ04sR0FBRCxFQUFNQyxJQUFOLEVBQVlDLFFBQVosRUFBeUI7QUFDekMsTUFBR0QsSUFBSSxDQUFDTSxRQUFMLElBQWlCLFdBQWpCLElBQWdDTixJQUFJLENBQUNNLFFBQUwsSUFBaUIsV0FBakQsSUFBZ0VOLElBQUksQ0FBQ00sUUFBTCxJQUFpQixZQUFwRixFQUFrRztBQUM5RkwsSUFBQUEsUUFBUSxDQUFDLElBQUQsRUFBTyxJQUFQLENBQVI7QUFDSCxHQUZELE1BRU87QUFDSEYsSUFBQUEsR0FBRyxDQUFDUSxtQkFBSixHQUEwQiwwRUFBMUI7QUFDQU4sSUFBQUEsUUFBUSxDQUFDLElBQUQsRUFBTyxLQUFQLENBQVI7QUFDSDtBQUNKLENBUEQ7O0FBU0EsSUFBSU8sTUFBTSxHQUFHZCxNQUFNLENBQUM7QUFBRUUsRUFBQUEsT0FBTyxFQUFHQSxPQUFaO0FBQXFCUyxFQUFBQSxVQUFVLEVBQUdBO0FBQWxDLENBQUQsQ0FBbkI7QUFFQSxJQUFJSSxRQUFRLEdBQUdELE1BQU0sQ0FBQ0UsTUFBUCxDQUFjLE9BQWQsQ0FBZjtBQUVBckIsTUFBTSxDQUFDc0IsSUFBUCxDQUFZLE9BQVosRUFBcUIsQ0FBQ3BCLE1BQUQsRUFBU2tCLFFBQVQsQ0FBckIsRUFDSSxDQUNJdEIsSUFBSSxDQUFDLE9BQUQsQ0FBSixDQUFjeUIsSUFBZCxHQUNDQyxXQURELEdBQ2VDLFdBRGYsQ0FDMkIsa0JBRDNCLEVBRUNDLFFBRkQsQ0FFVTtBQUFDQyxFQUFBQSxHQUFHLEVBQUc7QUFBUCxDQUZWLEVBRXFCRixXQUZyQixDQUVpQyxnQ0FGakMsQ0FESixFQUlJM0IsSUFBSSxDQUFDLGFBQUQsQ0FBSixDQUFvQnlCLElBQXBCLEdBQ0NHLFFBREQsQ0FDVTtBQUFDQyxFQUFBQSxHQUFHLEVBQUc7QUFBUCxDQURWLEVBQ3FCRixXQURyQixDQUNpQyxxQ0FEakMsQ0FKSixDQURKLEVBUUN0QixjQUFjLENBQUN5QixVQVJoQjtBQVVBNUIsTUFBTSxDQUFDNkIsR0FBUCxDQUFXLE9BQVgsRUFBb0IxQixjQUFjLENBQUMyQixRQUFuQztBQUNBOUIsTUFBTSxDQUFDc0IsSUFBUCxDQUFZLGdCQUFaLEVBQThCcEIsTUFBOUIsRUFBc0NDLGNBQWMsQ0FBQzRCLFFBQXJEO0FBQ0EvQixNQUFNLENBQUM2QixHQUFQLENBQVcsZUFBWCxFQUE0QjNCLE1BQTVCLEVBQW1DQyxjQUFjLENBQUM2QixZQUFsRDtBQUNBaEMsTUFBTSxDQUFDNkIsR0FBUCxDQUFXLGNBQVgsRUFBMkIxQixjQUFjLENBQUM4QixVQUExQztBQUNBakMsTUFBTSxDQUFDNkIsR0FBUCxDQUFXLFdBQVgsRUFBd0IxQixjQUFjLENBQUMrQixPQUF2QztBQUNBbEMsTUFBTSxDQUFDbUMsR0FBUCxDQUFXLFdBQVgsRUFBd0JqQyxNQUF4QixFQUFnQ0MsY0FBYyxDQUFDaUMsUUFBL0M7QUFDQXBDLE1BQU0sVUFBTixDQUFjLFdBQWQsRUFBMkJFLE1BQTNCLEVBQW1DQyxjQUFjLENBQUNrQyxVQUFsRDtBQUdBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJ2QyxNQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvQWxlc3NhbmRyb19NdXNvbGluby9EZXNrdG9wL2ZpcnN0QVBJL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG5jb25zdCB7IGJvZHksIHF1ZXJ5IH0gPSByZXF1aXJlKCdleHByZXNzLXZhbGlkYXRvci9jaGVjaycpO1xuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcblxuY29uc3QgaXNBdXRoID0gcmVxdWlyZSgnLi4vbWlkZGxld2FyZS9pcy1hdXRoJyk7XG5cbmNvbnN0IGZlZWRDb250cm9sbGVyID0gcmVxdWlyZSgnLi4vY29udHJvbGxlcnMvZmVlZCcpO1xuXG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuY29uc3QgbXVsdGVyID0gcmVxdWlyZSgnbXVsdGVyJyk7XG5jb25zdCB1dWlkdjQgPSByZXF1aXJlKCd1dWlkL3Y0Jyk7XG5cbmNvbnN0IHN0b3JhZ2UgPSBtdWx0ZXIuZGlza1N0b3JhZ2Uoe1xuICAgIGRlc3RpbmF0aW9uIDogKHJlcSwgZmlsZSwgY2FsbGJhY2spID0+IHtcbiAgICAgICAgY2FsbGJhY2sobnVsbCwgJ3B1YmxpYy9pbWFnZXMnKTtcbiAgICB9LFxuICAgIGZpbGVuYW1lIDogKHJlcSwgZmlsZSwgY2FsbGJhY2spID0+IHtcbiAgICAgICAgLy9jYWxsYmFjayhudWxsLCBEYXRlLm5vdygpICsgJy0nICsgZmlsZS5vcmlnaW5hbG5hbWUpO1xuICAgICAgICBjYWxsYmFjayhudWxsLCB1dWlkdjQoKSArIHBhdGguZXh0bmFtZShmaWxlLm9yaWdpbmFsbmFtZSkpO1xuICAgIH0sXG59KTtcblxuY29uc3QgZmlsZUZpbHRlciA9ICgocmVxLCBmaWxlLCBjYWxsYmFjaykgPT4ge1xuICAgIGlmKGZpbGUubWltZXR5cGUgPT0gJ2ltYWdlL3BuZycgfHwgZmlsZS5taW1ldHlwZSA9PSAnaW1hZ2UvanBnJyB8fCBmaWxlLm1pbWV0eXBlID09ICdpbWFnZS9qcGVnJykge1xuICAgICAgICBjYWxsYmFjayhudWxsLCB0cnVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXEuZmlsZVZhbGlkYXRpb25FcnJvciA9IFwiRXN0ZW5zaW9uZSBub24gY29uc2VudGl0YSBzb2xvOiAnaW1hZ2UvanBnJyB8ICdpbWFnZS9wbmcnIHwgJ2ltYWdlL2pwZWcnXCI7XG4gICAgICAgIGNhbGxiYWNrKG51bGwsIGZhbHNlKTtcbiAgICB9XG59KTtcblxudmFyIHVwbG9hZCA9IG11bHRlcih7IHN0b3JhZ2UgOiBzdG9yYWdlLCBmaWxlRmlsdGVyIDogZmlsZUZpbHRlcn0pO1xuXG52YXIgY3BVcGxvYWQgPSB1cGxvYWQuc2luZ2xlKCdpbWFnZScpO1xuXG5yb3V0ZXIucG9zdCgnL3Bvc3QnLCBbaXNBdXRoLCBjcFVwbG9hZF0sXG4gICAgW1xuICAgICAgICBib2R5KCd0aXRsZScpLnRyaW0oKVxuICAgICAgICAuaXNMb3dlcmNhc2UoKS53aXRoTWVzc2FnZSgnVGl0b2xvIExvd2VyQ2FzZScpXG4gICAgICAgIC5pc0xlbmd0aCh7bWluIDogM30pLndpdGhNZXNzYWdlKCdUaXRvbG8gTWFnZ2lvcmUgZGkgMyBDYXJhdHRlcmknKSxcbiAgICAgICAgYm9keSgnZGVzY3JpcHRpb24nKS50cmltKClcbiAgICAgICAgLmlzTGVuZ3RoKHttaW4gOiA1fSkud2l0aE1lc3NhZ2UoJ0Rlc2NyaXppb25lIE1hZ2dpb3JlIGRpIDUgQ2FyYXR0ZXJpJyksXG4gICAgXVxuLGZlZWRDb250cm9sbGVyLmNyZWF0ZVBvc3QpO1xuXG5yb3V0ZXIuZ2V0KCcvcG9zdCcsIGZlZWRDb250cm9sbGVyLmdldFBvc3RzKTtcbnJvdXRlci5wb3N0KCcvcG9zdC86aWQvbGlrZScsIGlzQXV0aCwgZmVlZENvbnRyb2xsZXIubGlrZVBvc3QpO1xucm91dGVyLmdldCgnL3Bvc3QvdXNlci9tZScsIGlzQXV0aCxmZWVkQ29udHJvbGxlci5nZXRQb3N0c0J5TWUpO1xucm91dGVyLmdldCgnL3Bvc3Qvc2VhcmNoJywgZmVlZENvbnRyb2xsZXIuc2VhcmNoUG9zdCk7XG5yb3V0ZXIuZ2V0KCcvcG9zdC86aWQnLCBmZWVkQ29udHJvbGxlci5nZXRQb3N0KTtcbnJvdXRlci5wdXQoJy9wb3N0LzppZCcsIGlzQXV0aCwgZmVlZENvbnRyb2xsZXIuZWRpdFBvc3QpO1xucm91dGVyLmRlbGV0ZSgnL3Bvc3QvOmlkJywgaXNBdXRoLCBmZWVkQ29udHJvbGxlci5kZWxldGVQb3N0KTtcblxuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "feed.js"
      ],
      "names": [
        "express",
        "require",
        "body",
        "query",
        "router",
        "Router",
        "isAuth",
        "feedController",
        "path",
        "multer",
        "uuidv4",
        "storage",
        "diskStorage",
        "destination",
        "req",
        "file",
        "callback",
        "filename",
        "extname",
        "originalname",
        "fileFilter",
        "mimetype",
        "fileValidationError",
        "upload",
        "cpUpload",
        "single",
        "post",
        "trim",
        "isLowercase",
        "withMessage",
        "isLength",
        "min",
        "createPost",
        "get",
        "getPosts",
        "likePost",
        "getPostsByMe",
        "searchPost",
        "getPost",
        "put",
        "editPost",
        "deletePost",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;eACwBA,OAAO,CAAC,yBAAD,C;IAAvBC,I,YAAAA,I;IAAMC,K,YAAAA,K;;AACd,IAAMC,MAAM,GAAGJ,OAAO,CAACK,MAAR,EAAf;;AAEA,IAAMC,MAAM,GAAGL,OAAO,CAAC,uBAAD,CAAtB;;AAEA,IAAMM,cAAc,GAAGN,OAAO,CAAC,qBAAD,CAA9B;;AAEA,IAAMO,IAAI,GAAGP,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMQ,MAAM,GAAGR,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMS,MAAM,GAAGT,OAAO,CAAC,SAAD,CAAtB;;AAEA,IAAMU,OAAO,GAAGF,MAAM,CAACG,WAAP,CAAmB;AAC/BC,EAAAA,WAAW,EAAG,qBAACC,GAAD,EAAMC,IAAN,EAAYC,QAAZ,EAAyB;AACnCA,IAAAA,QAAQ,CAAC,IAAD,EAAO,eAAP,CAAR;AACH,GAH8B;AAI/BC,EAAAA,QAAQ,EAAG,kBAACH,GAAD,EAAMC,IAAN,EAAYC,QAAZ,EAAyB;AAChC;AACAA,IAAAA,QAAQ,CAAC,IAAD,EAAON,MAAM,KAAKF,IAAI,CAACU,OAAL,CAAaH,IAAI,CAACI,YAAlB,CAAlB,CAAR;AACH;AAP8B,CAAnB,CAAhB;;AAUA,IAAMC,UAAU,GAAI,SAAdA,UAAc,CAACN,GAAD,EAAMC,IAAN,EAAYC,QAAZ,EAAyB;AACzC,MAAGD,IAAI,CAACM,QAAL,IAAiB,WAAjB,IAAgCN,IAAI,CAACM,QAAL,IAAiB,WAAjD,IAAgEN,IAAI,CAACM,QAAL,IAAiB,YAApF,EAAkG;AAC9FL,IAAAA,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAR;AACH,GAFD,MAEO;AACHF,IAAAA,GAAG,CAACQ,mBAAJ,GAA0B,0EAA1B;AACAN,IAAAA,QAAQ,CAAC,IAAD,EAAO,KAAP,CAAR;AACH;AACJ,CAPD;;AASA,IAAIO,MAAM,GAAGd,MAAM,CAAC;AAAEE,EAAAA,OAAO,EAAGA,OAAZ;AAAqBS,EAAAA,UAAU,EAAGA;AAAlC,CAAD,CAAnB;AAEA,IAAII,QAAQ,GAAGD,MAAM,CAACE,MAAP,CAAc,OAAd,CAAf;AAEArB,MAAM,CAACsB,IAAP,CAAY,OAAZ,EAAqB,CAACpB,MAAD,EAASkB,QAAT,CAArB,EACI,CACItB,IAAI,CAAC,OAAD,CAAJ,CAAcyB,IAAd,GACCC,WADD,GACeC,WADf,CAC2B,kBAD3B,EAECC,QAFD,CAEU;AAACC,EAAAA,GAAG,EAAG;AAAP,CAFV,EAEqBF,WAFrB,CAEiC,gCAFjC,CADJ,EAII3B,IAAI,CAAC,aAAD,CAAJ,CAAoByB,IAApB,GACCG,QADD,CACU;AAACC,EAAAA,GAAG,EAAG;AAAP,CADV,EACqBF,WADrB,CACiC,qCADjC,CAJJ,CADJ,EAQCtB,cAAc,CAACyB,UARhB;AAUA5B,MAAM,CAAC6B,GAAP,CAAW,OAAX,EAAoB1B,cAAc,CAAC2B,QAAnC;AACA9B,MAAM,CAACsB,IAAP,CAAY,gBAAZ,EAA8BpB,MAA9B,EAAsCC,cAAc,CAAC4B,QAArD;AACA/B,MAAM,CAAC6B,GAAP,CAAW,eAAX,EAA4B3B,MAA5B,EAAmCC,cAAc,CAAC6B,YAAlD;AACAhC,MAAM,CAAC6B,GAAP,CAAW,cAAX,EAA2B1B,cAAc,CAAC8B,UAA1C;AACAjC,MAAM,CAAC6B,GAAP,CAAW,WAAX,EAAwB1B,cAAc,CAAC+B,OAAvC;AACAlC,MAAM,CAACmC,GAAP,CAAW,WAAX,EAAwBjC,MAAxB,EAAgCC,cAAc,CAACiC,QAA/C;AACApC,MAAM,UAAN,CAAc,WAAd,EAA2BE,MAA3B,EAAmCC,cAAc,CAACkC,UAAlD;AAGAC,MAAM,CAACC,OAAP,GAAiBvC,MAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes",
      "sourcesContent": [
        "const express = require('express');\nconst { body, query } = require('express-validator/check');\nconst router = express.Router();\n\nconst isAuth = require('../middleware/is-auth');\n\nconst feedController = require('../controllers/feed');\n\nconst path = require('path');\nconst multer = require('multer');\nconst uuidv4 = require('uuid/v4');\n\nconst storage = multer.diskStorage({\n    destination : (req, file, callback) => {\n        callback(null, 'public/images');\n    },\n    filename : (req, file, callback) => {\n        //callback(null, Date.now() + '-' + file.originalname);\n        callback(null, uuidv4() + path.extname(file.originalname));\n    },\n});\n\nconst fileFilter = ((req, file, callback) => {\n    if(file.mimetype == 'image/png' || file.mimetype == 'image/jpg' || file.mimetype == 'image/jpeg') {\n        callback(null, true);\n    } else {\n        req.fileValidationError = \"Estensione non consentita solo: 'image/jpg' | 'image/png' | 'image/jpeg'\";\n        callback(null, false);\n    }\n});\n\nvar upload = multer({ storage : storage, fileFilter : fileFilter});\n\nvar cpUpload = upload.single('image');\n\nrouter.post('/post', [isAuth, cpUpload],\n    [\n        body('title').trim()\n        .isLowercase().withMessage('Titolo LowerCase')\n        .isLength({min : 3}).withMessage('Titolo Maggiore di 3 Caratteri'),\n        body('description').trim()\n        .isLength({min : 5}).withMessage('Descrizione Maggiore di 5 Caratteri'),\n    ]\n,feedController.createPost);\n\nrouter.get('/post', feedController.getPosts);\nrouter.post('/post/:id/like', isAuth, feedController.likePost);\nrouter.get('/post/user/me', isAuth,feedController.getPostsByMe);\nrouter.get('/post/search', feedController.searchPost);\nrouter.get('/post/:id', feedController.getPost);\nrouter.put('/post/:id', isAuth, feedController.editPost);\nrouter.delete('/post/:id', isAuth, feedController.deletePost);\n\n\nmodule.exports = router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1577043507727
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/middleware\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/middleware/is-auth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/middleware",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/middleware/is-auth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/firstAPI/middleware/is-auth.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/middleware/is-auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/middleware",
        "sourceFileName": "is-auth.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar jwt = require('jsonwebtoken');\n\nvar User = require('../models/user');\n\nmodule.exports = function (req, res, next) {\n  console.log('AUTHORIZATION MIDDLEWARE');\n  console.log(req.get('Authorization'));\n  var auth = req.get('Authorization');\n\n  if (!auth) {\n    return res.status(401).json({\n      message: 'Non autorizzato'\n    });\n  }\n\n  var token = auth.split(' ')[1];\n  var decode;\n\n  try {\n    decode = jwt.verify(token, 'axAYgScUa4Z2UdjgirykmI3iZsSCaPGh');\n  } catch (err) {\n    return res.status(500).json({\n      message: 'Non autorizzato'\n    });\n  }\n\n  if (!decode) {\n    return res.status(401).json({\n      message: 'Non autorizzato'\n    });\n  }\n\n  var userId = decode.id;\n  User.findByPk(userId).then(function (user) {\n    req.user = user;\n    next();\n  })[\"catch\"](function (err) {\n    return res.status(401).json({\n      message: 'Non autorizzato'\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlzLWF1dGguanMiXSwibmFtZXMiOlsiand0IiwicmVxdWlyZSIsIlVzZXIiLCJtb2R1bGUiLCJleHBvcnRzIiwicmVxIiwicmVzIiwibmV4dCIsImNvbnNvbGUiLCJsb2ciLCJnZXQiLCJhdXRoIiwic3RhdHVzIiwianNvbiIsIm1lc3NhZ2UiLCJ0b2tlbiIsInNwbGl0IiwiZGVjb2RlIiwidmVyaWZ5IiwiZXJyIiwidXNlcklkIiwiaWQiLCJmaW5kQnlQayIsInRoZW4iLCJ1c2VyIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLEdBQUcsR0FBR0MsT0FBTyxDQUFDLGNBQUQsQ0FBbkI7O0FBQ0EsSUFBTUMsSUFBSSxHQUFHRCxPQUFPLENBQUMsZ0JBQUQsQ0FBcEI7O0FBRUFFLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFvQjtBQUNqQ0MsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksMEJBQVo7QUFDQUQsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlKLEdBQUcsQ0FBQ0ssR0FBSixDQUFRLGVBQVIsQ0FBWjtBQUVBLE1BQU1DLElBQUksR0FBR04sR0FBRyxDQUFDSyxHQUFKLENBQVEsZUFBUixDQUFiOztBQUVBLE1BQUcsQ0FBQ0MsSUFBSixFQUFVO0FBQ04sV0FBT0wsR0FBRyxDQUFDTSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDeEJDLE1BQUFBLE9BQU8sRUFBRztBQURjLEtBQXJCLENBQVA7QUFHSDs7QUFFRCxNQUFNQyxLQUFLLEdBQUdKLElBQUksQ0FBQ0ssS0FBTCxDQUFXLEdBQVgsRUFBZ0IsQ0FBaEIsQ0FBZDtBQUNBLE1BQUlDLE1BQUo7O0FBQ0EsTUFBRztBQUNDQSxJQUFBQSxNQUFNLEdBQUdqQixHQUFHLENBQUNrQixNQUFKLENBQVdILEtBQVgsRUFBa0Isa0NBQWxCLENBQVQ7QUFDSCxHQUZELENBRUMsT0FBTUksR0FBTixFQUFVO0FBQ1AsV0FBT2IsR0FBRyxDQUFDTSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDeEJDLE1BQUFBLE9BQU8sRUFBRztBQURjLEtBQXJCLENBQVA7QUFHSDs7QUFFRCxNQUFHLENBQUNHLE1BQUosRUFBWTtBQUNSLFdBQU9YLEdBQUcsQ0FBQ00sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ3hCQyxNQUFBQSxPQUFPLEVBQUc7QUFEYyxLQUFyQixDQUFQO0FBR0g7O0FBRUQsTUFBSU0sTUFBTSxHQUFHSCxNQUFNLENBQUNJLEVBQXBCO0FBRUFuQixFQUFBQSxJQUFJLENBQUNvQixRQUFMLENBQWNGLE1BQWQsRUFDQ0csSUFERCxDQUNNLFVBQUFDLElBQUksRUFBSTtBQUNWbkIsSUFBQUEsR0FBRyxDQUFDbUIsSUFBSixHQUFXQSxJQUFYO0FBQ0FqQixJQUFBQSxJQUFJO0FBQ1AsR0FKRCxXQUlTLFVBQUFZLEdBQUcsRUFBSTtBQUNaLFdBQU9iLEdBQUcsQ0FBQ00sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ3hCQyxNQUFBQSxPQUFPLEVBQUc7QUFEYyxLQUFyQixDQUFQO0FBR0gsR0FSRDtBQVNILENBdkNEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9BbGVzc2FuZHJvX011c29saW5vL0Rlc2t0b3AvZmlyc3RBUEkvbWlkZGxld2FyZSIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGp3dCA9IHJlcXVpcmUoJ2pzb253ZWJ0b2tlbicpO1xuY29uc3QgVXNlciA9IHJlcXVpcmUoJy4uL21vZGVscy91c2VyJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgY29uc29sZS5sb2coJ0FVVEhPUklaQVRJT04gTUlERExFV0FSRScpO1xuICAgIGNvbnNvbGUubG9nKHJlcS5nZXQoJ0F1dGhvcml6YXRpb24nKSk7XG5cbiAgICBjb25zdCBhdXRoID0gcmVxLmdldCgnQXV0aG9yaXphdGlvbicpO1xuXG4gICAgaWYoIWF1dGgpIHtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5qc29uKHtcbiAgICAgICAgICAgIG1lc3NhZ2UgOiAnTm9uIGF1dG9yaXp6YXRvJyxcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgY29uc3QgdG9rZW4gPSBhdXRoLnNwbGl0KCcgJylbMV07XG4gICAgbGV0IGRlY29kZTtcbiAgICB0cnl7XG4gICAgICAgIGRlY29kZSA9IGp3dC52ZXJpZnkodG9rZW4sICdheEFZZ1NjVWE0WjJVZGpnaXJ5a21JM2lac1NDYVBHaCcpO1xuICAgIH1jYXRjaChlcnIpe1xuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oe1xuICAgICAgICAgICAgbWVzc2FnZSA6ICdOb24gYXV0b3JpenphdG8nLFxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBpZighZGVjb2RlKSB7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuanNvbih7XG4gICAgICAgICAgICBtZXNzYWdlIDogJ05vbiBhdXRvcml6emF0bycsXG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGxldCB1c2VySWQgPSBkZWNvZGUuaWQ7XG4gICAgXG4gICAgVXNlci5maW5kQnlQayh1c2VySWQpXG4gICAgLnRoZW4odXNlciA9PiB7XG4gICAgICAgIHJlcS51c2VyID0gdXNlcjtcbiAgICAgICAgbmV4dCgpO1xuICAgIH0pLmNhdGNoKGVyciA9PiB7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuanNvbih7XG4gICAgICAgICAgICBtZXNzYWdlIDogJ05vbiBhdXRvcml6emF0bycsXG4gICAgICAgIH0pO1xuICAgIH0pO1xufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "is-auth.js"
      ],
      "names": [
        "jwt",
        "require",
        "User",
        "module",
        "exports",
        "req",
        "res",
        "next",
        "console",
        "log",
        "get",
        "auth",
        "status",
        "json",
        "message",
        "token",
        "split",
        "decode",
        "verify",
        "err",
        "userId",
        "id",
        "findByPk",
        "then",
        "user"
      ],
      "mappings": ";;AAAA,IAAMA,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,gBAAD,CAApB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,GAAJ,CAAQ,eAAR,CAAZ;AAEA,MAAMC,IAAI,GAAGN,GAAG,CAACK,GAAJ,CAAQ,eAAR,CAAb;;AAEA,MAAG,CAACC,IAAJ,EAAU;AACN,WAAOL,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,OAAO,EAAG;AADc,KAArB,CAAP;AAGH;;AAED,MAAMC,KAAK,GAAGJ,IAAI,CAACK,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAd;AACA,MAAIC,MAAJ;;AACA,MAAG;AACCA,IAAAA,MAAM,GAAGjB,GAAG,CAACkB,MAAJ,CAAWH,KAAX,EAAkB,kCAAlB,CAAT;AACH,GAFD,CAEC,OAAMI,GAAN,EAAU;AACP,WAAOb,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,OAAO,EAAG;AADc,KAArB,CAAP;AAGH;;AAED,MAAG,CAACG,MAAJ,EAAY;AACR,WAAOX,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,OAAO,EAAG;AADc,KAArB,CAAP;AAGH;;AAED,MAAIM,MAAM,GAAGH,MAAM,CAACI,EAApB;AAEAnB,EAAAA,IAAI,CAACoB,QAAL,CAAcF,MAAd,EACCG,IADD,CACM,UAAAC,IAAI,EAAI;AACVnB,IAAAA,GAAG,CAACmB,IAAJ,GAAWA,IAAX;AACAjB,IAAAA,IAAI;AACP,GAJD,WAIS,UAAAY,GAAG,EAAI;AACZ,WAAOb,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,OAAO,EAAG;AADc,KAArB,CAAP;AAGH,GARD;AASH,CAvCD",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/middleware",
      "sourcesContent": [
        "const jwt = require('jsonwebtoken');\nconst User = require('../models/user');\n\nmodule.exports = (req, res, next) => {\n    console.log('AUTHORIZATION MIDDLEWARE');\n    console.log(req.get('Authorization'));\n\n    const auth = req.get('Authorization');\n\n    if(!auth) {\n        return res.status(401).json({\n            message : 'Non autorizzato',\n        });\n    }\n\n    const token = auth.split(' ')[1];\n    let decode;\n    try{\n        decode = jwt.verify(token, 'axAYgScUa4Z2UdjgirykmI3iZsSCaPGh');\n    }catch(err){\n        return res.status(500).json({\n            message : 'Non autorizzato',\n        });\n    }\n\n    if(!decode) {\n        return res.status(401).json({\n            message : 'Non autorizzato',\n        });\n    }\n\n    let userId = decode.id;\n    \n    User.findByPk(userId)\n    .then(user => {\n        req.user = user;\n        next();\n    }).catch(err => {\n        return res.status(401).json({\n            message : 'Non autorizzato',\n        });\n    });\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1576239096441
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/models/user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/models/user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/firstAPI/models/user.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/models/user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/models",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar Sequelize = require('sequelize');\n\nvar sequelize = require('../utils/database');\n\nvar User = sequelize.define('user', {\n  id: {\n    type: Sequelize.INTEGER,\n    autoIncrement: true,\n    allowNull: false,\n    primaryKey: true\n  },\n  name: {\n    type: Sequelize.STRING,\n    allowNull: false\n  },\n  email: {\n    type: Sequelize.STRING,\n    allowNull: false\n  },\n  phoneNumber: {\n    type: Sequelize.STRING,\n    allowNull: false\n  },\n  password: {\n    type: Sequelize.STRING,\n    allowNull: false\n  }\n});\nmodule.exports = User;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsiU2VxdWVsaXplIiwicmVxdWlyZSIsInNlcXVlbGl6ZSIsIlVzZXIiLCJkZWZpbmUiLCJpZCIsInR5cGUiLCJJTlRFR0VSIiwiYXV0b0luY3JlbWVudCIsImFsbG93TnVsbCIsInByaW1hcnlLZXkiLCJuYW1lIiwiU1RSSU5HIiwiZW1haWwiLCJwaG9uZU51bWJlciIsInBhc3N3b3JkIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxTQUFTLEdBQUdDLE9BQU8sQ0FBQyxXQUFELENBQXpCOztBQUVBLElBQU1DLFNBQVMsR0FBR0QsT0FBTyxDQUFDLG1CQUFELENBQXpCOztBQUVBLElBQU1FLElBQUksR0FBR0QsU0FBUyxDQUFDRSxNQUFWLENBQWlCLE1BQWpCLEVBQXlCO0FBQ2xDQyxFQUFBQSxFQUFFLEVBQUc7QUFDREMsSUFBQUEsSUFBSSxFQUFHTixTQUFTLENBQUNPLE9BRGhCO0FBRURDLElBQUFBLGFBQWEsRUFBRyxJQUZmO0FBR0RDLElBQUFBLFNBQVMsRUFBRyxLQUhYO0FBSURDLElBQUFBLFVBQVUsRUFBRztBQUpaLEdBRDZCO0FBT2xDQyxFQUFBQSxJQUFJLEVBQUc7QUFDSEwsSUFBQUEsSUFBSSxFQUFHTixTQUFTLENBQUNZLE1BRGQ7QUFFSEgsSUFBQUEsU0FBUyxFQUFHO0FBRlQsR0FQMkI7QUFXbENJLEVBQUFBLEtBQUssRUFBRztBQUNKUCxJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ1ksTUFEYjtBQUVKSCxJQUFBQSxTQUFTLEVBQUc7QUFGUixHQVgwQjtBQWVsQ0ssRUFBQUEsV0FBVyxFQUFHO0FBQ1ZSLElBQUFBLElBQUksRUFBR04sU0FBUyxDQUFDWSxNQURQO0FBRVZILElBQUFBLFNBQVMsRUFBRztBQUZGLEdBZm9CO0FBbUJsQ00sRUFBQUEsUUFBUSxFQUFHO0FBQ1BULElBQUFBLElBQUksRUFBR04sU0FBUyxDQUFDWSxNQURWO0FBRVBILElBQUFBLFNBQVMsRUFBRztBQUZMO0FBbkJ1QixDQUF6QixDQUFiO0FBeUJBTyxNQUFNLENBQUNDLE9BQVAsR0FBaUJkLElBQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9BbGVzc2FuZHJvX011c29saW5vL0Rlc2t0b3AvZmlyc3RBUEkvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU2VxdWVsaXplID0gcmVxdWlyZSgnc2VxdWVsaXplJyk7XG5cbmNvbnN0IHNlcXVlbGl6ZSA9IHJlcXVpcmUoJy4uL3V0aWxzL2RhdGFiYXNlJyk7XG5cbmNvbnN0IFVzZXIgPSBzZXF1ZWxpemUuZGVmaW5lKCd1c2VyJywge1xuICAgIGlkIDoge1xuICAgICAgICB0eXBlIDogU2VxdWVsaXplLklOVEVHRVIsXG4gICAgICAgIGF1dG9JbmNyZW1lbnQgOiB0cnVlLFxuICAgICAgICBhbGxvd051bGwgOiBmYWxzZSxcbiAgICAgICAgcHJpbWFyeUtleSA6IHRydWVcbiAgICB9LFxuICAgIG5hbWUgOiB7XG4gICAgICAgIHR5cGUgOiBTZXF1ZWxpemUuU1RSSU5HLFxuICAgICAgICBhbGxvd051bGwgOiBmYWxzZSxcbiAgICB9LFxuICAgIGVtYWlsIDoge1xuICAgICAgICB0eXBlIDogU2VxdWVsaXplLlNUUklORyxcbiAgICAgICAgYWxsb3dOdWxsIDogZmFsc2UsXG4gICAgfSxcbiAgICBwaG9uZU51bWJlciA6IHtcbiAgICAgICAgdHlwZSA6IFNlcXVlbGl6ZS5TVFJJTkcsXG4gICAgICAgIGFsbG93TnVsbCA6IGZhbHNlLFxuICAgIH0sXG4gICAgcGFzc3dvcmQgOiB7XG4gICAgICAgIHR5cGUgOiBTZXF1ZWxpemUuU1RSSU5HLFxuICAgICAgICBhbGxvd051bGwgOiBmYWxzZSxcbiAgICB9LFxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gVXNlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "sequelize",
        "User",
        "define",
        "id",
        "type",
        "INTEGER",
        "autoIncrement",
        "allowNull",
        "primaryKey",
        "name",
        "STRING",
        "email",
        "phoneNumber",
        "password",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,IAAMC,SAAS,GAAGD,OAAO,CAAC,mBAAD,CAAzB;;AAEA,IAAME,IAAI,GAAGD,SAAS,CAACE,MAAV,CAAiB,MAAjB,EAAyB;AAClCC,EAAAA,EAAE,EAAG;AACDC,IAAAA,IAAI,EAAGN,SAAS,CAACO,OADhB;AAEDC,IAAAA,aAAa,EAAG,IAFf;AAGDC,IAAAA,SAAS,EAAG,KAHX;AAIDC,IAAAA,UAAU,EAAG;AAJZ,GAD6B;AAOlCC,EAAAA,IAAI,EAAG;AACHL,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADd;AAEHH,IAAAA,SAAS,EAAG;AAFT,GAP2B;AAWlCI,EAAAA,KAAK,EAAG;AACJP,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADb;AAEJH,IAAAA,SAAS,EAAG;AAFR,GAX0B;AAelCK,EAAAA,WAAW,EAAG;AACVR,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADP;AAEVH,IAAAA,SAAS,EAAG;AAFF,GAfoB;AAmBlCM,EAAAA,QAAQ,EAAG;AACPT,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADV;AAEPH,IAAAA,SAAS,EAAG;AAFL;AAnBuB,CAAzB,CAAb;AAyBAO,MAAM,CAACC,OAAP,GAAiBd,IAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/models",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst User = sequelize.define('user', {\n    id : {\n        type : Sequelize.INTEGER,\n        autoIncrement : true,\n        allowNull : false,\n        primaryKey : true\n    },\n    name : {\n        type : Sequelize.STRING,\n        allowNull : false,\n    },\n    email : {\n        type : Sequelize.STRING,\n        allowNull : false,\n    },\n    phoneNumber : {\n        type : Sequelize.STRING,\n        allowNull : false,\n    },\n    password : {\n        type : Sequelize.STRING,\n        allowNull : false,\n    },\n});\n\nmodule.exports = User;"
      ]
    },
    "sourceType": "script",
    "mtime": 1576678769819
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/utils\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/utils/database.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/utils",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/utils/database.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/firstAPI/utils/database.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/utils/database.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/utils",
        "sourceFileName": "database.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar Sequelize = require('sequelize');\n\nvar sequelize = new Sequelize(process.env.NODE_DATABASE, process.env.NODE_DATABASE_USER, process.env.NODE_DATABASE_PW, {\n  dialect: 'mysql',\n  host: process.env.NODE_DATABASE_URL\n});\nmodule.exports = sequelize;\n/*const mysql = require('mysql2');\n\nconst pool = mysql.createPool({\n    host : 'localhost',\n    database : 'dreamland_festival',\n    user : 'root',\n    password : 'rootroot'\n});\n\nmodule.exports = pool.promise();\n*/\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGFiYXNlLmpzIl0sIm5hbWVzIjpbIlNlcXVlbGl6ZSIsInJlcXVpcmUiLCJzZXF1ZWxpemUiLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9EQVRBQkFTRSIsIk5PREVfREFUQUJBU0VfVVNFUiIsIk5PREVfREFUQUJBU0VfUFciLCJkaWFsZWN0IiwiaG9zdCIsIk5PREVfREFUQUJBU0VfVVJMIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxTQUFTLEdBQUdDLE9BQU8sQ0FBQyxXQUFELENBQXpCOztBQUVBLElBQU1DLFNBQVMsR0FBRyxJQUFJRixTQUFKLENBQWNHLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxhQUExQixFQUNkRixPQUFPLENBQUNDLEdBQVIsQ0FBWUUsa0JBREUsRUFFZEgsT0FBTyxDQUFDQyxHQUFSLENBQVlHLGdCQUZFLEVBR2xCO0FBQ0lDLEVBQUFBLE9BQU8sRUFBRyxPQURkO0FBRUlDLEVBQUFBLElBQUksRUFBR04sT0FBTyxDQUFDQyxHQUFSLENBQVlNO0FBRnZCLENBSGtCLENBQWxCO0FBU0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlYsU0FBakI7QUFFQSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvQWxlc3NhbmRyb19NdXNvbGluby9EZXNrdG9wL2ZpcnN0QVBJL3V0aWxzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU2VxdWVsaXplID0gcmVxdWlyZSgnc2VxdWVsaXplJyk7XG5cbmNvbnN0IHNlcXVlbGl6ZSA9IG5ldyBTZXF1ZWxpemUocHJvY2Vzcy5lbnYuTk9ERV9EQVRBQkFTRSwgXG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9EQVRBQkFTRV9VU0VSLCBcbiAgICBwcm9jZXNzLmVudi5OT0RFX0RBVEFCQVNFX1BXLCBcbntcbiAgICBkaWFsZWN0IDogJ215c3FsJyxcbiAgICBob3N0IDogcHJvY2Vzcy5lbnYuTk9ERV9EQVRBQkFTRV9VUkxcbn1cbik7XG5cbm1vZHVsZS5leHBvcnRzID0gc2VxdWVsaXplO1xuXG4vKmNvbnN0IG15c3FsID0gcmVxdWlyZSgnbXlzcWwyJyk7XG5cbmNvbnN0IHBvb2wgPSBteXNxbC5jcmVhdGVQb29sKHtcbiAgICBob3N0IDogJ2xvY2FsaG9zdCcsXG4gICAgZGF0YWJhc2UgOiAnZHJlYW1sYW5kX2Zlc3RpdmFsJyxcbiAgICB1c2VyIDogJ3Jvb3QnLFxuICAgIHBhc3N3b3JkIDogJ3Jvb3Ryb290J1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gcG9vbC5wcm9taXNlKCk7XG4qLyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "database.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "sequelize",
        "process",
        "env",
        "NODE_DATABASE",
        "NODE_DATABASE_USER",
        "NODE_DATABASE_PW",
        "dialect",
        "host",
        "NODE_DATABASE_URL",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,IAAMC,SAAS,GAAG,IAAIF,SAAJ,CAAcG,OAAO,CAACC,GAAR,CAAYC,aAA1B,EACdF,OAAO,CAACC,GAAR,CAAYE,kBADE,EAEdH,OAAO,CAACC,GAAR,CAAYG,gBAFE,EAGlB;AACIC,EAAAA,OAAO,EAAG,OADd;AAEIC,EAAAA,IAAI,EAAGN,OAAO,CAACC,GAAR,CAAYM;AAFvB,CAHkB,CAAlB;AASAC,MAAM,CAACC,OAAP,GAAiBV,SAAjB;AAEA",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/utils",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\n\nconst sequelize = new Sequelize(process.env.NODE_DATABASE, \n    process.env.NODE_DATABASE_USER, \n    process.env.NODE_DATABASE_PW, \n{\n    dialect : 'mysql',\n    host : process.env.NODE_DATABASE_URL\n}\n);\n\nmodule.exports = sequelize;\n\n/*const mysql = require('mysql2');\n\nconst pool = mysql.createPool({\n    host : 'localhost',\n    database : 'dreamland_festival',\n    user : 'root',\n    password : 'rootroot'\n});\n\nmodule.exports = pool.promise();\n*/"
      ]
    },
    "sourceType": "script",
    "mtime": 1576678410077
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/controllers/feed.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers/feed.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers/feed.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers/feed.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers",
        "sourceFileName": "feed.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _require = require('express-validator/check'),\n    validationResult = _require.validationResult;\n\nvar Sequelize = require('sequelize');\n\nvar Op = Sequelize.Op;\n\nvar path = require('path');\n\nvar fs = require('fs');\n\nvar Post = require('../models/post');\n\nvar User = require('../models/user');\n\nvar Like = require('../models/like');\n\nexports.getPosts = function (req, res, next) {\n  Post.findAll({\n    include: [{\n      model: User,\n      attributes: ['id', 'name', 'updatedAt']\n    }]\n  }).then(function (posts) {\n    var promises = [];\n    posts.forEach(function (p) {\n      var postWithLikes = Like.count({\n        where: {\n          postId: p.id\n        }\n      }).then(function (likes) {\n        p.dataValues.likes = likes;\n        return p;\n      });\n      promises.push(postWithLikes);\n    });\n    return Promise.all(promises);\n  }).then(function (posts) {\n    console.log(posts);\n    res.json({\n      posts: posts\n    });\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\n\nexports.getPostsByMe = function (req, res, next) {\n  //Post.findAll().then((posts) => {\n  req.user.getPosts().then(function (posts) {\n    console.log(posts);\n    res.json({\n      posts: posts\n    });\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\n\nexports.getPost = function (req, res, next) {\n  var postId = req.params.id;\n  Post.findByPk(postId).then(function (post) {\n    if (!post) {\n      res.status(404).json({\n        messages: 'Post Not Found'\n      });\n    }\n\n    res.json({\n      post: post\n    });\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\n\nexports.likePost = function (req, res, next) {\n  var postId = req.params.id;\n  Post.findByPk(postId).then(function (post) {\n    if (!post) {\n      res.status(404).json({\n        messages: 'Post Not Found'\n      });\n    }\n\n    post.getUsers({\n      where: {\n        id: req.user.id\n      }\n    }).then(function (records) {\n      var record = records[0];\n\n      if (!record) {\n        post.addUser(req.user);\n        res.json({\n          post: 'Like'\n        });\n      } else {\n        post.removeUser(req.user);\n        res.json({\n          post: 'No Like'\n        });\n      }\n    });\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\n\nexports.searchPost = function (req, res, next) {\n  var title = '%' + req.query.title + '%';\n  Post.findAll({\n    where: {\n      title: _defineProperty({}, Op.like, title)\n    }\n  }).then(function (posts) {\n    console.log(posts);\n    res.json({\n      posts: posts\n    });\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\n\nexports.createPost = function (req, res, next) {\n  var errors = validationResult(req);\n\n  if (!errors.isEmpty()) {\n    return res.status(422).json({\n      message: 'Errore input parametri',\n      error: errors.array()\n    });\n  }\n\n  if (!req.file) {\n    return res.status(422).json({\n      message: req.fileValidationError ? req.fileValidationError : 'Nessun immagine allegata'\n    });\n  }\n\n  var image = req.file.path;\n  var title = req.body.title;\n  var description = req.body.description; //INSERT NEL DATABASE  \n\n  req.user.createPost({\n    title: title,\n    description: description,\n    image: image\n  }).then(function (post) {\n    res.status(201).json({\n      messages: 'Success Operation',\n      post: post\n    });\n  })[\"catch\"](function (err) {\n    return res.status(422).json({\n      message: 'Error nel Salvataggio'\n    });\n  });\n};\n\nexports.editPost = function (req, res, next) {\n  var postId = req.params.id;\n  var errors = validationResult(req);\n\n  if (!errors.isEmpty()) {\n    console.log(\"sei nella merda\");\n    return res.status(422).json({\n      message: 'Error input Parametri',\n      error: errors.array()\n    });\n  }\n\n  var title = req.body.title;\n  var description = req.body.description;\n  req.user.getPosts({\n    where: {\n      id: postId\n    }\n  }).then(function (posts) {\n    var post = posts[0];\n\n    if (!post) {\n      res.status(404).json({\n        messages: 'Post Not Found or Not Your Post'\n      });\n    }\n\n    post.title = title;\n    post.description = description;\n\n    if (req.file) {\n      deleteImage(post.image);\n      var image = req.file.path;\n      post.image = image;\n    }\n\n    return post.save();\n  }).then(function (post) {\n    res.json({\n      post: post\n    });\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\n\nexports.deletePost = function (req, res, next) {\n  var postId = req.params.id;\n  Post.findByPk(postId).then(function (post) {\n    if (!post) {\n      res.status(404).json({\n        messages: 'Post Not Found'\n      });\n    }\n\n    if (post.userId != req.user.id) {\n      res.status(404).json({\n        messages: 'Operazione non permessa'\n      });\n    }\n\n    deleteImage(post.image);\n    return post.destroy();\n  }).then(function () {\n    res.status(201).json({\n      messages: 'Success Operation'\n    });\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\n\nvar deleteImage = function deleteImage(filePath) {\n  filePath = path.join(__dirname, '..', filePath);\n  fs.unlink(filePath, function (err) {\n    return console.log(err);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "feed.js"
      ],
      "names": [
        "require",
        "validationResult",
        "Sequelize",
        "Op",
        "path",
        "fs",
        "Post",
        "User",
        "Like",
        "exports",
        "getPosts",
        "req",
        "res",
        "next",
        "findAll",
        "include",
        "model",
        "attributes",
        "then",
        "posts",
        "promises",
        "forEach",
        "p",
        "postWithLikes",
        "count",
        "where",
        "postId",
        "id",
        "likes",
        "dataValues",
        "push",
        "Promise",
        "all",
        "console",
        "log",
        "json",
        "err",
        "getPostsByMe",
        "user",
        "getPost",
        "params",
        "findByPk",
        "post",
        "status",
        "messages",
        "likePost",
        "getUsers",
        "records",
        "record",
        "addUser",
        "removeUser",
        "searchPost",
        "title",
        "query",
        "like",
        "createPost",
        "errors",
        "isEmpty",
        "message",
        "error",
        "array",
        "file",
        "fileValidationError",
        "image",
        "body",
        "description",
        "editPost",
        "deleteImage",
        "save",
        "deletePost",
        "userId",
        "destroy",
        "filePath",
        "join",
        "__dirname",
        "unlink"
      ],
      "mappings": ";;;;eAA6BA,OAAO,CAAC,yBAAD,C;IAA5BC,gB,YAAAA,gB;;AACR,IAAMC,SAAS,GAAGF,OAAO,CAAC,WAAD,CAAzB;;AACA,IAAMG,EAAE,GAAGD,SAAS,CAACC,EAArB;;AACA,IAAMC,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMK,EAAE,GAAGL,OAAO,CAAC,IAAD,CAAlB;;AAEA,IAAMM,IAAI,GAAGN,OAAO,CAAC,gBAAD,CAApB;;AACA,IAAMO,IAAI,GAAGP,OAAO,CAAC,gBAAD,CAApB;;AACA,IAAMQ,IAAI,GAAGR,OAAO,CAAC,gBAAD,CAApB;;AAEAS,OAAO,CAACC,QAAR,GAAmB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACnCP,EAAAA,IAAI,CAACQ,OAAL,CAAa;AAACC,IAAAA,OAAO,EAAG,CAAC;AAACC,MAAAA,KAAK,EAAGT,IAAT;AAAeU,MAAAA,UAAU,EAAG,CAAC,IAAD,EAAO,MAAP,EAAe,WAAf;AAA5B,KAAD;AAAX,GAAb,EACCC,IADD,CACM,UAAAC,KAAK,EAAI;AACX,QAAIC,QAAQ,GAAG,EAAf;AACAD,IAAAA,KAAK,CAACE,OAAN,CAAc,UAAAC,CAAC,EAAI;AACf,UAAMC,aAAa,GAAGf,IAAI,CAACgB,KAAL,CAAW;AAACC,QAAAA,KAAK,EAAG;AAACC,UAAAA,MAAM,EAAGJ,CAAC,CAACK;AAAZ;AAAT,OAAX,EAAsCT,IAAtC,CACtB,UAAAU,KAAK,EAAI;AACLN,QAAAA,CAAC,CAACO,UAAF,CAAaD,KAAb,GAAqBA,KAArB;AACA,eAAON,CAAP;AACA,OAJkB,CAAtB;AAMAF,MAAAA,QAAQ,CAACU,IAAT,CAAcP,aAAd;AACH,KARD;AASA,WAAOQ,OAAO,CAACC,GAAR,CAAYZ,QAAZ,CAAP;AACH,GAbD,EAaGF,IAbH,CAaQ,UAACC,KAAD,EAAW;AACfc,IAAAA,OAAO,CAACC,GAAR,CAAYf,KAAZ;AACAP,IAAAA,GAAG,CAACuB,IAAJ,CAAS;AAAChB,MAAAA,KAAK,EAAGA;AAAT,KAAT;AACH,GAhBD,WAiBI,UAAAiB,GAAG;AAAA,WAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAAJ;AAAA,GAjBP;AAmBH,CApBD;;AAsBA3B,OAAO,CAAC4B,YAAR,GAAuB,UAAC1B,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACvC;AACAF,EAAAA,GAAG,CAAC2B,IAAJ,CAAS5B,QAAT,GAAoBQ,IAApB,CAAyB,UAACC,KAAD,EAAW;AAChCc,IAAAA,OAAO,CAACC,GAAR,CAAYf,KAAZ;AACAP,IAAAA,GAAG,CAACuB,IAAJ,CAAS;AAAChB,MAAAA,KAAK,EAAGA;AAAT,KAAT;AACH,GAHD,WAII,UAAAiB,GAAG;AAAA,WAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAAJ;AAAA,GAJP;AAMH,CARD;;AAUA3B,OAAO,CAAC8B,OAAR,GAAkB,UAAC5B,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClC,MAAMa,MAAM,GAAGf,GAAG,CAAC6B,MAAJ,CAAWb,EAA1B;AACArB,EAAAA,IAAI,CAACmC,QAAL,CAAcf,MAAd,EACCR,IADD,CACM,UAACwB,IAAD,EAAU;AACZ,QAAG,CAACA,IAAJ,EAAU;AACN9B,MAAAA,GAAG,CAAC+B,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB;AACjBS,QAAAA,QAAQ,EAAG;AADM,OAArB;AAGH;;AACDhC,IAAAA,GAAG,CAACuB,IAAJ,CAAS;AAACO,MAAAA,IAAI,EAAGA;AAAR,KAAT;AACH,GARD,WASI,UAAAN,GAAG;AAAA,WAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAAJ;AAAA,GATP;AAWH,CAbD;;AAeA3B,OAAO,CAACoC,QAAR,GAAmB,UAAClC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACnC,MAAMa,MAAM,GAAGf,GAAG,CAAC6B,MAAJ,CAAWb,EAA1B;AACArB,EAAAA,IAAI,CAACmC,QAAL,CAAcf,MAAd,EACCR,IADD,CACM,UAACwB,IAAD,EAAU;AACZ,QAAG,CAACA,IAAJ,EAAU;AACN9B,MAAAA,GAAG,CAAC+B,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB;AACjBS,QAAAA,QAAQ,EAAG;AADM,OAArB;AAGH;;AACDF,IAAAA,IAAI,CAACI,QAAL,CAAc;AAACrB,MAAAA,KAAK,EAAG;AAACE,QAAAA,EAAE,EAAGhB,GAAG,CAAC2B,IAAJ,CAASX;AAAf;AAAT,KAAd,EAA4CT,IAA5C,CAAiD,UAAA6B,OAAO,EAAI;AACxD,UAAMC,MAAM,GAAGD,OAAO,CAAC,CAAD,CAAtB;;AACA,UAAG,CAACC,MAAJ,EAAY;AACRN,QAAAA,IAAI,CAACO,OAAL,CAAatC,GAAG,CAAC2B,IAAjB;AACA1B,QAAAA,GAAG,CAACuB,IAAJ,CAAS;AAACO,UAAAA,IAAI,EAAG;AAAR,SAAT;AACH,OAHD,MAGO;AACHA,QAAAA,IAAI,CAACQ,UAAL,CAAgBvC,GAAG,CAAC2B,IAApB;AACA1B,QAAAA,GAAG,CAACuB,IAAJ,CAAS;AAACO,UAAAA,IAAI,EAAG;AAAR,SAAT;AACH;AACJ,KATD;AAUH,GAjBD,WAkBI,UAAAN,GAAG;AAAA,WAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAAJ;AAAA,GAlBP;AAoBH,CAtBD;;AAwBA3B,OAAO,CAAC0C,UAAR,GAAqB,UAACxC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACrC,MAAMuC,KAAK,GAAG,MAAMzC,GAAG,CAAC0C,KAAJ,CAAUD,KAAhB,GAAwB,GAAtC;AACA9C,EAAAA,IAAI,CAACQ,OAAL,CAAa;AAACW,IAAAA,KAAK,EAAG;AAAC2B,MAAAA,KAAK,sBAAKjD,EAAE,CAACmD,IAAR,EAAgBF,KAAhB;AAAN;AAAT,GAAb,EACClC,IADD,CACM,UAACC,KAAD,EAAW;AACbc,IAAAA,OAAO,CAACC,GAAR,CAAYf,KAAZ;AACAP,IAAAA,GAAG,CAACuB,IAAJ,CAAS;AAAChB,MAAAA,KAAK,EAAGA;AAAT,KAAT;AACH,GAJD,WAKI,UAAAiB,GAAG;AAAA,WAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAAJ;AAAA,GALP;AAOH,CATD;;AAWA3B,OAAO,CAAC8C,UAAR,GAAqB,UAAC5C,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACrC,MAAM2C,MAAM,GAAGvD,gBAAgB,CAACU,GAAD,CAA/B;;AAEA,MAAG,CAAC6C,MAAM,CAACC,OAAP,EAAJ,EAAsB;AAClB,WAAO7C,GAAG,CAAC+B,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB;AACxBuB,MAAAA,OAAO,EAAG,wBADc;AAExBC,MAAAA,KAAK,EAAGH,MAAM,CAACI,KAAP;AAFgB,KAArB,CAAP;AAIH;;AAED,MAAG,CAACjD,GAAG,CAACkD,IAAR,EAAc;AACV,WAAOjD,GAAG,CAAC+B,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB;AACxBuB,MAAAA,OAAO,EAAG/C,GAAG,CAACmD,mBAAJ,GAA0BnD,GAAG,CAACmD,mBAA9B,GAAoD;AADtC,KAArB,CAAP;AAGH;;AAED,MAAMC,KAAK,GAAGpD,GAAG,CAACkD,IAAJ,CAASzD,IAAvB;AACA,MAAMgD,KAAK,GAAGzC,GAAG,CAACqD,IAAJ,CAASZ,KAAvB;AACA,MAAMa,WAAW,GAAGtD,GAAG,CAACqD,IAAJ,CAASC,WAA7B,CAlBqC,CAmBrC;;AACAtD,EAAAA,GAAG,CAAC2B,IAAJ,CAASiB,UAAT,CAAoB;AAChBH,IAAAA,KAAK,EAAGA,KADQ;AAEhBa,IAAAA,WAAW,EAAGA,WAFE;AAGhBF,IAAAA,KAAK,EAAGA;AAHQ,GAApB,EAIG7C,IAJH,CAIQ,UAACwB,IAAD,EAAU;AACd9B,IAAAA,GAAG,CAAC+B,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB;AACjBS,MAAAA,QAAQ,EAAG,mBADM;AAEjBF,MAAAA,IAAI,EAAGA;AAFU,KAArB;AAIH,GATD,WASU,UAAAN,GAAG,EAAI;AACd,WAAOxB,GAAG,CAAC+B,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB;AACxBuB,MAAAA,OAAO,EAAG;AADc,KAArB,CAAP;AAGF,GAbD;AAcH,CAlCD;;AAoCAjD,OAAO,CAACyD,QAAR,GAAmB,UAACvD,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACnC,MAAMa,MAAM,GAAGf,GAAG,CAAC6B,MAAJ,CAAWb,EAA1B;AACA,MAAM6B,MAAM,GAAGvD,gBAAgB,CAACU,GAAD,CAA/B;;AAEG,MAAG,CAAC6C,MAAM,CAACC,OAAP,EAAJ,EAAqB;AACjBxB,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,WAAOtB,GAAG,CAAC+B,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB;AACxBuB,MAAAA,OAAO,EAAG,uBADc;AAExBC,MAAAA,KAAK,EAAGH,MAAM,CAACI,KAAP;AAFgB,KAArB,CAAP;AAIH;;AAED,MAAMR,KAAK,GAAGzC,GAAG,CAACqD,IAAJ,CAASZ,KAAvB;AACA,MAAMa,WAAW,GAAGtD,GAAG,CAACqD,IAAJ,CAASC,WAA7B;AAEAtD,EAAAA,GAAG,CAAC2B,IAAJ,CAAS5B,QAAT,CAAkB;AAAEe,IAAAA,KAAK,EAAG;AAAEE,MAAAA,EAAE,EAAGD;AAAP;AAAV,GAAlB,EAA8CR,IAA9C,CAAmD,UAAAC,KAAK,EAAI;AACxD,QAAMuB,IAAI,GAAGvB,KAAK,CAAC,CAAD,CAAlB;;AACA,QAAG,CAACuB,IAAJ,EAAS;AACL9B,MAAAA,GAAG,CAAC+B,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB;AACjBS,QAAAA,QAAQ,EAAG;AADM,OAArB;AAGH;;AACDF,IAAAA,IAAI,CAACU,KAAL,GAAaA,KAAb;AACAV,IAAAA,IAAI,CAACuB,WAAL,GAAmBA,WAAnB;;AACA,QAAGtD,GAAG,CAACkD,IAAP,EAAY;AACXM,MAAAA,WAAW,CAACzB,IAAI,CAACqB,KAAN,CAAX;AACA,UAAMA,KAAK,GAAGpD,GAAG,CAACkD,IAAJ,CAASzD,IAAvB;AACAsC,MAAAA,IAAI,CAACqB,KAAL,GAAaA,KAAb;AACA;;AACD,WAAOrB,IAAI,CAAC0B,IAAL,EAAP;AACH,GAfD,EAeGlD,IAfH,CAeQ,UAACwB,IAAD,EAAU;AACd9B,IAAAA,GAAG,CAACuB,IAAJ,CAAS;AAAEO,MAAAA,IAAI,EAAGA;AAAT,KAAT;AACH,GAjBD,WAkBI,UAAAN,GAAG;AAAA,WAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAAJ;AAAA,GAlBP;AAoBN,CAnCD;;AAqCA3B,OAAO,CAAC4D,UAAR,GAAqB,UAAC1D,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACrC,MAAMa,MAAM,GAAGf,GAAG,CAAC6B,MAAJ,CAAWb,EAA1B;AAEArB,EAAAA,IAAI,CAACmC,QAAL,CAAcf,MAAd,EACCR,IADD,CACM,UAAAwB,IAAI,EAAI;AACd,QAAG,CAACA,IAAJ,EAAU;AACN9B,MAAAA,GAAG,CAAC+B,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB;AACjBS,QAAAA,QAAQ,EAAG;AADM,OAArB;AAGH;;AACD,QAAGF,IAAI,CAAC4B,MAAL,IAAe3D,GAAG,CAAC2B,IAAJ,CAASX,EAA3B,EAA+B;AAC3Bf,MAAAA,GAAG,CAAC+B,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB;AACjBS,QAAAA,QAAQ,EAAG;AADM,OAArB;AAGH;;AACDuB,IAAAA,WAAW,CAACzB,IAAI,CAACqB,KAAN,CAAX;AACA,WAAOrB,IAAI,CAAC6B,OAAL,EAAP;AACC,GAdD,EAcGrD,IAdH,CAcQ,YAAM;AACVN,IAAAA,GAAG,CAAC+B,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB;AACjBS,MAAAA,QAAQ,EAAG;AADM,KAArB;AAGH,GAlBD,WAmBI,UAAAR,GAAG;AAAA,WAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAAJ;AAAA,GAnBP;AAqBH,CAxBD;;AA0BA,IAAM+B,WAAW,GAAG,SAAdA,WAAc,CAAAK,QAAQ,EAAI;AAC5BA,EAAAA,QAAQ,GAAGpE,IAAI,CAACqE,IAAL,CAAUC,SAAV,EAAqB,IAArB,EAA2BF,QAA3B,CAAX;AACAnE,EAAAA,EAAE,CAACsE,MAAH,CAAUH,QAAV,EAAoB,UAAApC,GAAG;AAAA,WAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAAJ;AAAA,GAAvB;AACH,CAHD",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers",
      "sourcesContent": [
        "const { validationResult } = require('express-validator/check');\nconst Sequelize = require('sequelize');\nconst Op = Sequelize.Op;\nconst path = require('path');\nconst fs = require('fs');\n\nconst Post = require('../models/post');\nconst User = require('../models/user');\nconst Like = require('../models/like');\n\nexports.getPosts = (req, res, next) => {\n    Post.findAll({include : [{model : User, attributes : ['id', 'name', 'updatedAt']}]})\n    .then(posts => {\n        var promises = [];\n        posts.forEach(p => {\n            const postWithLikes = Like.count({where : {postId : p.id}}).then(\n            likes => {\n                p.dataValues.likes = likes;\n                return p;\n               } \n            );\n            promises.push(postWithLikes);\n        });\n        return Promise.all(promises);\n    }).then((posts) => {\n        console.log(posts);\n        res.json({posts : posts});\n    }).catch(\n        err => console.log(err)\n    );\n};\n\nexports.getPostsByMe = (req, res, next) => {\n    //Post.findAll().then((posts) => {\n    req.user.getPosts().then((posts) => {\n        console.log(posts);\n        res.json({posts : posts});\n    }).catch(\n        err => console.log(err)\n    );\n};\n\nexports.getPost = (req, res, next) => {\n    const postId = req.params.id;\n    Post.findByPk(postId)\n    .then((post) => {\n        if(!post) {\n            res.status(404).json({\n                messages : 'Post Not Found',\n            });\n        }\n        res.json({post : post});\n    }).catch(\n        err => console.log(err)\n    );\n};\n\nexports.likePost = (req, res, next) => {\n    const postId = req.params.id;\n    Post.findByPk(postId)\n    .then((post) => {\n        if(!post) {\n            res.status(404).json({\n                messages : 'Post Not Found',\n            });\n        }\n        post.getUsers({where : {id : req.user.id}}).then(records => {\n            const record = records[0];\n            if(!record) {\n                post.addUser(req.user);\n                res.json({post : 'Like'})\n            } else {\n                post.removeUser(req.user);\n                res.json({post : 'No Like'});\n            }\n        });\n    }).catch(\n        err => console.log(err)\n    );\n};\n\nexports.searchPost = (req, res, next) => {\n    const title = '%' + req.query.title + '%';\n    Post.findAll({where : {title : {[Op.like] : title}}})\n    .then((posts) => {\n        console.log(posts);\n        res.json({posts : posts});\n    }).catch(\n        err => console.log(err)\n    );\n};\n\nexports.createPost = (req, res, next) => {\n    const errors = validationResult(req);\n    \n    if(!errors.isEmpty()) {\n        return res.status(422).json({\n            message : 'Errore input parametri',\n            error : errors.array()\n        });\n    }\n\n    if(!req.file) {\n        return res.status(422).json({\n            message : req.fileValidationError ? req.fileValidationError : 'Nessun immagine allegata',\n        });\n    }\n\n    const image = req.file.path;\n    const title = req.body.title;\n    const description = req.body.description;\n    //INSERT NEL DATABASE  \n    req.user.createPost({\n        title : title,\n        description : description,\n        image : image\n    }).then((post) => {\n        res.status(201).json({\n            messages : 'Success Operation',\n            post : post\n        });\n    }).catch( err => {\n       return res.status(422).json({\n           message : 'Error nel Salvataggio'\n       })\n    });\n};\n\nexports.editPost = (req, res, next) => {\n    const postId = req.params.id;\n    const errors = validationResult(req);\n\n       if(!errors.isEmpty()){\n           console.log(\"sei nella merda\");\n           return res.status(422).json({\n               message : 'Error input Parametri',\n               error : errors.array()\n           });\n       }\n       \n       const title = req.body.title;\n       const description = req.body.description;\n\n       req.user.getPosts({ where : { id : postId }}).then(posts => {\n           const post = posts[0];\n           if(!post){\n               res.status(404).json({ \n                   messages : 'Post Not Found or Not Your Post',\n               });\n           }\n           post.title = title;\n           post.description = description;\n           if(req.file){\n            deleteImage(post.image); \n            const image = req.file.path;\n            post.image = image;\n           }\n           return post.save();\n       }).then((post) => {\n           res.json({ post : post})\n       }).catch(\n           err => console.log(err)\n       );\n};\n\nexports.deletePost = (req, res, next) => {\n    const postId = req.params.id;\n\n    Post.findByPk(postId)\n    .then(post => {\n    if(!post) {\n        res.status(404).json({\n            messages : 'Post Not Found',\n        });\n    }\n    if(post.userId != req.user.id) {\n        res.status(404).json({\n            messages : 'Operazione non permessa',\n        });\n    }\n    deleteImage(post.image); \n    return post.destroy(); \n    }).then(() => {\n        res.status(201).json({\n            messages : 'Success Operation',\n        });\n    }).catch(\n        err => console.log(err)\n    );\n};\n\nconst deleteImage = filePath => {\n    filePath = path.join(__dirname, '..', filePath);\n    fs.unlink(filePath, err => console.log(err));\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1576626014841
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/models/post.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/models/post.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/firstAPI/models/post.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/models/post.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/models",
        "sourceFileName": "post.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar Sequelize = require('sequelize');\n\nvar sequelize = require('../utils/database');\n\nvar Post = sequelize.define('post', {\n  id: {\n    type: Sequelize.INTEGER,\n    autoIncrement: true,\n    allowNull: false,\n    primaryKey: true\n  },\n  title: {\n    type: Sequelize.STRING,\n    allowNull: false\n  },\n  description: {\n    type: Sequelize.STRING,\n    allowNull: true\n  },\n  image: {\n    type: Sequelize.STRING,\n    allowNull: true\n  }\n});\nmodule.exports = Post;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvc3QuanMiXSwibmFtZXMiOlsiU2VxdWVsaXplIiwicmVxdWlyZSIsInNlcXVlbGl6ZSIsIlBvc3QiLCJkZWZpbmUiLCJpZCIsInR5cGUiLCJJTlRFR0VSIiwiYXV0b0luY3JlbWVudCIsImFsbG93TnVsbCIsInByaW1hcnlLZXkiLCJ0aXRsZSIsIlNUUklORyIsImRlc2NyaXB0aW9uIiwiaW1hZ2UiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLFNBQVMsR0FBR0MsT0FBTyxDQUFDLFdBQUQsQ0FBekI7O0FBRUEsSUFBTUMsU0FBUyxHQUFHRCxPQUFPLENBQUMsbUJBQUQsQ0FBekI7O0FBRUEsSUFBTUUsSUFBSSxHQUFHRCxTQUFTLENBQUNFLE1BQVYsQ0FBaUIsTUFBakIsRUFBeUI7QUFDbENDLEVBQUFBLEVBQUUsRUFBRztBQUNEQyxJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ08sT0FEaEI7QUFFREMsSUFBQUEsYUFBYSxFQUFHLElBRmY7QUFHREMsSUFBQUEsU0FBUyxFQUFHLEtBSFg7QUFJREMsSUFBQUEsVUFBVSxFQUFHO0FBSlosR0FENkI7QUFPbENDLEVBQUFBLEtBQUssRUFBRztBQUNKTCxJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ1ksTUFEYjtBQUVKSCxJQUFBQSxTQUFTLEVBQUc7QUFGUixHQVAwQjtBQVdsQ0ksRUFBQUEsV0FBVyxFQUFHO0FBQ1ZQLElBQUFBLElBQUksRUFBR04sU0FBUyxDQUFDWSxNQURQO0FBRVZILElBQUFBLFNBQVMsRUFBRztBQUZGLEdBWG9CO0FBZWxDSyxFQUFBQSxLQUFLLEVBQUc7QUFDSlIsSUFBQUEsSUFBSSxFQUFHTixTQUFTLENBQUNZLE1BRGI7QUFFSkgsSUFBQUEsU0FBUyxFQUFHO0FBRlI7QUFmMEIsQ0FBekIsQ0FBYjtBQXFCQU0sTUFBTSxDQUFDQyxPQUFQLEdBQWlCYixJQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvQWxlc3NhbmRyb19NdXNvbGluby9EZXNrdG9wL2ZpcnN0QVBJL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFNlcXVlbGl6ZSA9IHJlcXVpcmUoJ3NlcXVlbGl6ZScpO1xuXG5jb25zdCBzZXF1ZWxpemUgPSByZXF1aXJlKCcuLi91dGlscy9kYXRhYmFzZScpO1xuXG5jb25zdCBQb3N0ID0gc2VxdWVsaXplLmRlZmluZSgncG9zdCcsIHtcbiAgICBpZCA6IHtcbiAgICAgICAgdHlwZSA6IFNlcXVlbGl6ZS5JTlRFR0VSLFxuICAgICAgICBhdXRvSW5jcmVtZW50IDogdHJ1ZSxcbiAgICAgICAgYWxsb3dOdWxsIDogZmFsc2UsXG4gICAgICAgIHByaW1hcnlLZXkgOiB0cnVlXG4gICAgfSxcbiAgICB0aXRsZSA6IHtcbiAgICAgICAgdHlwZSA6IFNlcXVlbGl6ZS5TVFJJTkcsXG4gICAgICAgIGFsbG93TnVsbCA6IGZhbHNlLFxuICAgIH0sXG4gICAgZGVzY3JpcHRpb24gOiB7XG4gICAgICAgIHR5cGUgOiBTZXF1ZWxpemUuU1RSSU5HLFxuICAgICAgICBhbGxvd051bGwgOiB0cnVlLFxuICAgIH0sXG4gICAgaW1hZ2UgOiB7XG4gICAgICAgIHR5cGUgOiBTZXF1ZWxpemUuU1RSSU5HLFxuICAgICAgICBhbGxvd051bGwgOiB0cnVlXG4gICAgfVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gUG9zdDsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "post.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "sequelize",
        "Post",
        "define",
        "id",
        "type",
        "INTEGER",
        "autoIncrement",
        "allowNull",
        "primaryKey",
        "title",
        "STRING",
        "description",
        "image",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,IAAMC,SAAS,GAAGD,OAAO,CAAC,mBAAD,CAAzB;;AAEA,IAAME,IAAI,GAAGD,SAAS,CAACE,MAAV,CAAiB,MAAjB,EAAyB;AAClCC,EAAAA,EAAE,EAAG;AACDC,IAAAA,IAAI,EAAGN,SAAS,CAACO,OADhB;AAEDC,IAAAA,aAAa,EAAG,IAFf;AAGDC,IAAAA,SAAS,EAAG,KAHX;AAIDC,IAAAA,UAAU,EAAG;AAJZ,GAD6B;AAOlCC,EAAAA,KAAK,EAAG;AACJL,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADb;AAEJH,IAAAA,SAAS,EAAG;AAFR,GAP0B;AAWlCI,EAAAA,WAAW,EAAG;AACVP,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADP;AAEVH,IAAAA,SAAS,EAAG;AAFF,GAXoB;AAelCK,EAAAA,KAAK,EAAG;AACJR,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADb;AAEJH,IAAAA,SAAS,EAAG;AAFR;AAf0B,CAAzB,CAAb;AAqBAM,MAAM,CAACC,OAAP,GAAiBb,IAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/models",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst Post = sequelize.define('post', {\n    id : {\n        type : Sequelize.INTEGER,\n        autoIncrement : true,\n        allowNull : false,\n        primaryKey : true\n    },\n    title : {\n        type : Sequelize.STRING,\n        allowNull : false,\n    },\n    description : {\n        type : Sequelize.STRING,\n        allowNull : true,\n    },\n    image : {\n        type : Sequelize.STRING,\n        allowNull : true\n    }\n});\n\nmodule.exports = Post;"
      ]
    },
    "sourceType": "script",
    "mtime": 1576246287862
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/models/like.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/models/like.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/firstAPI/models/like.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/models/like.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/models",
        "sourceFileName": "like.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar Sequelize = require('sequelize');\n\nvar sequelize = require('../utils/database');\n\nvar Like = sequelize.define('like', {\n  id: {\n    type: Sequelize.INTEGER,\n    autoIncrement: true,\n    allowNull: false,\n    primaryKey: true\n  }\n});\nmodule.exports = Like;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpa2UuanMiXSwibmFtZXMiOlsiU2VxdWVsaXplIiwicmVxdWlyZSIsInNlcXVlbGl6ZSIsIkxpa2UiLCJkZWZpbmUiLCJpZCIsInR5cGUiLCJJTlRFR0VSIiwiYXV0b0luY3JlbWVudCIsImFsbG93TnVsbCIsInByaW1hcnlLZXkiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLFNBQVMsR0FBR0MsT0FBTyxDQUFDLFdBQUQsQ0FBekI7O0FBRUEsSUFBTUMsU0FBUyxHQUFHRCxPQUFPLENBQUMsbUJBQUQsQ0FBekI7O0FBRUEsSUFBTUUsSUFBSSxHQUFHRCxTQUFTLENBQUNFLE1BQVYsQ0FBaUIsTUFBakIsRUFBeUI7QUFDbENDLEVBQUFBLEVBQUUsRUFBRztBQUNEQyxJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ08sT0FEaEI7QUFFREMsSUFBQUEsYUFBYSxFQUFHLElBRmY7QUFHREMsSUFBQUEsU0FBUyxFQUFHLEtBSFg7QUFJREMsSUFBQUEsVUFBVSxFQUFHO0FBSlo7QUFENkIsQ0FBekIsQ0FBYjtBQVNBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJULElBQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9BbGVzc2FuZHJvX011c29saW5vL0Rlc2t0b3AvZmlyc3RBUEkvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU2VxdWVsaXplID0gcmVxdWlyZSgnc2VxdWVsaXplJyk7XG5cbmNvbnN0IHNlcXVlbGl6ZSA9IHJlcXVpcmUoJy4uL3V0aWxzL2RhdGFiYXNlJyk7XG5cbmNvbnN0IExpa2UgPSBzZXF1ZWxpemUuZGVmaW5lKCdsaWtlJywge1xuICAgIGlkIDoge1xuICAgICAgICB0eXBlIDogU2VxdWVsaXplLklOVEVHRVIsXG4gICAgICAgIGF1dG9JbmNyZW1lbnQgOiB0cnVlLFxuICAgICAgICBhbGxvd051bGwgOiBmYWxzZSxcbiAgICAgICAgcHJpbWFyeUtleSA6IHRydWVcbiAgICB9XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBMaWtlOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "like.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "sequelize",
        "Like",
        "define",
        "id",
        "type",
        "INTEGER",
        "autoIncrement",
        "allowNull",
        "primaryKey",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,IAAMC,SAAS,GAAGD,OAAO,CAAC,mBAAD,CAAzB;;AAEA,IAAME,IAAI,GAAGD,SAAS,CAACE,MAAV,CAAiB,MAAjB,EAAyB;AAClCC,EAAAA,EAAE,EAAG;AACDC,IAAAA,IAAI,EAAGN,SAAS,CAACO,OADhB;AAEDC,IAAAA,aAAa,EAAG,IAFf;AAGDC,IAAAA,SAAS,EAAG,KAHX;AAIDC,IAAAA,UAAU,EAAG;AAJZ;AAD6B,CAAzB,CAAb;AASAC,MAAM,CAACC,OAAP,GAAiBT,IAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/models",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst Like = sequelize.define('like', {\n    id : {\n        type : Sequelize.INTEGER,\n        autoIncrement : true,\n        allowNull : false,\n        primaryKey : true\n    }\n});\n\nmodule.exports = Like;"
      ]
    },
    "sourceType": "script",
    "mtime": 1576146094299
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/routes/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar authRoutes = require('./auth');\n\nvar reservationRoutes = require('./reservation');\n\nvar artisticeventRoutes = require('./artisticevent');\n\nvar performerRoutes = require('./performer');\n\nvar seminaryRoutes = require('./seminary');\n\nvar galleryRoutes = require('./gallery');\n\nmodule.exports = function (app) {\n  app.use('/auth', authRoutes);\n  app.use('/reservation', reservationRoutes);\n  app.use('/artistic_event', artisticeventRoutes);\n  app.use('/performer', performerRoutes);\n  app.use('/seminary', seminaryRoutes);\n  app.use('/gallery', galleryRoutes);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImF1dGhSb3V0ZXMiLCJyZXF1aXJlIiwicmVzZXJ2YXRpb25Sb3V0ZXMiLCJhcnRpc3RpY2V2ZW50Um91dGVzIiwicGVyZm9ybWVyUm91dGVzIiwic2VtaW5hcnlSb3V0ZXMiLCJnYWxsZXJ5Um91dGVzIiwibW9kdWxlIiwiZXhwb3J0cyIsImFwcCIsInVzZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxVQUFVLEdBQUdDLE9BQU8sQ0FBQyxRQUFELENBQTFCOztBQUNBLElBQU1DLGlCQUFpQixHQUFHRCxPQUFPLENBQUMsZUFBRCxDQUFqQzs7QUFDQSxJQUFNRSxtQkFBbUIsR0FBR0YsT0FBTyxDQUFDLGlCQUFELENBQW5DOztBQUNBLElBQU1HLGVBQWUsR0FBR0gsT0FBTyxDQUFDLGFBQUQsQ0FBL0I7O0FBQ0EsSUFBTUksY0FBYyxHQUFHSixPQUFPLENBQUMsWUFBRCxDQUE5Qjs7QUFDQSxJQUFNSyxhQUFhLEdBQUdMLE9BQU8sQ0FBQyxXQUFELENBQTdCOztBQUVBTSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBU0MsR0FBVCxFQUFjO0FBQzNCQSxFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxPQUFSLEVBQWlCVixVQUFqQjtBQUNBUyxFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxjQUFSLEVBQXdCUixpQkFBeEI7QUFDQU8sRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsaUJBQVIsRUFBMkJQLG1CQUEzQjtBQUNBTSxFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxZQUFSLEVBQXNCTixlQUF0QjtBQUNBSyxFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxXQUFSLEVBQXFCTCxjQUFyQjtBQUNBSSxFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxVQUFSLEVBQW9CSixhQUFwQjtBQUNILENBUEQiLCJzb3VyY2VSb290IjoiL1VzZXJzL0FsZXNzYW5kcm9fTXVzb2xpbm8vRGVza3RvcC9maXJzdEFQSS9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBhdXRoUm91dGVzID0gcmVxdWlyZSgnLi9hdXRoJyk7XG5jb25zdCByZXNlcnZhdGlvblJvdXRlcyA9IHJlcXVpcmUoJy4vcmVzZXJ2YXRpb24nKVxuY29uc3QgYXJ0aXN0aWNldmVudFJvdXRlcyA9IHJlcXVpcmUoJy4vYXJ0aXN0aWNldmVudCcpO1xuY29uc3QgcGVyZm9ybWVyUm91dGVzID0gcmVxdWlyZSgnLi9wZXJmb3JtZXInKTtcbmNvbnN0IHNlbWluYXJ5Um91dGVzID0gcmVxdWlyZSgnLi9zZW1pbmFyeScpO1xuY29uc3QgZ2FsbGVyeVJvdXRlcyA9IHJlcXVpcmUoJy4vZ2FsbGVyeScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGFwcCkge1xuICAgIGFwcC51c2UoJy9hdXRoJywgYXV0aFJvdXRlcyk7XG4gICAgYXBwLnVzZSgnL3Jlc2VydmF0aW9uJywgcmVzZXJ2YXRpb25Sb3V0ZXMpXG4gICAgYXBwLnVzZSgnL2FydGlzdGljX2V2ZW50JywgYXJ0aXN0aWNldmVudFJvdXRlcyk7XG4gICAgYXBwLnVzZSgnL3BlcmZvcm1lcicsIHBlcmZvcm1lclJvdXRlcyk7XG4gICAgYXBwLnVzZSgnL3NlbWluYXJ5Jywgc2VtaW5hcnlSb3V0ZXMpO1xuICAgIGFwcC51c2UoJy9nYWxsZXJ5JywgZ2FsbGVyeVJvdXRlcyk7XG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "authRoutes",
        "require",
        "reservationRoutes",
        "artisticeventRoutes",
        "performerRoutes",
        "seminaryRoutes",
        "galleryRoutes",
        "module",
        "exports",
        "app",
        "use"
      ],
      "mappings": ";;AAAA,IAAMA,UAAU,GAAGC,OAAO,CAAC,QAAD,CAA1B;;AACA,IAAMC,iBAAiB,GAAGD,OAAO,CAAC,eAAD,CAAjC;;AACA,IAAME,mBAAmB,GAAGF,OAAO,CAAC,iBAAD,CAAnC;;AACA,IAAMG,eAAe,GAAGH,OAAO,CAAC,aAAD,CAA/B;;AACA,IAAMI,cAAc,GAAGJ,OAAO,CAAC,YAAD,CAA9B;;AACA,IAAMK,aAAa,GAAGL,OAAO,CAAC,WAAD,CAA7B;;AAEAM,MAAM,CAACC,OAAP,GAAiB,UAASC,GAAT,EAAc;AAC3BA,EAAAA,GAAG,CAACC,GAAJ,CAAQ,OAAR,EAAiBV,UAAjB;AACAS,EAAAA,GAAG,CAACC,GAAJ,CAAQ,cAAR,EAAwBR,iBAAxB;AACAO,EAAAA,GAAG,CAACC,GAAJ,CAAQ,iBAAR,EAA2BP,mBAA3B;AACAM,EAAAA,GAAG,CAACC,GAAJ,CAAQ,YAAR,EAAsBN,eAAtB;AACAK,EAAAA,GAAG,CAACC,GAAJ,CAAQ,WAAR,EAAqBL,cAArB;AACAI,EAAAA,GAAG,CAACC,GAAJ,CAAQ,UAAR,EAAoBJ,aAApB;AACH,CAPD",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes",
      "sourcesContent": [
        "const authRoutes = require('./auth');\nconst reservationRoutes = require('./reservation')\nconst artisticeventRoutes = require('./artisticevent');\nconst performerRoutes = require('./performer');\nconst seminaryRoutes = require('./seminary');\nconst galleryRoutes = require('./gallery');\n\nmodule.exports = function(app) {\n    app.use('/auth', authRoutes);\n    app.use('/reservation', reservationRoutes)\n    app.use('/artistic_event', artisticeventRoutes);\n    app.use('/performer', performerRoutes);\n    app.use('/seminary', seminaryRoutes);\n    app.use('/gallery', galleryRoutes);\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1577444361476
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/routes/auth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes/auth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes/auth.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes/auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes",
        "sourceFileName": "auth.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar _require = require('express-validator/check'),\n    body = _require.body,\n    query = _require.query;\n\nvar router = express.Router();\n\nvar authController = require('../controllers/auth');\n\nvar User = require('../models/user');\n\nvar isAuth = require('../middleware/is-auth');\n\nrouter.post('/register', [body('email').isEmail().withMessage('Inserisci una mail valida name@server.com').custom(function (value, _ref) {\n  var req = _ref.req;\n  return User.findOne({\n    where: {\n      email: value\n    }\n  }).then(function (user) {\n    if (user) {\n      return Promise.reject('Email Esistente');\n    }\n  });\n}), body('password').trim().isLength({\n  min: 5\n}).withMessage('Password > 5 caratteri'), body('name').trim().not().isEmpty().withMessage('Name non vuoto')], authController.registerUser);\nrouter.post('/login', [body('email').isEmail().withMessage('Inserisci una mail valida name@server.com'), body('password').trim().isLength({\n  min: 5\n}).withMessage('Password > 5 caratteri')], authController.loginUser);\nrouter.get('/me', isAuth, authController.loginMe);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGguanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJib2R5IiwicXVlcnkiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJhdXRoQ29udHJvbGxlciIsIlVzZXIiLCJpc0F1dGgiLCJwb3N0IiwiaXNFbWFpbCIsIndpdGhNZXNzYWdlIiwiY3VzdG9tIiwidmFsdWUiLCJyZXEiLCJmaW5kT25lIiwid2hlcmUiLCJlbWFpbCIsInRoZW4iLCJ1c2VyIiwiUHJvbWlzZSIsInJlamVjdCIsInRyaW0iLCJpc0xlbmd0aCIsIm1pbiIsIm5vdCIsImlzRW1wdHkiLCJyZWdpc3RlclVzZXIiLCJsb2dpblVzZXIiLCJnZXQiLCJsb2dpbk1lIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztlQUN3QkEsT0FBTyxDQUFDLHlCQUFELEM7SUFBdkJDLEksWUFBQUEsSTtJQUFNQyxLLFlBQUFBLEs7O0FBQ2QsSUFBTUMsTUFBTSxHQUFHSixPQUFPLENBQUNLLE1BQVIsRUFBZjs7QUFFQSxJQUFNQyxjQUFjLEdBQUdMLE9BQU8sQ0FBQyxxQkFBRCxDQUE5Qjs7QUFDQSxJQUFNTSxJQUFJLEdBQUdOLE9BQU8sQ0FBQyxnQkFBRCxDQUFwQjs7QUFDQSxJQUFNTyxNQUFNLEdBQUdQLE9BQU8sQ0FBQyx1QkFBRCxDQUF0Qjs7QUFFQUcsTUFBTSxDQUFDSyxJQUFQLENBQVksV0FBWixFQUNJLENBQ0lQLElBQUksQ0FBQyxPQUFELENBQUosQ0FBY1EsT0FBZCxHQUF3QkMsV0FBeEIsQ0FBb0MsMkNBQXBDLEVBQ0NDLE1BREQsQ0FDUSxVQUFDQyxLQUFELFFBQWtCO0FBQUEsTUFBVEMsR0FBUyxRQUFUQSxHQUFTO0FBQ3RCLFNBQU9QLElBQUksQ0FBQ1EsT0FBTCxDQUFhO0FBQUNDLElBQUFBLEtBQUssRUFBRztBQUFDQyxNQUFBQSxLQUFLLEVBQUdKO0FBQVQ7QUFBVCxHQUFiLEVBQXdDSyxJQUF4QyxDQUE2QyxVQUFBQyxJQUFJLEVBQUk7QUFDeEQsUUFBR0EsSUFBSCxFQUFTO0FBQ0wsYUFBT0MsT0FBTyxDQUFDQyxNQUFSLENBQWUsaUJBQWYsQ0FBUDtBQUNIO0FBQ0osR0FKTSxDQUFQO0FBS0gsQ0FQRCxDQURKLEVBU0luQixJQUFJLENBQUMsVUFBRCxDQUFKLENBQWlCb0IsSUFBakIsR0FBd0JDLFFBQXhCLENBQWlDO0FBQUNDLEVBQUFBLEdBQUcsRUFBRztBQUFQLENBQWpDLEVBQTRDYixXQUE1QyxDQUF3RCx3QkFBeEQsQ0FUSixFQVVJVCxJQUFJLENBQUMsTUFBRCxDQUFKLENBQWFvQixJQUFiLEdBQW9CRyxHQUFwQixHQUEwQkMsT0FBMUIsR0FBb0NmLFdBQXBDLENBQWdELGdCQUFoRCxDQVZKLENBREosRUFhSUwsY0FBYyxDQUFDcUIsWUFibkI7QUFlQXZCLE1BQU0sQ0FBQ0ssSUFBUCxDQUFZLFFBQVosRUFDSSxDQUNJUCxJQUFJLENBQUMsT0FBRCxDQUFKLENBQWNRLE9BQWQsR0FBd0JDLFdBQXhCLENBQW9DLDJDQUFwQyxDQURKLEVBRUlULElBQUksQ0FBQyxVQUFELENBQUosQ0FBaUJvQixJQUFqQixHQUF3QkMsUUFBeEIsQ0FBaUM7QUFBQ0MsRUFBQUEsR0FBRyxFQUFHO0FBQVAsQ0FBakMsRUFBNENiLFdBQTVDLENBQXdELHdCQUF4RCxDQUZKLENBREosRUFLSUwsY0FBYyxDQUFDc0IsU0FMbkI7QUFPQXhCLE1BQU0sQ0FBQ3lCLEdBQVAsQ0FBVyxLQUFYLEVBQWtCckIsTUFBbEIsRUFBMEJGLGNBQWMsQ0FBQ3dCLE9BQXpDO0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjVCLE1BQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9BbGVzc2FuZHJvX011c29saW5vL0Rlc2t0b3AvZmlyc3RBUEkvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbmNvbnN0IHsgYm9keSwgcXVlcnkgfSA9IHJlcXVpcmUoJ2V4cHJlc3MtdmFsaWRhdG9yL2NoZWNrJyk7XG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuXG5jb25zdCBhdXRoQ29udHJvbGxlciA9IHJlcXVpcmUoJy4uL2NvbnRyb2xsZXJzL2F1dGgnKTtcbmNvbnN0IFVzZXIgPSByZXF1aXJlKCcuLi9tb2RlbHMvdXNlcicpO1xuY29uc3QgaXNBdXRoID0gcmVxdWlyZSgnLi4vbWlkZGxld2FyZS9pcy1hdXRoJyk7XG5cbnJvdXRlci5wb3N0KCcvcmVnaXN0ZXInLFxuICAgIFtcbiAgICAgICAgYm9keSgnZW1haWwnKS5pc0VtYWlsKCkud2l0aE1lc3NhZ2UoJ0luc2VyaXNjaSB1bmEgbWFpbCB2YWxpZGEgbmFtZUBzZXJ2ZXIuY29tJylcbiAgICAgICAgLmN1c3RvbSgodmFsdWUsIHtyZXF9KSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gVXNlci5maW5kT25lKHt3aGVyZSA6IHtlbWFpbCA6IHZhbHVlfX0pLnRoZW4odXNlciA9PiB7XG4gICAgICAgICAgICAgICAgaWYodXNlcikge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoJ0VtYWlsIEVzaXN0ZW50ZScpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KSxcbiAgICAgICAgYm9keSgncGFzc3dvcmQnKS50cmltKCkuaXNMZW5ndGgoe21pbiA6IDV9KS53aXRoTWVzc2FnZSgnUGFzc3dvcmQgPiA1IGNhcmF0dGVyaScpLFxuICAgICAgICBib2R5KCduYW1lJykudHJpbSgpLm5vdCgpLmlzRW1wdHkoKS53aXRoTWVzc2FnZSgnTmFtZSBub24gdnVvdG8nKSxcbiAgICBdLFxuICAgIGF1dGhDb250cm9sbGVyLnJlZ2lzdGVyVXNlcik7XG5cbnJvdXRlci5wb3N0KCcvbG9naW4nLCBcbiAgICBbXG4gICAgICAgIGJvZHkoJ2VtYWlsJykuaXNFbWFpbCgpLndpdGhNZXNzYWdlKCdJbnNlcmlzY2kgdW5hIG1haWwgdmFsaWRhIG5hbWVAc2VydmVyLmNvbScpLFxuICAgICAgICBib2R5KCdwYXNzd29yZCcpLnRyaW0oKS5pc0xlbmd0aCh7bWluIDogNX0pLndpdGhNZXNzYWdlKCdQYXNzd29yZCA+IDUgY2FyYXR0ZXJpJyksXG4gICAgXSwgIFxuICAgIGF1dGhDb250cm9sbGVyLmxvZ2luVXNlcik7XG5cbnJvdXRlci5nZXQoJy9tZScsIGlzQXV0aCwgYXV0aENvbnRyb2xsZXIubG9naW5NZSk7XG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "auth.js"
      ],
      "names": [
        "express",
        "require",
        "body",
        "query",
        "router",
        "Router",
        "authController",
        "User",
        "isAuth",
        "post",
        "isEmail",
        "withMessage",
        "custom",
        "value",
        "req",
        "findOne",
        "where",
        "email",
        "then",
        "user",
        "Promise",
        "reject",
        "trim",
        "isLength",
        "min",
        "not",
        "isEmpty",
        "registerUser",
        "loginUser",
        "get",
        "loginMe",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;eACwBA,OAAO,CAAC,yBAAD,C;IAAvBC,I,YAAAA,I;IAAMC,K,YAAAA,K;;AACd,IAAMC,MAAM,GAAGJ,OAAO,CAACK,MAAR,EAAf;;AAEA,IAAMC,cAAc,GAAGL,OAAO,CAAC,qBAAD,CAA9B;;AACA,IAAMM,IAAI,GAAGN,OAAO,CAAC,gBAAD,CAApB;;AACA,IAAMO,MAAM,GAAGP,OAAO,CAAC,uBAAD,CAAtB;;AAEAG,MAAM,CAACK,IAAP,CAAY,WAAZ,EACI,CACIP,IAAI,CAAC,OAAD,CAAJ,CAAcQ,OAAd,GAAwBC,WAAxB,CAAoC,2CAApC,EACCC,MADD,CACQ,UAACC,KAAD,QAAkB;AAAA,MAATC,GAAS,QAATA,GAAS;AACtB,SAAOP,IAAI,CAACQ,OAAL,CAAa;AAACC,IAAAA,KAAK,EAAG;AAACC,MAAAA,KAAK,EAAGJ;AAAT;AAAT,GAAb,EAAwCK,IAAxC,CAA6C,UAAAC,IAAI,EAAI;AACxD,QAAGA,IAAH,EAAS;AACL,aAAOC,OAAO,CAACC,MAAR,CAAe,iBAAf,CAAP;AACH;AACJ,GAJM,CAAP;AAKH,CAPD,CADJ,EASInB,IAAI,CAAC,UAAD,CAAJ,CAAiBoB,IAAjB,GAAwBC,QAAxB,CAAiC;AAACC,EAAAA,GAAG,EAAG;AAAP,CAAjC,EAA4Cb,WAA5C,CAAwD,wBAAxD,CATJ,EAUIT,IAAI,CAAC,MAAD,CAAJ,CAAaoB,IAAb,GAAoBG,GAApB,GAA0BC,OAA1B,GAAoCf,WAApC,CAAgD,gBAAhD,CAVJ,CADJ,EAaIL,cAAc,CAACqB,YAbnB;AAeAvB,MAAM,CAACK,IAAP,CAAY,QAAZ,EACI,CACIP,IAAI,CAAC,OAAD,CAAJ,CAAcQ,OAAd,GAAwBC,WAAxB,CAAoC,2CAApC,CADJ,EAEIT,IAAI,CAAC,UAAD,CAAJ,CAAiBoB,IAAjB,GAAwBC,QAAxB,CAAiC;AAACC,EAAAA,GAAG,EAAG;AAAP,CAAjC,EAA4Cb,WAA5C,CAAwD,wBAAxD,CAFJ,CADJ,EAKIL,cAAc,CAACsB,SALnB;AAOAxB,MAAM,CAACyB,GAAP,CAAW,KAAX,EAAkBrB,MAAlB,EAA0BF,cAAc,CAACwB,OAAzC;AAEAC,MAAM,CAACC,OAAP,GAAiB5B,MAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes",
      "sourcesContent": [
        "const express = require('express');\nconst { body, query } = require('express-validator/check');\nconst router = express.Router();\n\nconst authController = require('../controllers/auth');\nconst User = require('../models/user');\nconst isAuth = require('../middleware/is-auth');\n\nrouter.post('/register',\n    [\n        body('email').isEmail().withMessage('Inserisci una mail valida name@server.com')\n        .custom((value, {req}) => {\n            return User.findOne({where : {email : value}}).then(user => {\n                if(user) {\n                    return Promise.reject('Email Esistente');\n                }\n            });\n        }),\n        body('password').trim().isLength({min : 5}).withMessage('Password > 5 caratteri'),\n        body('name').trim().not().isEmpty().withMessage('Name non vuoto'),\n    ],\n    authController.registerUser);\n\nrouter.post('/login', \n    [\n        body('email').isEmail().withMessage('Inserisci una mail valida name@server.com'),\n        body('password').trim().isLength({min : 5}).withMessage('Password > 5 caratteri'),\n    ],  \n    authController.loginUser);\n\nrouter.get('/me', isAuth, authController.loginMe);\n\nmodule.exports = router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1577043519950
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/controllers/auth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers/auth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers/auth.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers/auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers",
        "sourceFileName": "auth.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _require = require('express-validator/check'),\n    validationResult = _require.validationResult;\n\nvar bcrypt = require('bcryptjs');\n\nvar jwt = require('jsonwebtoken');\n\nvar User = require('../models/user');\n\nexports.registerUser = function (req, res, next) {\n  var errors = validationResult(req);\n\n  if (!errors.isEmpty()) {\n    return res.status(422).json({\n      message: 'Errore input parametri',\n      error: errors.array()\n    });\n  }\n\n  var email = req.body.email;\n  var name = req.body.name;\n  var phoneNumber = req.body.phoneNumber;\n  var password = req.body.password;\n  bcrypt.hash(password, 12).then(function (hashedPassword) {\n    User.create({\n      name: name,\n      email: email,\n      phoneNumber: phoneNumber,\n      password: hashedPassword\n    }).then(function (user) {\n      res.status(201).json({\n        messages: 'Success Operation',\n        user: user\n      });\n    })[\"catch\"](function (err) {\n      return res.status(422).json({\n        message: err\n      });\n    });\n  })[\"catch\"](function (err) {\n    return res.status(422).json({\n      message: err\n    });\n  });\n};\n\nexports.loginMe = function (req, res, next) {\n  req.user.password = '***************';\n  res.status(200).json({\n    user: req.user\n  });\n};\n\nexports.loginUser = function (req, res, next) {\n  var errors = validationResult(req);\n\n  if (!errors.isEmpty()) {\n    return res.status(422).json({\n      message: 'Errore input parametri',\n      error: errors.array()\n    });\n  }\n\n  var email = req.body.email;\n  var password = req.body.password;\n  var loginUser;\n  User.findOne({\n    where: {\n      email: email\n    }\n  }).then(function (user) {\n    if (!user) {\n      return res.status(401).json({\n        message: 'Non autorizzato, Email errata'\n      });\n    }\n\n    loginUser = user;\n    return bcrypt.compare(password, user.password);\n  }).then(function (isEqual) {\n    if (!isEqual) {\n      return res.status(401).json({\n        message: 'Non autorizzato, Password errata'\n      });\n    }\n\n    var token = jwt.sign({\n      id: loginUser.id,\n      email: loginUser.email,\n      name: loginUser.name\n    }, 'axAYgScUa4Z2UdjgirykmI3iZsSCaPGh', {\n      expiresIn: '1h'\n    });\n    res.status(201).json({\n      messages: 'Sei Loggato',\n      id: loginUser.id,\n      token: token\n    });\n  })[\"catch\"](function (err) {\n    return res.status(422).json({\n      message: err\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "auth.js"
      ],
      "names": [
        "require",
        "validationResult",
        "bcrypt",
        "jwt",
        "User",
        "exports",
        "registerUser",
        "req",
        "res",
        "next",
        "errors",
        "isEmpty",
        "status",
        "json",
        "message",
        "error",
        "array",
        "email",
        "body",
        "name",
        "phoneNumber",
        "password",
        "hash",
        "then",
        "hashedPassword",
        "create",
        "user",
        "messages",
        "err",
        "loginMe",
        "loginUser",
        "findOne",
        "where",
        "compare",
        "isEqual",
        "token",
        "sign",
        "id",
        "expiresIn"
      ],
      "mappings": ";;eAA6BA,OAAO,CAAC,yBAAD,C;IAA5BC,gB,YAAAA,gB;;AACR,IAAMC,MAAM,GAAGF,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAMG,GAAG,GAAGH,OAAO,CAAC,cAAD,CAAnB;;AACA,IAAMI,IAAI,GAAGJ,OAAO,CAAC,gBAAD,CAApB;;AAEAK,OAAO,CAACC,YAAR,GAAuB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACvC,MAAMC,MAAM,GAAGT,gBAAgB,CAACM,GAAD,CAA/B;;AAEA,MAAG,CAACG,MAAM,CAACC,OAAP,EAAJ,EAAsB;AAClB,WAAOH,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,OAAO,EAAG,wBADc;AAExBC,MAAAA,KAAK,EAAGL,MAAM,CAACM,KAAP;AAFgB,KAArB,CAAP;AAIH;;AAED,MAAMC,KAAK,GAAGV,GAAG,CAACW,IAAJ,CAASD,KAAvB;AACA,MAAME,IAAI,GAAGZ,GAAG,CAACW,IAAJ,CAASC,IAAtB;AACA,MAAMC,WAAW,GAAGb,GAAG,CAACW,IAAJ,CAASE,WAA7B;AACA,MAAMC,QAAQ,GAAGd,GAAG,CAACW,IAAJ,CAASG,QAA1B;AAEAnB,EAAAA,MAAM,CAACoB,IAAP,CAAYD,QAAZ,EAAsB,EAAtB,EACCE,IADD,CACM,UAAAC,cAAc,EAAI;AACpBpB,IAAAA,IAAI,CAACqB,MAAL,CAAY;AAACN,MAAAA,IAAI,EAAGA,IAAR;AAAcF,MAAAA,KAAK,EAAGA,KAAtB;AAA6BG,MAAAA,WAAW,EAAGA,WAA3C;AAAwDC,MAAAA,QAAQ,EAAGG;AAAnE,KAAZ,EACCD,IADD,CACM,UAAAG,IAAI,EAAI;AACVlB,MAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBc,QAAAA,QAAQ,EAAG,mBADM;AAEjBD,QAAAA,IAAI,EAAGA;AAFU,OAArB;AAIH,KAND,WAOO,UAAAE,GAAG,EAAI;AACV,aAAOpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,QAAAA,OAAO,EAAGc;AADc,OAArB,CAAP;AAGH,KAXD;AAYH,GAdD,WAeO,UAAAA,GAAG,EAAI;AACV,WAAOpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,OAAO,EAAGc;AADc,KAArB,CAAP;AAGH,GAnBD;AAoBH,CAnCD;;AAqCAvB,OAAO,CAACwB,OAAR,GAAkB,UAACtB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClCF,EAAAA,GAAG,CAACmB,IAAJ,CAASL,QAAT,GAAoB,iBAApB;AACAb,EAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBa,IAAAA,IAAI,EAAGnB,GAAG,CAACmB;AADM,GAArB;AAGH,CALD;;AAOArB,OAAO,CAACyB,SAAR,GAAoB,UAACvB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACpC,MAAMC,MAAM,GAAGT,gBAAgB,CAACM,GAAD,CAA/B;;AAEA,MAAG,CAACG,MAAM,CAACC,OAAP,EAAJ,EAAsB;AAClB,WAAOH,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,OAAO,EAAG,wBADc;AAExBC,MAAAA,KAAK,EAAGL,MAAM,CAACM,KAAP;AAFgB,KAArB,CAAP;AAIH;;AAED,MAAMC,KAAK,GAAGV,GAAG,CAACW,IAAJ,CAASD,KAAvB;AACA,MAAMI,QAAQ,GAAGd,GAAG,CAACW,IAAJ,CAASG,QAA1B;AAEA,MAAIS,SAAJ;AACA1B,EAAAA,IAAI,CAAC2B,OAAL,CAAa;AAACC,IAAAA,KAAK,EAAG;AAACf,MAAAA,KAAK,EAAGA;AAAT;AAAT,GAAb,EAAwCM,IAAxC,CAA6C,UAAAG,IAAI,EAAI;AACjD,QAAG,CAACA,IAAJ,EAAU;AACN,aAAOlB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,QAAAA,OAAO,EAAG;AADc,OAArB,CAAP;AAGH;;AACDgB,IAAAA,SAAS,GAAGJ,IAAZ;AACA,WAAOxB,MAAM,CAAC+B,OAAP,CAAeZ,QAAf,EAAyBK,IAAI,CAACL,QAA9B,CAAP;AACH,GARD,EASCE,IATD,CASM,UAAAW,OAAO,EAAI;AACb,QAAG,CAACA,OAAJ,EAAY;AACR,aAAO1B,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,QAAAA,OAAO,EAAG;AADc,OAArB,CAAP;AAGH;;AACD,QAAMqB,KAAK,GAAGhC,GAAG,CAACiC,IAAJ,CACV;AACIC,MAAAA,EAAE,EAAGP,SAAS,CAACO,EADnB;AAEIpB,MAAAA,KAAK,EAAGa,SAAS,CAACb,KAFtB;AAGIE,MAAAA,IAAI,EAAGW,SAAS,CAACX;AAHrB,KADU,EAKP,kCALO,EAK6B;AAACmB,MAAAA,SAAS,EAAG;AAAb,KAL7B,CAAd;AAOA9B,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBc,MAAAA,QAAQ,EAAG,aADM;AAEjBU,MAAAA,EAAE,EAAGP,SAAS,CAACO,EAFE;AAGjBF,MAAAA,KAAK,EAAGA;AAHS,KAArB;AAKH,GA3BD,WA4BO,UAAAP,GAAG,EAAI;AACV,WAAOpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,OAAO,EAAGc;AADc,KAArB,CAAP;AAGH,GAhCD;AAiCH,CA/CD",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers",
      "sourcesContent": [
        "const { validationResult } = require('express-validator/check');\nconst bcrypt = require('bcryptjs');\nconst jwt = require('jsonwebtoken');\nconst User = require('../models/user');\n\nexports.registerUser = (req, res, next) => {\n    const errors = validationResult(req);\n    \n    if(!errors.isEmpty()) {\n        return res.status(422).json({\n            message : 'Errore input parametri',\n            error : errors.array()\n        });\n    }\n\n    const email = req.body.email;\n    const name = req.body.name;\n    const phoneNumber = req.body.phoneNumber;\n    const password = req.body.password;\n\n    bcrypt.hash(password, 12)\n    .then(hashedPassword => {\n        User.create({name : name, email : email, phoneNumber : phoneNumber, password : hashedPassword})\n        .then(user => {\n            res.status(201).json({\n                messages : 'Success Operation',\n                user : user\n            });\n        })\n        .catch(err => {\n            return res.status(422).json({\n                message : err\n            })\n        });\n    })\n    .catch(err => {\n        return res.status(422).json({\n            message : err\n        });\n    });\n};\n\nexports.loginMe = (req, res, next) => {\n    req.user.password = '***************';\n    res.status(200).json({\n        user : req.user,\n    });\n};\n\nexports.loginUser = (req, res, next) => {\n    const errors = validationResult(req);\n    \n    if(!errors.isEmpty()) {\n        return res.status(422).json({\n            message : 'Errore input parametri',\n            error : errors.array()\n        });\n    }\n\n    const email = req.body.email;\n    const password = req.body.password;\n\n    let loginUser;\n    User.findOne({where : {email : email}}).then(user => {\n        if(!user) {\n            return res.status(401).json({\n                message : 'Non autorizzato, Email errata',\n            });\n        }\n        loginUser = user;\n        return bcrypt.compare(password, user.password);\n    })\n    .then(isEqual => {\n        if(!isEqual){\n            return res.status(401).json({\n                message : 'Non autorizzato, Password errata',\n            });\n        }\n        const token = jwt.sign(\n            {\n                id : loginUser.id, \n                email : loginUser.email,\n                name : loginUser.name\n            }, 'axAYgScUa4Z2UdjgirykmI3iZsSCaPGh', {expiresIn : '1h'});\n\n        res.status(201).json({\n            messages : 'Sei Loggato',\n            id : loginUser.id,\n            token : token\n        });\n    })\n    .catch(err => {\n        return res.status(422).json({\n            message : err\n        });\n    });\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1576679187963
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/routes/gallery.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes/gallery.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes/gallery.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes/gallery.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes",
        "sourceFileName": "gallery.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar _require = require('express-validator/check'),\n    body = _require.body,\n    query = _require.query;\n\nvar router = express.Router();\n\nvar isAuth = require('../middleware/is-auth');\n\nvar galleryController = require('../controllers/gallery');\n\nvar path = require('path');\n\nvar multer = require('multer');\n\nvar uuidv4 = require('uuid/v4');\n\nvar storage = multer.diskStorage({\n  destination: function destination(req, file, callback) {\n    callback(null, 'public/gallery');\n  },\n  filename: function filename(req, file, callback) {\n    //callback(null, Date.now() + '-' + file.originalname);\n    callback(null, uuidv4() + path.extname(file.originalname));\n  }\n});\n\nvar fileFilter = function fileFilter(req, file, callback) {\n  if (file.mimetype == 'image/png' || file.mimetype == 'image/jpg' || file.mimetype == 'image/jpeg') {\n    callback(null, true);\n  } else {\n    req.fileValidationError = \"Estensione non consentita solo: 'image/jpg' | 'image/png' | 'image/jpeg'\";\n    callback(null, false);\n  }\n};\n\nvar upload = multer({\n  storage: storage,\n  fileFilter: fileFilter\n});\nvar cpUpload = upload.fields([{\n  name: 'avatar',\n  maxCount: 1\n}, {\n  name: 'gallery',\n  maxCount: 8\n}]);\nrouter.post('/', [isAuth, cpUpload], galleryController.createGallery);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhbGxlcnkuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJib2R5IiwicXVlcnkiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJpc0F1dGgiLCJnYWxsZXJ5Q29udHJvbGxlciIsInBhdGgiLCJtdWx0ZXIiLCJ1dWlkdjQiLCJzdG9yYWdlIiwiZGlza1N0b3JhZ2UiLCJkZXN0aW5hdGlvbiIsInJlcSIsImZpbGUiLCJjYWxsYmFjayIsImZpbGVuYW1lIiwiZXh0bmFtZSIsIm9yaWdpbmFsbmFtZSIsImZpbGVGaWx0ZXIiLCJtaW1ldHlwZSIsImZpbGVWYWxpZGF0aW9uRXJyb3IiLCJ1cGxvYWQiLCJjcFVwbG9hZCIsImZpZWxkcyIsIm5hbWUiLCJtYXhDb3VudCIsInBvc3QiLCJjcmVhdGVHYWxsZXJ5IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztlQUN3QkEsT0FBTyxDQUFDLHlCQUFELEM7SUFBdkJDLEksWUFBQUEsSTtJQUFNQyxLLFlBQUFBLEs7O0FBQ2QsSUFBTUMsTUFBTSxHQUFHSixPQUFPLENBQUNLLE1BQVIsRUFBZjs7QUFFQSxJQUFNQyxNQUFNLEdBQUdMLE9BQU8sQ0FBQyx1QkFBRCxDQUF0Qjs7QUFFQSxJQUFNTSxpQkFBaUIsR0FBR04sT0FBTyxDQUFDLHdCQUFELENBQWpDOztBQUVBLElBQU1PLElBQUksR0FBR1AsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTVEsTUFBTSxHQUFHUixPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFDQSxJQUFNUyxNQUFNLEdBQUdULE9BQU8sQ0FBQyxTQUFELENBQXRCOztBQUVBLElBQU1VLE9BQU8sR0FBR0YsTUFBTSxDQUFDRyxXQUFQLENBQW1CO0FBQy9CQyxFQUFBQSxXQUFXLEVBQUcscUJBQUNDLEdBQUQsRUFBTUMsSUFBTixFQUFZQyxRQUFaLEVBQXlCO0FBQ25DQSxJQUFBQSxRQUFRLENBQUMsSUFBRCxFQUFPLGdCQUFQLENBQVI7QUFDSCxHQUg4QjtBQUkvQkMsRUFBQUEsUUFBUSxFQUFHLGtCQUFDSCxHQUFELEVBQU1DLElBQU4sRUFBWUMsUUFBWixFQUF5QjtBQUNoQztBQUNBQSxJQUFBQSxRQUFRLENBQUMsSUFBRCxFQUFPTixNQUFNLEtBQUtGLElBQUksQ0FBQ1UsT0FBTCxDQUFhSCxJQUFJLENBQUNJLFlBQWxCLENBQWxCLENBQVI7QUFDSDtBQVA4QixDQUFuQixDQUFoQjs7QUFVQSxJQUFNQyxVQUFVLEdBQUksU0FBZEEsVUFBYyxDQUFDTixHQUFELEVBQU1DLElBQU4sRUFBWUMsUUFBWixFQUF5QjtBQUN6QyxNQUFHRCxJQUFJLENBQUNNLFFBQUwsSUFBaUIsV0FBakIsSUFBZ0NOLElBQUksQ0FBQ00sUUFBTCxJQUFpQixXQUFqRCxJQUFnRU4sSUFBSSxDQUFDTSxRQUFMLElBQWlCLFlBQXBGLEVBQWtHO0FBQzlGTCxJQUFBQSxRQUFRLENBQUMsSUFBRCxFQUFPLElBQVAsQ0FBUjtBQUNILEdBRkQsTUFFTztBQUNIRixJQUFBQSxHQUFHLENBQUNRLG1CQUFKLEdBQTBCLDBFQUExQjtBQUNBTixJQUFBQSxRQUFRLENBQUMsSUFBRCxFQUFPLEtBQVAsQ0FBUjtBQUNIO0FBQ0osQ0FQRDs7QUFTQSxJQUFJTyxNQUFNLEdBQUdkLE1BQU0sQ0FBQztBQUFFRSxFQUFBQSxPQUFPLEVBQUdBLE9BQVo7QUFBcUJTLEVBQUFBLFVBQVUsRUFBR0E7QUFBbEMsQ0FBRCxDQUFuQjtBQUVBLElBQUlJLFFBQVEsR0FBR0QsTUFBTSxDQUFDRSxNQUFQLENBQWMsQ0FDekI7QUFBQ0MsRUFBQUEsSUFBSSxFQUFHLFFBQVI7QUFBa0JDLEVBQUFBLFFBQVEsRUFBRztBQUE3QixDQUR5QixFQUV6QjtBQUFDRCxFQUFBQSxJQUFJLEVBQUcsU0FBUjtBQUFtQkMsRUFBQUEsUUFBUSxFQUFHO0FBQTlCLENBRnlCLENBQWQsQ0FBZjtBQUtBdkIsTUFBTSxDQUFDd0IsSUFBUCxDQUFZLEdBQVosRUFBaUIsQ0FBQ3RCLE1BQUQsRUFBU2tCLFFBQVQsQ0FBakIsRUFBcUNqQixpQkFBaUIsQ0FBQ3NCLGFBQXZEO0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjNCLE1BQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9BbGVzc2FuZHJvX011c29saW5vL0Rlc2t0b3AvZmlyc3RBUEkvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbmNvbnN0IHsgYm9keSwgcXVlcnkgfSA9IHJlcXVpcmUoJ2V4cHJlc3MtdmFsaWRhdG9yL2NoZWNrJyk7XG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuXG5jb25zdCBpc0F1dGggPSByZXF1aXJlKCcuLi9taWRkbGV3YXJlL2lzLWF1dGgnKTtcblxuY29uc3QgZ2FsbGVyeUNvbnRyb2xsZXIgPSByZXF1aXJlKCcuLi9jb250cm9sbGVycy9nYWxsZXJ5Jyk7XG5cbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5jb25zdCBtdWx0ZXIgPSByZXF1aXJlKCdtdWx0ZXInKTtcbmNvbnN0IHV1aWR2NCA9IHJlcXVpcmUoJ3V1aWQvdjQnKTtcblxuY29uc3Qgc3RvcmFnZSA9IG11bHRlci5kaXNrU3RvcmFnZSh7XG4gICAgZGVzdGluYXRpb24gOiAocmVxLCBmaWxlLCBjYWxsYmFjaykgPT4ge1xuICAgICAgICBjYWxsYmFjayhudWxsLCAncHVibGljL2dhbGxlcnknKTtcbiAgICB9LFxuICAgIGZpbGVuYW1lIDogKHJlcSwgZmlsZSwgY2FsbGJhY2spID0+IHtcbiAgICAgICAgLy9jYWxsYmFjayhudWxsLCBEYXRlLm5vdygpICsgJy0nICsgZmlsZS5vcmlnaW5hbG5hbWUpO1xuICAgICAgICBjYWxsYmFjayhudWxsLCB1dWlkdjQoKSArIHBhdGguZXh0bmFtZShmaWxlLm9yaWdpbmFsbmFtZSkpO1xuICAgIH0sXG59KTtcblxuY29uc3QgZmlsZUZpbHRlciA9ICgocmVxLCBmaWxlLCBjYWxsYmFjaykgPT4ge1xuICAgIGlmKGZpbGUubWltZXR5cGUgPT0gJ2ltYWdlL3BuZycgfHwgZmlsZS5taW1ldHlwZSA9PSAnaW1hZ2UvanBnJyB8fCBmaWxlLm1pbWV0eXBlID09ICdpbWFnZS9qcGVnJykge1xuICAgICAgICBjYWxsYmFjayhudWxsLCB0cnVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXEuZmlsZVZhbGlkYXRpb25FcnJvciA9IFwiRXN0ZW5zaW9uZSBub24gY29uc2VudGl0YSBzb2xvOiAnaW1hZ2UvanBnJyB8ICdpbWFnZS9wbmcnIHwgJ2ltYWdlL2pwZWcnXCI7XG4gICAgICAgIGNhbGxiYWNrKG51bGwsIGZhbHNlKTtcbiAgICB9XG59KTtcblxudmFyIHVwbG9hZCA9IG11bHRlcih7IHN0b3JhZ2UgOiBzdG9yYWdlLCBmaWxlRmlsdGVyIDogZmlsZUZpbHRlcn0pO1xuXG52YXIgY3BVcGxvYWQgPSB1cGxvYWQuZmllbGRzKFtcbiAgICB7bmFtZSA6ICdhdmF0YXInLCBtYXhDb3VudCA6IDF9LFxuICAgIHtuYW1lIDogJ2dhbGxlcnknLCBtYXhDb3VudCA6IDh9XG5dKTtcblxucm91dGVyLnBvc3QoJy8nLCBbaXNBdXRoLCBjcFVwbG9hZF0sIGdhbGxlcnlDb250cm9sbGVyLmNyZWF0ZUdhbGxlcnkpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "gallery.js"
      ],
      "names": [
        "express",
        "require",
        "body",
        "query",
        "router",
        "Router",
        "isAuth",
        "galleryController",
        "path",
        "multer",
        "uuidv4",
        "storage",
        "diskStorage",
        "destination",
        "req",
        "file",
        "callback",
        "filename",
        "extname",
        "originalname",
        "fileFilter",
        "mimetype",
        "fileValidationError",
        "upload",
        "cpUpload",
        "fields",
        "name",
        "maxCount",
        "post",
        "createGallery",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;eACwBA,OAAO,CAAC,yBAAD,C;IAAvBC,I,YAAAA,I;IAAMC,K,YAAAA,K;;AACd,IAAMC,MAAM,GAAGJ,OAAO,CAACK,MAAR,EAAf;;AAEA,IAAMC,MAAM,GAAGL,OAAO,CAAC,uBAAD,CAAtB;;AAEA,IAAMM,iBAAiB,GAAGN,OAAO,CAAC,wBAAD,CAAjC;;AAEA,IAAMO,IAAI,GAAGP,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMQ,MAAM,GAAGR,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMS,MAAM,GAAGT,OAAO,CAAC,SAAD,CAAtB;;AAEA,IAAMU,OAAO,GAAGF,MAAM,CAACG,WAAP,CAAmB;AAC/BC,EAAAA,WAAW,EAAG,qBAACC,GAAD,EAAMC,IAAN,EAAYC,QAAZ,EAAyB;AACnCA,IAAAA,QAAQ,CAAC,IAAD,EAAO,gBAAP,CAAR;AACH,GAH8B;AAI/BC,EAAAA,QAAQ,EAAG,kBAACH,GAAD,EAAMC,IAAN,EAAYC,QAAZ,EAAyB;AAChC;AACAA,IAAAA,QAAQ,CAAC,IAAD,EAAON,MAAM,KAAKF,IAAI,CAACU,OAAL,CAAaH,IAAI,CAACI,YAAlB,CAAlB,CAAR;AACH;AAP8B,CAAnB,CAAhB;;AAUA,IAAMC,UAAU,GAAI,SAAdA,UAAc,CAACN,GAAD,EAAMC,IAAN,EAAYC,QAAZ,EAAyB;AACzC,MAAGD,IAAI,CAACM,QAAL,IAAiB,WAAjB,IAAgCN,IAAI,CAACM,QAAL,IAAiB,WAAjD,IAAgEN,IAAI,CAACM,QAAL,IAAiB,YAApF,EAAkG;AAC9FL,IAAAA,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAR;AACH,GAFD,MAEO;AACHF,IAAAA,GAAG,CAACQ,mBAAJ,GAA0B,0EAA1B;AACAN,IAAAA,QAAQ,CAAC,IAAD,EAAO,KAAP,CAAR;AACH;AACJ,CAPD;;AASA,IAAIO,MAAM,GAAGd,MAAM,CAAC;AAAEE,EAAAA,OAAO,EAAGA,OAAZ;AAAqBS,EAAAA,UAAU,EAAGA;AAAlC,CAAD,CAAnB;AAEA,IAAII,QAAQ,GAAGD,MAAM,CAACE,MAAP,CAAc,CACzB;AAACC,EAAAA,IAAI,EAAG,QAAR;AAAkBC,EAAAA,QAAQ,EAAG;AAA7B,CADyB,EAEzB;AAACD,EAAAA,IAAI,EAAG,SAAR;AAAmBC,EAAAA,QAAQ,EAAG;AAA9B,CAFyB,CAAd,CAAf;AAKAvB,MAAM,CAACwB,IAAP,CAAY,GAAZ,EAAiB,CAACtB,MAAD,EAASkB,QAAT,CAAjB,EAAqCjB,iBAAiB,CAACsB,aAAvD;AAEAC,MAAM,CAACC,OAAP,GAAiB3B,MAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes",
      "sourcesContent": [
        "const express = require('express');\nconst { body, query } = require('express-validator/check');\nconst router = express.Router();\n\nconst isAuth = require('../middleware/is-auth');\n\nconst galleryController = require('../controllers/gallery');\n\nconst path = require('path');\nconst multer = require('multer');\nconst uuidv4 = require('uuid/v4');\n\nconst storage = multer.diskStorage({\n    destination : (req, file, callback) => {\n        callback(null, 'public/gallery');\n    },\n    filename : (req, file, callback) => {\n        //callback(null, Date.now() + '-' + file.originalname);\n        callback(null, uuidv4() + path.extname(file.originalname));\n    },\n});\n\nconst fileFilter = ((req, file, callback) => {\n    if(file.mimetype == 'image/png' || file.mimetype == 'image/jpg' || file.mimetype == 'image/jpeg') {\n        callback(null, true);\n    } else {\n        req.fileValidationError = \"Estensione non consentita solo: 'image/jpg' | 'image/png' | 'image/jpeg'\";\n        callback(null, false);\n    }\n});\n\nvar upload = multer({ storage : storage, fileFilter : fileFilter});\n\nvar cpUpload = upload.fields([\n    {name : 'avatar', maxCount : 1},\n    {name : 'gallery', maxCount : 8}\n]);\n\nrouter.post('/', [isAuth, cpUpload], galleryController.createGallery);\n\nmodule.exports = router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1576678459101
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/controllers/gallery.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers/gallery.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers/gallery.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers/gallery.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers",
        "sourceFileName": "gallery.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar path = require('path');\n\nexports.createGallery = function (req, res, next) {\n  res.status(201).json({\n    messages: 'Success Operation'\n  });\n\n  if (req.files.length == 0) {\n    return res.status(422).json({\n      message: req.fileValidationError ? req.fileValidationError : 'Nessun immagine allegata'\n    });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhbGxlcnkuanMiXSwibmFtZXMiOlsicGF0aCIsInJlcXVpcmUiLCJleHBvcnRzIiwiY3JlYXRlR2FsbGVyeSIsInJlcSIsInJlcyIsIm5leHQiLCJzdGF0dXMiLCJqc29uIiwibWVzc2FnZXMiLCJmaWxlcyIsImxlbmd0aCIsIm1lc3NhZ2UiLCJmaWxlVmFsaWRhdGlvbkVycm9yIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBRUFDLE9BQU8sQ0FBQ0MsYUFBUixHQUF3QixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFvQjtBQUV4Q0QsRUFBQUEsR0FBRyxDQUFDRSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDakJDLElBQUFBLFFBQVEsRUFBRztBQURNLEdBQXJCOztBQUlBLE1BQUdMLEdBQUcsQ0FBQ00sS0FBSixDQUFVQyxNQUFWLElBQW9CLENBQXZCLEVBQTBCO0FBQ3RCLFdBQU9OLEdBQUcsQ0FBQ0UsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ3hCSSxNQUFBQSxPQUFPLEVBQUdSLEdBQUcsQ0FBQ1MsbUJBQUosR0FBMEJULEdBQUcsQ0FBQ1MsbUJBQTlCLEdBQW9EO0FBRHRDLEtBQXJCLENBQVA7QUFHSDtBQUVKLENBWkQiLCJzb3VyY2VSb290IjoiL1VzZXJzL0FsZXNzYW5kcm9fTXVzb2xpbm8vRGVza3RvcC9maXJzdEFQSS9jb250cm9sbGVycyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5cbmV4cG9ydHMuY3JlYXRlR2FsbGVyeSA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuXG4gICAgcmVzLnN0YXR1cygyMDEpLmpzb24oe1xuICAgICAgICBtZXNzYWdlcyA6ICdTdWNjZXNzIE9wZXJhdGlvbicsXG4gICAgfSk7XG5cbiAgICBpZihyZXEuZmlsZXMubGVuZ3RoID09IDApIHtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDIyKS5qc29uKHtcbiAgICAgICAgICAgIG1lc3NhZ2UgOiByZXEuZmlsZVZhbGlkYXRpb25FcnJvciA/IHJlcS5maWxlVmFsaWRhdGlvbkVycm9yIDogJ05lc3N1biBpbW1hZ2luZSBhbGxlZ2F0YScsXG4gICAgICAgIH0pO1xuICAgIH1cblxufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "gallery.js"
      ],
      "names": [
        "path",
        "require",
        "exports",
        "createGallery",
        "req",
        "res",
        "next",
        "status",
        "json",
        "messages",
        "files",
        "length",
        "message",
        "fileValidationError"
      ],
      "mappings": ";;AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AAEAC,OAAO,CAACC,aAAR,GAAwB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAExCD,EAAAA,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,IAAAA,QAAQ,EAAG;AADM,GAArB;;AAIA,MAAGL,GAAG,CAACM,KAAJ,CAAUC,MAAV,IAAoB,CAAvB,EAA0B;AACtB,WAAON,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBI,MAAAA,OAAO,EAAGR,GAAG,CAACS,mBAAJ,GAA0BT,GAAG,CAACS,mBAA9B,GAAoD;AADtC,KAArB,CAAP;AAGH;AAEJ,CAZD",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers",
      "sourcesContent": [
        "const path = require('path');\n\nexports.createGallery = (req, res, next) => {\n\n    res.status(201).json({\n        messages : 'Success Operation',\n    });\n\n    if(req.files.length == 0) {\n        return res.status(422).json({\n            message : req.fileValidationError ? req.fileValidationError : 'Nessun immagine allegata',\n        });\n    }\n\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1576522843266
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"plugins\":[],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/firstAPI/app.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst router = express.Router();\n\nconst path = require('path');\n\nconst uuidv4 = require('uuid/v4');\n\nconst bodyParser = require('body-parser');\n\nconst feedRoutes = require('./routes/feed');\n\nconst fs = require('fs');\n\nvar helmet = require('helmet');\n\nvar morgan = require('morgan'); //const db = require('./utils/database');\n\n\nconst sequelize = require('./utils/database');\n\nconst app = express();\napp.use(helmet());\nconst logStream = fs.createWriteStream(path.join(__dirname, 'access.log'), {\n  flags: 'a'\n});\napp.use(morgan('combined', {\n  stream: logStream\n}));\napp.use(bodyParser.json()); //application/json\n\napp.use((req, res, next) => {\n  res.setHeader('Access-Control-Allow-Origin', '*');\n  res.setHeader('Access-Controlo-Allow-Methods', 'GET, POST, PUT, PATCH, DELETE');\n  res.setHeader('Access-Control-Allow-Headers', 'Content-Type, Authorization');\n  next();\n});\napp.use(express.static('public'));\nrouter.get('/', function (req, res) {\n  res.sendFile(path.join(__dirname + '/index.html'));\n}); //Routing\n\napp.use('/', router);\n\nrequire(\"./routes\")(app);\n\nconst Post = require('./models/post');\n\nconst User = require('./models/user');\n\nconst Like = require('./models/like');\n\nUser.hasMany(Post);\nPost.belongsTo(User, {\n  constraints: true,\n  onDelete: 'CASCADE'\n});\nUser.belongsToMany(Post, {\n  through: Like\n});\nPost.belongsToMany(User, {\n  through: Like\n});\nconsole.log(process.env.NODE_ENV || 'develop');\nsequelize.authenticate().then(rec => {\n  console.log('Connessione Stabilita con Successo'); //sequelize.sync({force:true})\n\n  sequelize.sync().then(user => {\n    console.log('Sync al DB con Successo');\n  }).catch(err => {\n    console.log('Sync al DB Error:', err);\n  });\n}).catch(err => {\n  console.log('Connession al DB Error:', err);\n});\napp.listen(process.env.PORT || 8081);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInJvdXRlciIsIlJvdXRlciIsInBhdGgiLCJ1dWlkdjQiLCJib2R5UGFyc2VyIiwiZmVlZFJvdXRlcyIsImZzIiwiaGVsbWV0IiwibW9yZ2FuIiwic2VxdWVsaXplIiwiYXBwIiwidXNlIiwibG9nU3RyZWFtIiwiY3JlYXRlV3JpdGVTdHJlYW0iLCJqb2luIiwiX19kaXJuYW1lIiwiZmxhZ3MiLCJzdHJlYW0iLCJqc29uIiwicmVxIiwicmVzIiwibmV4dCIsInNldEhlYWRlciIsInN0YXRpYyIsImdldCIsInNlbmRGaWxlIiwiUG9zdCIsIlVzZXIiLCJMaWtlIiwiaGFzTWFueSIsImJlbG9uZ3NUbyIsImNvbnN0cmFpbnRzIiwib25EZWxldGUiLCJiZWxvbmdzVG9NYW55IiwidGhyb3VnaCIsImNvbnNvbGUiLCJsb2ciLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJhdXRoZW50aWNhdGUiLCJ0aGVuIiwicmVjIiwic3luYyIsInVzZXIiLCJjYXRjaCIsImVyciIsImxpc3RlbiIsIlBPUlQiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsTUFBTUMsTUFBTSxHQUFHRixPQUFPLENBQUNHLE1BQVIsRUFBZjs7QUFDQSxNQUFNQyxJQUFJLEdBQUdILE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUNBLE1BQU1JLE1BQU0sR0FBR0osT0FBTyxDQUFDLFNBQUQsQ0FBdEI7O0FBQ0EsTUFBTUssVUFBVSxHQUFHTCxPQUFPLENBQUMsYUFBRCxDQUExQjs7QUFDQSxNQUFNTSxVQUFVLEdBQUdOLE9BQU8sQ0FBQyxlQUFELENBQTFCOztBQUNBLE1BQU1PLEVBQUUsR0FBR1AsT0FBTyxDQUFDLElBQUQsQ0FBbEI7O0FBQ0EsSUFBSVEsTUFBTSxHQUFHUixPQUFPLENBQUMsUUFBRCxDQUFwQjs7QUFDQSxJQUFJUyxNQUFNLEdBQUdULE9BQU8sQ0FBQyxRQUFELENBQXBCLEMsQ0FFQTs7O0FBQ0EsTUFBTVUsU0FBUyxHQUFJVixPQUFPLENBQUMsa0JBQUQsQ0FBMUI7O0FBRUEsTUFBTVcsR0FBRyxHQUFHWixPQUFPLEVBQW5CO0FBRUFZLEdBQUcsQ0FBQ0MsR0FBSixDQUFRSixNQUFNLEVBQWQ7QUFFQSxNQUFNSyxTQUFTLEdBQUdOLEVBQUUsQ0FBQ08saUJBQUgsQ0FBcUJYLElBQUksQ0FBQ1ksSUFBTCxDQUFVQyxTQUFWLEVBQXFCLFlBQXJCLENBQXJCLEVBQXlEO0FBQUNDLEVBQUFBLEtBQUssRUFBRztBQUFULENBQXpELENBQWxCO0FBQ0FOLEdBQUcsQ0FBQ0MsR0FBSixDQUFRSCxNQUFNLENBQUMsVUFBRCxFQUFhO0FBQUNTLEVBQUFBLE1BQU0sRUFBR0w7QUFBVixDQUFiLENBQWQ7QUFFQUYsR0FBRyxDQUFDQyxHQUFKLENBQVFQLFVBQVUsQ0FBQ2MsSUFBWCxFQUFSLEUsQ0FBNEI7O0FBRTVCUixHQUFHLENBQUNDLEdBQUosQ0FBUSxDQUFDUSxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUN4QkQsRUFBQUEsR0FBRyxDQUFDRSxTQUFKLENBQWMsNkJBQWQsRUFBNkMsR0FBN0M7QUFDQUYsRUFBQUEsR0FBRyxDQUFDRSxTQUFKLENBQWMsK0JBQWQsRUFBK0MsK0JBQS9DO0FBQ0FGLEVBQUFBLEdBQUcsQ0FBQ0UsU0FBSixDQUFjLDhCQUFkLEVBQThDLDZCQUE5QztBQUNBRCxFQUFBQSxJQUFJO0FBQ1AsQ0FMRDtBQU9BWCxHQUFHLENBQUNDLEdBQUosQ0FBUWIsT0FBTyxDQUFDeUIsTUFBUixDQUFlLFFBQWYsQ0FBUjtBQUVBdkIsTUFBTSxDQUFDd0IsR0FBUCxDQUFXLEdBQVgsRUFBZSxVQUFTTCxHQUFULEVBQWFDLEdBQWIsRUFBaUI7QUFDNUJBLEVBQUFBLEdBQUcsQ0FBQ0ssUUFBSixDQUFhdkIsSUFBSSxDQUFDWSxJQUFMLENBQVVDLFNBQVMsR0FBRyxhQUF0QixDQUFiO0FBQ0gsQ0FGRCxFLENBSUE7O0FBQ0FMLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLEdBQVIsRUFBWVgsTUFBWjs7QUFDQUQsT0FBTyxDQUFDLFVBQUQsQ0FBUCxDQUFvQlcsR0FBcEI7O0FBRUEsTUFBTWdCLElBQUksR0FBRzNCLE9BQU8sQ0FBQyxlQUFELENBQXBCOztBQUNBLE1BQU00QixJQUFJLEdBQUc1QixPQUFPLENBQUMsZUFBRCxDQUFwQjs7QUFDQSxNQUFNNkIsSUFBSSxHQUFHN0IsT0FBTyxDQUFDLGVBQUQsQ0FBcEI7O0FBRUE0QixJQUFJLENBQUNFLE9BQUwsQ0FBYUgsSUFBYjtBQUNBQSxJQUFJLENBQUNJLFNBQUwsQ0FBZUgsSUFBZixFQUFxQjtBQUFFSSxFQUFBQSxXQUFXLEVBQUcsSUFBaEI7QUFBc0JDLEVBQUFBLFFBQVEsRUFBRztBQUFqQyxDQUFyQjtBQUVBTCxJQUFJLENBQUNNLGFBQUwsQ0FBbUJQLElBQW5CLEVBQXdCO0FBQUNRLEVBQUFBLE9BQU8sRUFBR047QUFBWCxDQUF4QjtBQUNBRixJQUFJLENBQUNPLGFBQUwsQ0FBbUJOLElBQW5CLEVBQXdCO0FBQUNPLEVBQUFBLE9BQU8sRUFBR047QUFBWCxDQUF4QjtBQUVBTyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFFBQVosSUFBd0IsU0FBcEM7QUFFQTlCLFNBQVMsQ0FBQytCLFlBQVYsR0FBeUJDLElBQXpCLENBQStCQyxHQUFHLElBQUk7QUFDbENQLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLG9DQUFaLEVBRGtDLENBRWxDOztBQUNBM0IsRUFBQUEsU0FBUyxDQUFDa0MsSUFBVixHQUNDRixJQURELENBQ01HLElBQUksSUFBSTtBQUNWVCxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSx5QkFBWjtBQUNILEdBSEQsRUFHR1MsS0FISCxDQUdVQyxHQUFHLElBQUk7QUFDYlgsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksbUJBQVosRUFBZ0NVLEdBQWhDO0FBQ0gsR0FMRDtBQU1ILENBVEQsRUFTR0QsS0FUSCxDQVNVQyxHQUFHLElBQUk7QUFDWlgsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVkseUJBQVosRUFBc0NVLEdBQXRDO0FBQ0osQ0FYRDtBQWFBcEMsR0FBRyxDQUFDcUMsTUFBSixDQUFXVixPQUFPLENBQUNDLEdBQVIsQ0FBWVUsSUFBWixJQUFvQixJQUEvQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvQWxlc3NhbmRyb19NdXNvbGluby9EZXNrdG9wL2ZpcnN0QVBJIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuY29uc3QgdXVpZHY0ID0gcmVxdWlyZSgndXVpZC92NCcpO1xuY29uc3QgYm9keVBhcnNlciA9IHJlcXVpcmUoJ2JvZHktcGFyc2VyJyk7XG5jb25zdCBmZWVkUm91dGVzID0gcmVxdWlyZSgnLi9yb3V0ZXMvZmVlZCcpO1xuY29uc3QgZnMgPSByZXF1aXJlKCdmcycpO1xudmFyIGhlbG1ldCA9IHJlcXVpcmUoJ2hlbG1ldCcpO1xudmFyIG1vcmdhbiA9IHJlcXVpcmUoJ21vcmdhbicpO1xuXG4vL2NvbnN0IGRiID0gcmVxdWlyZSgnLi91dGlscy9kYXRhYmFzZScpO1xuY29uc3Qgc2VxdWVsaXplICA9IHJlcXVpcmUoJy4vdXRpbHMvZGF0YWJhc2UnKTtcblxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuXG5hcHAudXNlKGhlbG1ldCgpKTtcblxuY29uc3QgbG9nU3RyZWFtID0gZnMuY3JlYXRlV3JpdGVTdHJlYW0ocGF0aC5qb2luKF9fZGlybmFtZSwgJ2FjY2Vzcy5sb2cnKSwge2ZsYWdzIDogJ2EnfSk7XG5hcHAudXNlKG1vcmdhbignY29tYmluZWQnLCB7c3RyZWFtIDogbG9nU3RyZWFtfSkpO1xuXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTsgLy9hcHBsaWNhdGlvbi9qc29uXG5cbmFwcC51c2UoKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgcmVzLnNldEhlYWRlcignQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luJywgJyonKTtcbiAgICByZXMuc2V0SGVhZGVyKCdBY2Nlc3MtQ29udHJvbG8tQWxsb3ctTWV0aG9kcycsICdHRVQsIFBPU1QsIFBVVCwgUEFUQ0gsIERFTEVURScpO1xuICAgIHJlcy5zZXRIZWFkZXIoJ0FjY2Vzcy1Db250cm9sLUFsbG93LUhlYWRlcnMnLCAnQ29udGVudC1UeXBlLCBBdXRob3JpemF0aW9uJyk7XG4gICAgbmV4dCgpO1xufSk7XG5cbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMoJ3B1YmxpYycpKTtcblxucm91dGVyLmdldCgnLycsZnVuY3Rpb24ocmVxLHJlcyl7XG4gICAgcmVzLnNlbmRGaWxlKHBhdGguam9pbihfX2Rpcm5hbWUgKyAnL2luZGV4Lmh0bWwnKSk7XG59KTtcblxuLy9Sb3V0aW5nXG5hcHAudXNlKCcvJyxyb3V0ZXIpO1xucmVxdWlyZShcIi4vcm91dGVzXCIpKGFwcCk7XG5cbmNvbnN0IFBvc3QgPSByZXF1aXJlKCcuL21vZGVscy9wb3N0Jyk7XG5jb25zdCBVc2VyID0gcmVxdWlyZSgnLi9tb2RlbHMvdXNlcicpO1xuY29uc3QgTGlrZSA9IHJlcXVpcmUoJy4vbW9kZWxzL2xpa2UnKTtcblxuVXNlci5oYXNNYW55KFBvc3QpO1xuUG9zdC5iZWxvbmdzVG8oVXNlciwgeyBjb25zdHJhaW50cyA6IHRydWUsIG9uRGVsZXRlIDogJ0NBU0NBREUnfSk7XG5cblVzZXIuYmVsb25nc1RvTWFueShQb3N0LHt0aHJvdWdoIDogTGlrZX0pO1xuUG9zdC5iZWxvbmdzVG9NYW55KFVzZXIse3Rocm91Z2ggOiBMaWtlfSk7XG5cbmNvbnNvbGUubG9nKHByb2Nlc3MuZW52Lk5PREVfRU5WIHx8ICdkZXZlbG9wJyk7XG5cbnNlcXVlbGl6ZS5hdXRoZW50aWNhdGUoKS50aGVuKCByZWMgPT4ge1xuICAgIGNvbnNvbGUubG9nKCdDb25uZXNzaW9uZSBTdGFiaWxpdGEgY29uIFN1Y2Nlc3NvJyk7XG4gICAgLy9zZXF1ZWxpemUuc3luYyh7Zm9yY2U6dHJ1ZX0pXG4gICAgc2VxdWVsaXplLnN5bmMoKVxuICAgIC50aGVuKHVzZXIgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZygnU3luYyBhbCBEQiBjb24gU3VjY2Vzc28nKTtcbiAgICB9KS5jYXRjaCggZXJyID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coJ1N5bmMgYWwgREIgRXJyb3I6JyxlcnIpO1xuICAgIH0pO1xufSkuY2F0Y2goIGVyciA9PiB7XG4gICAgIGNvbnNvbGUubG9nKCdDb25uZXNzaW9uIGFsIERCIEVycm9yOicsZXJyKTtcbn0pO1xuXG5hcHAubGlzdGVuKHByb2Nlc3MuZW52LlBPUlQgfHwgODA4MSk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "path",
        "uuidv4",
        "bodyParser",
        "feedRoutes",
        "fs",
        "helmet",
        "morgan",
        "sequelize",
        "app",
        "use",
        "logStream",
        "createWriteStream",
        "join",
        "__dirname",
        "flags",
        "stream",
        "json",
        "req",
        "res",
        "next",
        "setHeader",
        "static",
        "get",
        "sendFile",
        "Post",
        "User",
        "Like",
        "hasMany",
        "belongsTo",
        "constraints",
        "onDelete",
        "belongsToMany",
        "through",
        "console",
        "log",
        "process",
        "env",
        "NODE_ENV",
        "authenticate",
        "then",
        "rec",
        "sync",
        "user",
        "catch",
        "err",
        "listen",
        "PORT"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AACA,MAAMC,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMI,MAAM,GAAGJ,OAAO,CAAC,SAAD,CAAtB;;AACA,MAAMK,UAAU,GAAGL,OAAO,CAAC,aAAD,CAA1B;;AACA,MAAMM,UAAU,GAAGN,OAAO,CAAC,eAAD,CAA1B;;AACA,MAAMO,EAAE,GAAGP,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAIQ,MAAM,GAAGR,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIS,MAAM,GAAGT,OAAO,CAAC,QAAD,CAApB,C,CAEA;;;AACA,MAAMU,SAAS,GAAIV,OAAO,CAAC,kBAAD,CAA1B;;AAEA,MAAMW,GAAG,GAAGZ,OAAO,EAAnB;AAEAY,GAAG,CAACC,GAAJ,CAAQJ,MAAM,EAAd;AAEA,MAAMK,SAAS,GAAGN,EAAE,CAACO,iBAAH,CAAqBX,IAAI,CAACY,IAAL,CAAUC,SAAV,EAAqB,YAArB,CAArB,EAAyD;AAACC,EAAAA,KAAK,EAAG;AAAT,CAAzD,CAAlB;AACAN,GAAG,CAACC,GAAJ,CAAQH,MAAM,CAAC,UAAD,EAAa;AAACS,EAAAA,MAAM,EAAGL;AAAV,CAAb,CAAd;AAEAF,GAAG,CAACC,GAAJ,CAAQP,UAAU,CAACc,IAAX,EAAR,E,CAA4B;;AAE5BR,GAAG,CAACC,GAAJ,CAAQ,CAACQ,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACxBD,EAAAA,GAAG,CAACE,SAAJ,CAAc,6BAAd,EAA6C,GAA7C;AACAF,EAAAA,GAAG,CAACE,SAAJ,CAAc,+BAAd,EAA+C,+BAA/C;AACAF,EAAAA,GAAG,CAACE,SAAJ,CAAc,8BAAd,EAA8C,6BAA9C;AACAD,EAAAA,IAAI;AACP,CALD;AAOAX,GAAG,CAACC,GAAJ,CAAQb,OAAO,CAACyB,MAAR,CAAe,QAAf,CAAR;AAEAvB,MAAM,CAACwB,GAAP,CAAW,GAAX,EAAe,UAASL,GAAT,EAAaC,GAAb,EAAiB;AAC5BA,EAAAA,GAAG,CAACK,QAAJ,CAAavB,IAAI,CAACY,IAAL,CAAUC,SAAS,GAAG,aAAtB,CAAb;AACH,CAFD,E,CAIA;;AACAL,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAYX,MAAZ;;AACAD,OAAO,CAAC,UAAD,CAAP,CAAoBW,GAApB;;AAEA,MAAMgB,IAAI,GAAG3B,OAAO,CAAC,eAAD,CAApB;;AACA,MAAM4B,IAAI,GAAG5B,OAAO,CAAC,eAAD,CAApB;;AACA,MAAM6B,IAAI,GAAG7B,OAAO,CAAC,eAAD,CAApB;;AAEA4B,IAAI,CAACE,OAAL,CAAaH,IAAb;AACAA,IAAI,CAACI,SAAL,CAAeH,IAAf,EAAqB;AAAEI,EAAAA,WAAW,EAAG,IAAhB;AAAsBC,EAAAA,QAAQ,EAAG;AAAjC,CAArB;AAEAL,IAAI,CAACM,aAAL,CAAmBP,IAAnB,EAAwB;AAACQ,EAAAA,OAAO,EAAGN;AAAX,CAAxB;AACAF,IAAI,CAACO,aAAL,CAAmBN,IAAnB,EAAwB;AAACO,EAAAA,OAAO,EAAGN;AAAX,CAAxB;AAEAO,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAAR,CAAYC,QAAZ,IAAwB,SAApC;AAEA9B,SAAS,CAAC+B,YAAV,GAAyBC,IAAzB,CAA+BC,GAAG,IAAI;AAClCP,EAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ,EADkC,CAElC;;AACA3B,EAAAA,SAAS,CAACkC,IAAV,GACCF,IADD,CACMG,IAAI,IAAI;AACVT,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACH,GAHD,EAGGS,KAHH,CAGUC,GAAG,IAAI;AACbX,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgCU,GAAhC;AACH,GALD;AAMH,CATD,EASGD,KATH,CASUC,GAAG,IAAI;AACZX,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAsCU,GAAtC;AACJ,CAXD;AAaApC,GAAG,CAACqC,MAAJ,CAAWV,OAAO,CAACC,GAAR,CAAYU,IAAZ,IAAoB,IAA/B",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "sourcesContent": [
        "const express = require('express');\nconst router = express.Router();\nconst path = require('path');\nconst uuidv4 = require('uuid/v4');\nconst bodyParser = require('body-parser');\nconst feedRoutes = require('./routes/feed');\nconst fs = require('fs');\nvar helmet = require('helmet');\nvar morgan = require('morgan');\n\n//const db = require('./utils/database');\nconst sequelize  = require('./utils/database');\n\nconst app = express();\n\napp.use(helmet());\n\nconst logStream = fs.createWriteStream(path.join(__dirname, 'access.log'), {flags : 'a'});\napp.use(morgan('combined', {stream : logStream}));\n\napp.use(bodyParser.json()); //application/json\n\napp.use((req, res, next) => {\n    res.setHeader('Access-Control-Allow-Origin', '*');\n    res.setHeader('Access-Controlo-Allow-Methods', 'GET, POST, PUT, PATCH, DELETE');\n    res.setHeader('Access-Control-Allow-Headers', 'Content-Type, Authorization');\n    next();\n});\n\napp.use(express.static('public'));\n\nrouter.get('/',function(req,res){\n    res.sendFile(path.join(__dirname + '/index.html'));\n});\n\n//Routing\napp.use('/',router);\nrequire(\"./routes\")(app);\n\nconst Post = require('./models/post');\nconst User = require('./models/user');\nconst Like = require('./models/like');\n\nUser.hasMany(Post);\nPost.belongsTo(User, { constraints : true, onDelete : 'CASCADE'});\n\nUser.belongsToMany(Post,{through : Like});\nPost.belongsToMany(User,{through : Like});\n\nconsole.log(process.env.NODE_ENV || 'develop');\n\nsequelize.authenticate().then( rec => {\n    console.log('Connessione Stabilita con Successo');\n    //sequelize.sync({force:true})\n    sequelize.sync()\n    .then(user => {\n        console.log('Sync al DB con Successo');\n    }).catch( err => {\n        console.log('Sync al DB Error:',err);\n    });\n}).catch( err => {\n     console.log('Connession al DB Error:',err);\n});\n\napp.listen(process.env.PORT || 8081);"
      ]
    },
    "sourceType": "module",
    "mtime": 1576596835810
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/routes/feed.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"plugins\":[],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes/feed.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes/feed.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes/feed.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes",
        "sourceFileName": "feed.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst {\n  body,\n  query\n} = require('express-validator/check');\n\nconst router = express.Router();\n\nconst isAuth = require('../middleware/is-auth');\n\nconst feedController = require('../controllers/feed');\n\nconst path = require('path');\n\nconst multer = require('multer');\n\nconst uuidv4 = require('uuid/v4');\n\nconst storage = multer.diskStorage({\n  destination: (req, file, callback) => {\n    callback(null, 'public/images');\n  },\n  filename: (req, file, callback) => {\n    //callback(null, Date.now() + '-' + file.originalname);\n    callback(null, uuidv4() + path.extname(file.originalname));\n  }\n});\n\nconst fileFilter = (req, file, callback) => {\n  if (file.mimetype == 'image/png' || file.mimetype == 'image/jpg' || file.mimetype == 'image/jpeg') {\n    callback(null, true);\n  } else {\n    req.fileValidationError = \"Estensione non consentita solo: 'image/jpg' | 'image/png' | 'image/jpeg'\";\n    callback(null, false);\n  }\n};\n\nvar upload = multer({\n  storage: storage,\n  fileFilter: fileFilter\n}); //NOT AUTH | AUTH\n//GET ALL /feed/posts\n//GET /feed/post/:id\n//POST /feed/post\n//PUT /feed/post/:id\n//DELETE /feed/post/:id\n//POST /feed/post/:id/like\n//POST /feed/posts\n\nvar cpUpload = upload.single('image');\nrouter.post('/post', [isAuth, cpUpload], [body('title').trim().isLowercase().withMessage('Titolo LowerCase').isLength({\n  min: 3\n}).withMessage('Titolo Maggiore di 3 Caratteri'), body('description').trim().isLength({\n  min: 5\n}).withMessage('Descrizione Maggiore di 5 Caratteri')], feedController.createPost);\nrouter.get('/post', feedController.getPosts);\nrouter.post('/post/:id/like', isAuth, feedController.likePost);\nrouter.get('/post/user/me', isAuth, feedController.getPostsByMe);\nrouter.get('/post/search', feedController.searchPost);\nrouter.get('/post/:id', feedController.getPost);\nrouter.put('/post/:id', isAuth, feedController.editPost);\nrouter.delete('/post/:id', isAuth, feedController.deletePost);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZlZWQuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJib2R5IiwicXVlcnkiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJpc0F1dGgiLCJmZWVkQ29udHJvbGxlciIsInBhdGgiLCJtdWx0ZXIiLCJ1dWlkdjQiLCJzdG9yYWdlIiwiZGlza1N0b3JhZ2UiLCJkZXN0aW5hdGlvbiIsInJlcSIsImZpbGUiLCJjYWxsYmFjayIsImZpbGVuYW1lIiwiZXh0bmFtZSIsIm9yaWdpbmFsbmFtZSIsImZpbGVGaWx0ZXIiLCJtaW1ldHlwZSIsImZpbGVWYWxpZGF0aW9uRXJyb3IiLCJ1cGxvYWQiLCJjcFVwbG9hZCIsInNpbmdsZSIsInBvc3QiLCJ0cmltIiwiaXNMb3dlcmNhc2UiLCJ3aXRoTWVzc2FnZSIsImlzTGVuZ3RoIiwibWluIiwiY3JlYXRlUG9zdCIsImdldCIsImdldFBvc3RzIiwibGlrZVBvc3QiLCJnZXRQb3N0c0J5TWUiLCJzZWFyY2hQb3N0IiwiZ2V0UG9zdCIsInB1dCIsImVkaXRQb3N0IiwiZGVsZXRlIiwiZGVsZXRlUG9zdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsTUFBTTtBQUFFQyxFQUFBQSxJQUFGO0FBQVFDLEVBQUFBO0FBQVIsSUFBa0JGLE9BQU8sQ0FBQyx5QkFBRCxDQUEvQjs7QUFDQSxNQUFNRyxNQUFNLEdBQUdKLE9BQU8sQ0FBQ0ssTUFBUixFQUFmOztBQUVBLE1BQU1DLE1BQU0sR0FBR0wsT0FBTyxDQUFDLHVCQUFELENBQXRCOztBQUVBLE1BQU1NLGNBQWMsR0FBR04sT0FBTyxDQUFDLHFCQUFELENBQTlCOztBQUVBLE1BQU1PLElBQUksR0FBR1AsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsTUFBTVEsTUFBTSxHQUFHUixPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFDQSxNQUFNUyxNQUFNLEdBQUdULE9BQU8sQ0FBQyxTQUFELENBQXRCOztBQUVBLE1BQU1VLE9BQU8sR0FBR0YsTUFBTSxDQUFDRyxXQUFQLENBQW1CO0FBQy9CQyxFQUFBQSxXQUFXLEVBQUcsQ0FBQ0MsR0FBRCxFQUFNQyxJQUFOLEVBQVlDLFFBQVosS0FBeUI7QUFDbkNBLElBQUFBLFFBQVEsQ0FBQyxJQUFELEVBQU8sZUFBUCxDQUFSO0FBQ0gsR0FIOEI7QUFJL0JDLEVBQUFBLFFBQVEsRUFBRyxDQUFDSCxHQUFELEVBQU1DLElBQU4sRUFBWUMsUUFBWixLQUF5QjtBQUNoQztBQUNBQSxJQUFBQSxRQUFRLENBQUMsSUFBRCxFQUFPTixNQUFNLEtBQUtGLElBQUksQ0FBQ1UsT0FBTCxDQUFhSCxJQUFJLENBQUNJLFlBQWxCLENBQWxCLENBQVI7QUFDSDtBQVA4QixDQUFuQixDQUFoQjs7QUFVQSxNQUFNQyxVQUFVLEdBQUksQ0FBQ04sR0FBRCxFQUFNQyxJQUFOLEVBQVlDLFFBQVosS0FBeUI7QUFDekMsTUFBR0QsSUFBSSxDQUFDTSxRQUFMLElBQWlCLFdBQWpCLElBQWdDTixJQUFJLENBQUNNLFFBQUwsSUFBaUIsV0FBakQsSUFBZ0VOLElBQUksQ0FBQ00sUUFBTCxJQUFpQixZQUFwRixFQUFrRztBQUM5RkwsSUFBQUEsUUFBUSxDQUFDLElBQUQsRUFBTyxJQUFQLENBQVI7QUFDSCxHQUZELE1BRU87QUFDSEYsSUFBQUEsR0FBRyxDQUFDUSxtQkFBSixHQUEwQiwwRUFBMUI7QUFDQU4sSUFBQUEsUUFBUSxDQUFDLElBQUQsRUFBTyxLQUFQLENBQVI7QUFDSDtBQUNKLENBUEQ7O0FBU0EsSUFBSU8sTUFBTSxHQUFHZCxNQUFNLENBQUM7QUFBRUUsRUFBQUEsT0FBTyxFQUFHQSxPQUFaO0FBQXFCUyxFQUFBQSxVQUFVLEVBQUdBO0FBQWxDLENBQUQsQ0FBbkIsQyxDQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7O0FBRUEsSUFBSUksUUFBUSxHQUFHRCxNQUFNLENBQUNFLE1BQVAsQ0FBYyxPQUFkLENBQWY7QUFFQXJCLE1BQU0sQ0FBQ3NCLElBQVAsQ0FBWSxPQUFaLEVBQXFCLENBQUNwQixNQUFELEVBQVNrQixRQUFULENBQXJCLEVBQ0ksQ0FDSXRCLElBQUksQ0FBQyxPQUFELENBQUosQ0FBY3lCLElBQWQsR0FDQ0MsV0FERCxHQUNlQyxXQURmLENBQzJCLGtCQUQzQixFQUVDQyxRQUZELENBRVU7QUFBQ0MsRUFBQUEsR0FBRyxFQUFHO0FBQVAsQ0FGVixFQUVxQkYsV0FGckIsQ0FFaUMsZ0NBRmpDLENBREosRUFJSTNCLElBQUksQ0FBQyxhQUFELENBQUosQ0FBb0J5QixJQUFwQixHQUNDRyxRQURELENBQ1U7QUFBQ0MsRUFBQUEsR0FBRyxFQUFHO0FBQVAsQ0FEVixFQUNxQkYsV0FEckIsQ0FDaUMscUNBRGpDLENBSkosQ0FESixFQVFDdEIsY0FBYyxDQUFDeUIsVUFSaEI7QUFVQTVCLE1BQU0sQ0FBQzZCLEdBQVAsQ0FBVyxPQUFYLEVBQW9CMUIsY0FBYyxDQUFDMkIsUUFBbkM7QUFDQTlCLE1BQU0sQ0FBQ3NCLElBQVAsQ0FBWSxnQkFBWixFQUE4QnBCLE1BQTlCLEVBQXNDQyxjQUFjLENBQUM0QixRQUFyRDtBQUNBL0IsTUFBTSxDQUFDNkIsR0FBUCxDQUFXLGVBQVgsRUFBNEIzQixNQUE1QixFQUFtQ0MsY0FBYyxDQUFDNkIsWUFBbEQ7QUFDQWhDLE1BQU0sQ0FBQzZCLEdBQVAsQ0FBVyxjQUFYLEVBQTJCMUIsY0FBYyxDQUFDOEIsVUFBMUM7QUFDQWpDLE1BQU0sQ0FBQzZCLEdBQVAsQ0FBVyxXQUFYLEVBQXdCMUIsY0FBYyxDQUFDK0IsT0FBdkM7QUFDQWxDLE1BQU0sQ0FBQ21DLEdBQVAsQ0FBVyxXQUFYLEVBQXdCakMsTUFBeEIsRUFBZ0NDLGNBQWMsQ0FBQ2lDLFFBQS9DO0FBQ0FwQyxNQUFNLENBQUNxQyxNQUFQLENBQWMsV0FBZCxFQUEyQm5DLE1BQTNCLEVBQW1DQyxjQUFjLENBQUNtQyxVQUFsRDtBQUdBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJ4QyxNQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvQWxlc3NhbmRyb19NdXNvbGluby9EZXNrdG9wL2ZpcnN0QVBJL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG5jb25zdCB7IGJvZHksIHF1ZXJ5IH0gPSByZXF1aXJlKCdleHByZXNzLXZhbGlkYXRvci9jaGVjaycpO1xuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcblxuY29uc3QgaXNBdXRoID0gcmVxdWlyZSgnLi4vbWlkZGxld2FyZS9pcy1hdXRoJyk7XG5cbmNvbnN0IGZlZWRDb250cm9sbGVyID0gcmVxdWlyZSgnLi4vY29udHJvbGxlcnMvZmVlZCcpO1xuXG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuY29uc3QgbXVsdGVyID0gcmVxdWlyZSgnbXVsdGVyJyk7XG5jb25zdCB1dWlkdjQgPSByZXF1aXJlKCd1dWlkL3Y0Jyk7XG5cbmNvbnN0IHN0b3JhZ2UgPSBtdWx0ZXIuZGlza1N0b3JhZ2Uoe1xuICAgIGRlc3RpbmF0aW9uIDogKHJlcSwgZmlsZSwgY2FsbGJhY2spID0+IHtcbiAgICAgICAgY2FsbGJhY2sobnVsbCwgJ3B1YmxpYy9pbWFnZXMnKTtcbiAgICB9LFxuICAgIGZpbGVuYW1lIDogKHJlcSwgZmlsZSwgY2FsbGJhY2spID0+IHtcbiAgICAgICAgLy9jYWxsYmFjayhudWxsLCBEYXRlLm5vdygpICsgJy0nICsgZmlsZS5vcmlnaW5hbG5hbWUpO1xuICAgICAgICBjYWxsYmFjayhudWxsLCB1dWlkdjQoKSArIHBhdGguZXh0bmFtZShmaWxlLm9yaWdpbmFsbmFtZSkpO1xuICAgIH0sXG59KTtcblxuY29uc3QgZmlsZUZpbHRlciA9ICgocmVxLCBmaWxlLCBjYWxsYmFjaykgPT4ge1xuICAgIGlmKGZpbGUubWltZXR5cGUgPT0gJ2ltYWdlL3BuZycgfHwgZmlsZS5taW1ldHlwZSA9PSAnaW1hZ2UvanBnJyB8fCBmaWxlLm1pbWV0eXBlID09ICdpbWFnZS9qcGVnJykge1xuICAgICAgICBjYWxsYmFjayhudWxsLCB0cnVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXEuZmlsZVZhbGlkYXRpb25FcnJvciA9IFwiRXN0ZW5zaW9uZSBub24gY29uc2VudGl0YSBzb2xvOiAnaW1hZ2UvanBnJyB8ICdpbWFnZS9wbmcnIHwgJ2ltYWdlL2pwZWcnXCI7XG4gICAgICAgIGNhbGxiYWNrKG51bGwsIGZhbHNlKTtcbiAgICB9XG59KTtcblxudmFyIHVwbG9hZCA9IG11bHRlcih7IHN0b3JhZ2UgOiBzdG9yYWdlLCBmaWxlRmlsdGVyIDogZmlsZUZpbHRlcn0pO1xuXG4vL05PVCBBVVRIIHwgQVVUSFxuLy9HRVQgQUxMIC9mZWVkL3Bvc3RzXG4vL0dFVCAvZmVlZC9wb3N0LzppZFxuXG4vL1BPU1QgL2ZlZWQvcG9zdFxuLy9QVVQgL2ZlZWQvcG9zdC86aWRcbi8vREVMRVRFIC9mZWVkL3Bvc3QvOmlkXG5cbi8vUE9TVCAvZmVlZC9wb3N0LzppZC9saWtlXG5cbi8vUE9TVCAvZmVlZC9wb3N0c1xuXG52YXIgY3BVcGxvYWQgPSB1cGxvYWQuc2luZ2xlKCdpbWFnZScpO1xuXG5yb3V0ZXIucG9zdCgnL3Bvc3QnLCBbaXNBdXRoLCBjcFVwbG9hZF0sXG4gICAgW1xuICAgICAgICBib2R5KCd0aXRsZScpLnRyaW0oKVxuICAgICAgICAuaXNMb3dlcmNhc2UoKS53aXRoTWVzc2FnZSgnVGl0b2xvIExvd2VyQ2FzZScpXG4gICAgICAgIC5pc0xlbmd0aCh7bWluIDogM30pLndpdGhNZXNzYWdlKCdUaXRvbG8gTWFnZ2lvcmUgZGkgMyBDYXJhdHRlcmknKSxcbiAgICAgICAgYm9keSgnZGVzY3JpcHRpb24nKS50cmltKClcbiAgICAgICAgLmlzTGVuZ3RoKHttaW4gOiA1fSkud2l0aE1lc3NhZ2UoJ0Rlc2NyaXppb25lIE1hZ2dpb3JlIGRpIDUgQ2FyYXR0ZXJpJyksXG4gICAgXVxuLGZlZWRDb250cm9sbGVyLmNyZWF0ZVBvc3QpO1xuXG5yb3V0ZXIuZ2V0KCcvcG9zdCcsIGZlZWRDb250cm9sbGVyLmdldFBvc3RzKTtcbnJvdXRlci5wb3N0KCcvcG9zdC86aWQvbGlrZScsIGlzQXV0aCwgZmVlZENvbnRyb2xsZXIubGlrZVBvc3QpO1xucm91dGVyLmdldCgnL3Bvc3QvdXNlci9tZScsIGlzQXV0aCxmZWVkQ29udHJvbGxlci5nZXRQb3N0c0J5TWUpO1xucm91dGVyLmdldCgnL3Bvc3Qvc2VhcmNoJywgZmVlZENvbnRyb2xsZXIuc2VhcmNoUG9zdCk7XG5yb3V0ZXIuZ2V0KCcvcG9zdC86aWQnLCBmZWVkQ29udHJvbGxlci5nZXRQb3N0KTtcbnJvdXRlci5wdXQoJy9wb3N0LzppZCcsIGlzQXV0aCwgZmVlZENvbnRyb2xsZXIuZWRpdFBvc3QpO1xucm91dGVyLmRlbGV0ZSgnL3Bvc3QvOmlkJywgaXNBdXRoLCBmZWVkQ29udHJvbGxlci5kZWxldGVQb3N0KTtcblxuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "feed.js"
      ],
      "names": [
        "express",
        "require",
        "body",
        "query",
        "router",
        "Router",
        "isAuth",
        "feedController",
        "path",
        "multer",
        "uuidv4",
        "storage",
        "diskStorage",
        "destination",
        "req",
        "file",
        "callback",
        "filename",
        "extname",
        "originalname",
        "fileFilter",
        "mimetype",
        "fileValidationError",
        "upload",
        "cpUpload",
        "single",
        "post",
        "trim",
        "isLowercase",
        "withMessage",
        "isLength",
        "min",
        "createPost",
        "get",
        "getPosts",
        "likePost",
        "getPostsByMe",
        "searchPost",
        "getPost",
        "put",
        "editPost",
        "delete",
        "deletePost",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAM;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,IAAkBF,OAAO,CAAC,yBAAD,CAA/B;;AACA,MAAMG,MAAM,GAAGJ,OAAO,CAACK,MAAR,EAAf;;AAEA,MAAMC,MAAM,GAAGL,OAAO,CAAC,uBAAD,CAAtB;;AAEA,MAAMM,cAAc,GAAGN,OAAO,CAAC,qBAAD,CAA9B;;AAEA,MAAMO,IAAI,GAAGP,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMQ,MAAM,GAAGR,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMS,MAAM,GAAGT,OAAO,CAAC,SAAD,CAAtB;;AAEA,MAAMU,OAAO,GAAGF,MAAM,CAACG,WAAP,CAAmB;AAC/BC,EAAAA,WAAW,EAAG,CAACC,GAAD,EAAMC,IAAN,EAAYC,QAAZ,KAAyB;AACnCA,IAAAA,QAAQ,CAAC,IAAD,EAAO,eAAP,CAAR;AACH,GAH8B;AAI/BC,EAAAA,QAAQ,EAAG,CAACH,GAAD,EAAMC,IAAN,EAAYC,QAAZ,KAAyB;AAChC;AACAA,IAAAA,QAAQ,CAAC,IAAD,EAAON,MAAM,KAAKF,IAAI,CAACU,OAAL,CAAaH,IAAI,CAACI,YAAlB,CAAlB,CAAR;AACH;AAP8B,CAAnB,CAAhB;;AAUA,MAAMC,UAAU,GAAI,CAACN,GAAD,EAAMC,IAAN,EAAYC,QAAZ,KAAyB;AACzC,MAAGD,IAAI,CAACM,QAAL,IAAiB,WAAjB,IAAgCN,IAAI,CAACM,QAAL,IAAiB,WAAjD,IAAgEN,IAAI,CAACM,QAAL,IAAiB,YAApF,EAAkG;AAC9FL,IAAAA,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAR;AACH,GAFD,MAEO;AACHF,IAAAA,GAAG,CAACQ,mBAAJ,GAA0B,0EAA1B;AACAN,IAAAA,QAAQ,CAAC,IAAD,EAAO,KAAP,CAAR;AACH;AACJ,CAPD;;AASA,IAAIO,MAAM,GAAGd,MAAM,CAAC;AAAEE,EAAAA,OAAO,EAAGA,OAAZ;AAAqBS,EAAAA,UAAU,EAAGA;AAAlC,CAAD,CAAnB,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;;AAEA,IAAII,QAAQ,GAAGD,MAAM,CAACE,MAAP,CAAc,OAAd,CAAf;AAEArB,MAAM,CAACsB,IAAP,CAAY,OAAZ,EAAqB,CAACpB,MAAD,EAASkB,QAAT,CAArB,EACI,CACItB,IAAI,CAAC,OAAD,CAAJ,CAAcyB,IAAd,GACCC,WADD,GACeC,WADf,CAC2B,kBAD3B,EAECC,QAFD,CAEU;AAACC,EAAAA,GAAG,EAAG;AAAP,CAFV,EAEqBF,WAFrB,CAEiC,gCAFjC,CADJ,EAII3B,IAAI,CAAC,aAAD,CAAJ,CAAoByB,IAApB,GACCG,QADD,CACU;AAACC,EAAAA,GAAG,EAAG;AAAP,CADV,EACqBF,WADrB,CACiC,qCADjC,CAJJ,CADJ,EAQCtB,cAAc,CAACyB,UARhB;AAUA5B,MAAM,CAAC6B,GAAP,CAAW,OAAX,EAAoB1B,cAAc,CAAC2B,QAAnC;AACA9B,MAAM,CAACsB,IAAP,CAAY,gBAAZ,EAA8BpB,MAA9B,EAAsCC,cAAc,CAAC4B,QAArD;AACA/B,MAAM,CAAC6B,GAAP,CAAW,eAAX,EAA4B3B,MAA5B,EAAmCC,cAAc,CAAC6B,YAAlD;AACAhC,MAAM,CAAC6B,GAAP,CAAW,cAAX,EAA2B1B,cAAc,CAAC8B,UAA1C;AACAjC,MAAM,CAAC6B,GAAP,CAAW,WAAX,EAAwB1B,cAAc,CAAC+B,OAAvC;AACAlC,MAAM,CAACmC,GAAP,CAAW,WAAX,EAAwBjC,MAAxB,EAAgCC,cAAc,CAACiC,QAA/C;AACApC,MAAM,CAACqC,MAAP,CAAc,WAAd,EAA2BnC,MAA3B,EAAmCC,cAAc,CAACmC,UAAlD;AAGAC,MAAM,CAACC,OAAP,GAAiBxC,MAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes",
      "sourcesContent": [
        "const express = require('express');\nconst { body, query } = require('express-validator/check');\nconst router = express.Router();\n\nconst isAuth = require('../middleware/is-auth');\n\nconst feedController = require('../controllers/feed');\n\nconst path = require('path');\nconst multer = require('multer');\nconst uuidv4 = require('uuid/v4');\n\nconst storage = multer.diskStorage({\n    destination : (req, file, callback) => {\n        callback(null, 'public/images');\n    },\n    filename : (req, file, callback) => {\n        //callback(null, Date.now() + '-' + file.originalname);\n        callback(null, uuidv4() + path.extname(file.originalname));\n    },\n});\n\nconst fileFilter = ((req, file, callback) => {\n    if(file.mimetype == 'image/png' || file.mimetype == 'image/jpg' || file.mimetype == 'image/jpeg') {\n        callback(null, true);\n    } else {\n        req.fileValidationError = \"Estensione non consentita solo: 'image/jpg' | 'image/png' | 'image/jpeg'\";\n        callback(null, false);\n    }\n});\n\nvar upload = multer({ storage : storage, fileFilter : fileFilter});\n\n//NOT AUTH | AUTH\n//GET ALL /feed/posts\n//GET /feed/post/:id\n\n//POST /feed/post\n//PUT /feed/post/:id\n//DELETE /feed/post/:id\n\n//POST /feed/post/:id/like\n\n//POST /feed/posts\n\nvar cpUpload = upload.single('image');\n\nrouter.post('/post', [isAuth, cpUpload],\n    [\n        body('title').trim()\n        .isLowercase().withMessage('Titolo LowerCase')\n        .isLength({min : 3}).withMessage('Titolo Maggiore di 3 Caratteri'),\n        body('description').trim()\n        .isLength({min : 5}).withMessage('Descrizione Maggiore di 5 Caratteri'),\n    ]\n,feedController.createPost);\n\nrouter.get('/post', feedController.getPosts);\nrouter.post('/post/:id/like', isAuth, feedController.likePost);\nrouter.get('/post/user/me', isAuth,feedController.getPostsByMe);\nrouter.get('/post/search', feedController.searchPost);\nrouter.get('/post/:id', feedController.getPost);\nrouter.put('/post/:id', isAuth, feedController.editPost);\nrouter.delete('/post/:id', isAuth, feedController.deletePost);\n\n\nmodule.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1576621630247
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/middleware\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/middleware/is-auth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"plugins\":[],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/middleware",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/middleware/is-auth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/firstAPI/middleware/is-auth.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/middleware/is-auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/middleware",
        "sourceFileName": "is-auth.js"
      }
    },
    "ast": null,
    "code": "const jwt = require('jsonwebtoken');\n\nconst User = require('../models/user');\n\nmodule.exports = (req, res, next) => {\n  console.log('AUTHORIZATION MIDDLEWARE');\n  console.log(req.get('Authorization'));\n  const auth = req.get('Authorization');\n\n  if (!auth) {\n    return res.status(401).json({\n      message: 'Non autorizzato'\n    });\n  }\n\n  const token = auth.split(' ')[1];\n  let decode;\n\n  try {\n    decode = jwt.verify(token, 'axAYgScUa4Z2UdjgirykmI3iZsSCaPGh');\n  } catch (err) {\n    return res.status(500).json({\n      message: 'Non autorizzato'\n    });\n  }\n\n  if (!decode) {\n    return res.status(401).json({\n      message: 'Non autorizzato'\n    });\n  }\n\n  let userId = decode.id;\n  User.findByPk(userId).then(user => {\n    req.user = user;\n    next();\n  }).catch(err => {\n    return res.status(401).json({\n      message: 'Non autorizzato'\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlzLWF1dGguanMiXSwibmFtZXMiOlsiand0IiwicmVxdWlyZSIsIlVzZXIiLCJtb2R1bGUiLCJleHBvcnRzIiwicmVxIiwicmVzIiwibmV4dCIsImNvbnNvbGUiLCJsb2ciLCJnZXQiLCJhdXRoIiwic3RhdHVzIiwianNvbiIsIm1lc3NhZ2UiLCJ0b2tlbiIsInNwbGl0IiwiZGVjb2RlIiwidmVyaWZ5IiwiZXJyIiwidXNlcklkIiwiaWQiLCJmaW5kQnlQayIsInRoZW4iLCJ1c2VyIiwiY2F0Y2giXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEdBQUcsR0FBR0MsT0FBTyxDQUFDLGNBQUQsQ0FBbkI7O0FBQ0EsTUFBTUMsSUFBSSxHQUFHRCxPQUFPLENBQUMsZ0JBQUQsQ0FBcEI7O0FBRUFFLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUNqQ0MsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksMEJBQVo7QUFDQUQsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlKLEdBQUcsQ0FBQ0ssR0FBSixDQUFRLGVBQVIsQ0FBWjtBQUVBLFFBQU1DLElBQUksR0FBR04sR0FBRyxDQUFDSyxHQUFKLENBQVEsZUFBUixDQUFiOztBQUVBLE1BQUcsQ0FBQ0MsSUFBSixFQUFVO0FBQ04sV0FBT0wsR0FBRyxDQUFDTSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDeEJDLE1BQUFBLE9BQU8sRUFBRztBQURjLEtBQXJCLENBQVA7QUFHSDs7QUFFRCxRQUFNQyxLQUFLLEdBQUdKLElBQUksQ0FBQ0ssS0FBTCxDQUFXLEdBQVgsRUFBZ0IsQ0FBaEIsQ0FBZDtBQUNBLE1BQUlDLE1BQUo7O0FBQ0EsTUFBRztBQUNDQSxJQUFBQSxNQUFNLEdBQUdqQixHQUFHLENBQUNrQixNQUFKLENBQVdILEtBQVgsRUFBa0Isa0NBQWxCLENBQVQ7QUFDSCxHQUZELENBRUMsT0FBTUksR0FBTixFQUFVO0FBQ1AsV0FBT2IsR0FBRyxDQUFDTSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDeEJDLE1BQUFBLE9BQU8sRUFBRztBQURjLEtBQXJCLENBQVA7QUFHSDs7QUFFRCxNQUFHLENBQUNHLE1BQUosRUFBWTtBQUNSLFdBQU9YLEdBQUcsQ0FBQ00sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ3hCQyxNQUFBQSxPQUFPLEVBQUc7QUFEYyxLQUFyQixDQUFQO0FBR0g7O0FBRUQsTUFBSU0sTUFBTSxHQUFHSCxNQUFNLENBQUNJLEVBQXBCO0FBRUFuQixFQUFBQSxJQUFJLENBQUNvQixRQUFMLENBQWNGLE1BQWQsRUFDQ0csSUFERCxDQUNNQyxJQUFJLElBQUk7QUFDVm5CLElBQUFBLEdBQUcsQ0FBQ21CLElBQUosR0FBV0EsSUFBWDtBQUNBakIsSUFBQUEsSUFBSTtBQUNQLEdBSkQsRUFJR2tCLEtBSkgsQ0FJU04sR0FBRyxJQUFJO0FBQ1osV0FBT2IsR0FBRyxDQUFDTSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDeEJDLE1BQUFBLE9BQU8sRUFBRztBQURjLEtBQXJCLENBQVA7QUFHSCxHQVJEO0FBU0gsQ0F2Q0QiLCJzb3VyY2VSb290IjoiL1VzZXJzL0FsZXNzYW5kcm9fTXVzb2xpbm8vRGVza3RvcC9maXJzdEFQSS9taWRkbGV3YXJlIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgand0ID0gcmVxdWlyZSgnanNvbndlYnRva2VuJyk7XG5jb25zdCBVc2VyID0gcmVxdWlyZSgnLi4vbW9kZWxzL3VzZXInKTtcblxubW9kdWxlLmV4cG9ydHMgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBjb25zb2xlLmxvZygnQVVUSE9SSVpBVElPTiBNSURETEVXQVJFJyk7XG4gICAgY29uc29sZS5sb2cocmVxLmdldCgnQXV0aG9yaXphdGlvbicpKTtcblxuICAgIGNvbnN0IGF1dGggPSByZXEuZ2V0KCdBdXRob3JpemF0aW9uJyk7XG5cbiAgICBpZighYXV0aCkge1xuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmpzb24oe1xuICAgICAgICAgICAgbWVzc2FnZSA6ICdOb24gYXV0b3JpenphdG8nLFxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBjb25zdCB0b2tlbiA9IGF1dGguc3BsaXQoJyAnKVsxXTtcbiAgICBsZXQgZGVjb2RlO1xuICAgIHRyeXtcbiAgICAgICAgZGVjb2RlID0gand0LnZlcmlmeSh0b2tlbiwgJ2F4QVlnU2NVYTRaMlVkamdpcnlrbUkzaVpzU0NhUEdoJyk7XG4gICAgfWNhdGNoKGVycil7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbih7XG4gICAgICAgICAgICBtZXNzYWdlIDogJ05vbiBhdXRvcml6emF0bycsXG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGlmKCFkZWNvZGUpIHtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5qc29uKHtcbiAgICAgICAgICAgIG1lc3NhZ2UgOiAnTm9uIGF1dG9yaXp6YXRvJyxcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgbGV0IHVzZXJJZCA9IGRlY29kZS5pZDtcbiAgICBcbiAgICBVc2VyLmZpbmRCeVBrKHVzZXJJZClcbiAgICAudGhlbih1c2VyID0+IHtcbiAgICAgICAgcmVxLnVzZXIgPSB1c2VyO1xuICAgICAgICBuZXh0KCk7XG4gICAgfSkuY2F0Y2goZXJyID0+IHtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5qc29uKHtcbiAgICAgICAgICAgIG1lc3NhZ2UgOiAnTm9uIGF1dG9yaXp6YXRvJyxcbiAgICAgICAgfSk7XG4gICAgfSk7XG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "is-auth.js"
      ],
      "names": [
        "jwt",
        "require",
        "User",
        "module",
        "exports",
        "req",
        "res",
        "next",
        "console",
        "log",
        "get",
        "auth",
        "status",
        "json",
        "message",
        "token",
        "split",
        "decode",
        "verify",
        "err",
        "userId",
        "id",
        "findByPk",
        "then",
        "user",
        "catch"
      ],
      "mappings": "AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,gBAAD,CAApB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,GAAJ,CAAQ,eAAR,CAAZ;AAEA,QAAMC,IAAI,GAAGN,GAAG,CAACK,GAAJ,CAAQ,eAAR,CAAb;;AAEA,MAAG,CAACC,IAAJ,EAAU;AACN,WAAOL,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,OAAO,EAAG;AADc,KAArB,CAAP;AAGH;;AAED,QAAMC,KAAK,GAAGJ,IAAI,CAACK,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAd;AACA,MAAIC,MAAJ;;AACA,MAAG;AACCA,IAAAA,MAAM,GAAGjB,GAAG,CAACkB,MAAJ,CAAWH,KAAX,EAAkB,kCAAlB,CAAT;AACH,GAFD,CAEC,OAAMI,GAAN,EAAU;AACP,WAAOb,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,OAAO,EAAG;AADc,KAArB,CAAP;AAGH;;AAED,MAAG,CAACG,MAAJ,EAAY;AACR,WAAOX,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,OAAO,EAAG;AADc,KAArB,CAAP;AAGH;;AAED,MAAIM,MAAM,GAAGH,MAAM,CAACI,EAApB;AAEAnB,EAAAA,IAAI,CAACoB,QAAL,CAAcF,MAAd,EACCG,IADD,CACMC,IAAI,IAAI;AACVnB,IAAAA,GAAG,CAACmB,IAAJ,GAAWA,IAAX;AACAjB,IAAAA,IAAI;AACP,GAJD,EAIGkB,KAJH,CAISN,GAAG,IAAI;AACZ,WAAOb,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,OAAO,EAAG;AADc,KAArB,CAAP;AAGH,GARD;AASH,CAvCD",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/middleware",
      "sourcesContent": [
        "const jwt = require('jsonwebtoken');\nconst User = require('../models/user');\n\nmodule.exports = (req, res, next) => {\n    console.log('AUTHORIZATION MIDDLEWARE');\n    console.log(req.get('Authorization'));\n\n    const auth = req.get('Authorization');\n\n    if(!auth) {\n        return res.status(401).json({\n            message : 'Non autorizzato',\n        });\n    }\n\n    const token = auth.split(' ')[1];\n    let decode;\n    try{\n        decode = jwt.verify(token, 'axAYgScUa4Z2UdjgirykmI3iZsSCaPGh');\n    }catch(err){\n        return res.status(500).json({\n            message : 'Non autorizzato',\n        });\n    }\n\n    if(!decode) {\n        return res.status(401).json({\n            message : 'Non autorizzato',\n        });\n    }\n\n    let userId = decode.id;\n    \n    User.findByPk(userId)\n    .then(user => {\n        req.user = user;\n        next();\n    }).catch(err => {\n        return res.status(401).json({\n            message : 'Non autorizzato',\n        });\n    });\n};"
      ]
    },
    "sourceType": "module",
    "mtime": 1576239096441
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/models/user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"plugins\":[],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/models/user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/firstAPI/models/user.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/models/user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/models",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst User = sequelize.define('user', {\n  id: {\n    type: Sequelize.INTEGER,\n    autoIncrement: true,\n    allowNull: false,\n    primaryKey: true\n  },\n  name: {\n    type: Sequelize.STRING,\n    allowNull: false\n  },\n  email: {\n    type: Sequelize.STRING,\n    allowNull: false\n  },\n  password: {\n    type: Sequelize.STRING,\n    allowNull: false\n  }\n});\nmodule.exports = User;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsiU2VxdWVsaXplIiwicmVxdWlyZSIsInNlcXVlbGl6ZSIsIlVzZXIiLCJkZWZpbmUiLCJpZCIsInR5cGUiLCJJTlRFR0VSIiwiYXV0b0luY3JlbWVudCIsImFsbG93TnVsbCIsInByaW1hcnlLZXkiLCJuYW1lIiwiU1RSSU5HIiwiZW1haWwiLCJwYXNzd29yZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFNBQVMsR0FBR0MsT0FBTyxDQUFDLFdBQUQsQ0FBekI7O0FBRUEsTUFBTUMsU0FBUyxHQUFHRCxPQUFPLENBQUMsbUJBQUQsQ0FBekI7O0FBRUEsTUFBTUUsSUFBSSxHQUFHRCxTQUFTLENBQUNFLE1BQVYsQ0FBaUIsTUFBakIsRUFBeUI7QUFDbENDLEVBQUFBLEVBQUUsRUFBRztBQUNEQyxJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ08sT0FEaEI7QUFFREMsSUFBQUEsYUFBYSxFQUFHLElBRmY7QUFHREMsSUFBQUEsU0FBUyxFQUFHLEtBSFg7QUFJREMsSUFBQUEsVUFBVSxFQUFHO0FBSlosR0FENkI7QUFPbENDLEVBQUFBLElBQUksRUFBRztBQUNITCxJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ1ksTUFEZDtBQUVISCxJQUFBQSxTQUFTLEVBQUc7QUFGVCxHQVAyQjtBQVdsQ0ksRUFBQUEsS0FBSyxFQUFHO0FBQ0pQLElBQUFBLElBQUksRUFBR04sU0FBUyxDQUFDWSxNQURiO0FBRUpILElBQUFBLFNBQVMsRUFBRztBQUZSLEdBWDBCO0FBZWxDSyxFQUFBQSxRQUFRLEVBQUc7QUFDUFIsSUFBQUEsSUFBSSxFQUFHTixTQUFTLENBQUNZLE1BRFY7QUFFUEgsSUFBQUEsU0FBUyxFQUFHO0FBRkw7QUFmdUIsQ0FBekIsQ0FBYjtBQXFCQU0sTUFBTSxDQUFDQyxPQUFQLEdBQWlCYixJQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvQWxlc3NhbmRyb19NdXNvbGluby9EZXNrdG9wL2ZpcnN0QVBJL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFNlcXVlbGl6ZSA9IHJlcXVpcmUoJ3NlcXVlbGl6ZScpO1xuXG5jb25zdCBzZXF1ZWxpemUgPSByZXF1aXJlKCcuLi91dGlscy9kYXRhYmFzZScpO1xuXG5jb25zdCBVc2VyID0gc2VxdWVsaXplLmRlZmluZSgndXNlcicsIHtcbiAgICBpZCA6IHtcbiAgICAgICAgdHlwZSA6IFNlcXVlbGl6ZS5JTlRFR0VSLFxuICAgICAgICBhdXRvSW5jcmVtZW50IDogdHJ1ZSxcbiAgICAgICAgYWxsb3dOdWxsIDogZmFsc2UsXG4gICAgICAgIHByaW1hcnlLZXkgOiB0cnVlXG4gICAgfSxcbiAgICBuYW1lIDoge1xuICAgICAgICB0eXBlIDogU2VxdWVsaXplLlNUUklORyxcbiAgICAgICAgYWxsb3dOdWxsIDogZmFsc2UsXG4gICAgfSxcbiAgICBlbWFpbCA6IHtcbiAgICAgICAgdHlwZSA6IFNlcXVlbGl6ZS5TVFJJTkcsXG4gICAgICAgIGFsbG93TnVsbCA6IGZhbHNlLFxuICAgIH0sXG4gICAgcGFzc3dvcmQgOiB7XG4gICAgICAgIHR5cGUgOiBTZXF1ZWxpemUuU1RSSU5HLFxuICAgICAgICBhbGxvd051bGwgOiBmYWxzZSxcbiAgICB9LFxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gVXNlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "sequelize",
        "User",
        "define",
        "id",
        "type",
        "INTEGER",
        "autoIncrement",
        "allowNull",
        "primaryKey",
        "name",
        "STRING",
        "email",
        "password",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,MAAMC,SAAS,GAAGD,OAAO,CAAC,mBAAD,CAAzB;;AAEA,MAAME,IAAI,GAAGD,SAAS,CAACE,MAAV,CAAiB,MAAjB,EAAyB;AAClCC,EAAAA,EAAE,EAAG;AACDC,IAAAA,IAAI,EAAGN,SAAS,CAACO,OADhB;AAEDC,IAAAA,aAAa,EAAG,IAFf;AAGDC,IAAAA,SAAS,EAAG,KAHX;AAIDC,IAAAA,UAAU,EAAG;AAJZ,GAD6B;AAOlCC,EAAAA,IAAI,EAAG;AACHL,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADd;AAEHH,IAAAA,SAAS,EAAG;AAFT,GAP2B;AAWlCI,EAAAA,KAAK,EAAG;AACJP,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADb;AAEJH,IAAAA,SAAS,EAAG;AAFR,GAX0B;AAelCK,EAAAA,QAAQ,EAAG;AACPR,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADV;AAEPH,IAAAA,SAAS,EAAG;AAFL;AAfuB,CAAzB,CAAb;AAqBAM,MAAM,CAACC,OAAP,GAAiBb,IAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/models",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst User = sequelize.define('user', {\n    id : {\n        type : Sequelize.INTEGER,\n        autoIncrement : true,\n        allowNull : false,\n        primaryKey : true\n    },\n    name : {\n        type : Sequelize.STRING,\n        allowNull : false,\n    },\n    email : {\n        type : Sequelize.STRING,\n        allowNull : false,\n    },\n    password : {\n        type : Sequelize.STRING,\n        allowNull : false,\n    },\n});\n\nmodule.exports = User;"
      ]
    },
    "sourceType": "module",
    "mtime": 1576144613912
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/utils\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/utils/database.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"plugins\":[],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/utils",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/utils/database.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/firstAPI/utils/database.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/utils/database.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/utils",
        "sourceFileName": "database.js"
      }
    },
    "ast": null,
    "code": "const Sequelize = require('sequelize');\n\nconst sequelize = new Sequelize(process.env.NODE_DATABASE, process.env.NODE_DATABASE_USER, process.env.NODE_DATABASE_PW, {\n  dialect: 'mysql',\n  host: process.env.NODE_DATABASE_URL\n});\nmodule.exports = sequelize;\n/*const mysql = require('mysql2');\n\nconst pool = mysql.createPool({\n    host : 'localhost',\n    database : 'corso_nodejs',\n    user : 'root',\n    password : 'rootroot'\n});\n\nmodule.exports = pool.promise();\n*/\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGFiYXNlLmpzIl0sIm5hbWVzIjpbIlNlcXVlbGl6ZSIsInJlcXVpcmUiLCJzZXF1ZWxpemUiLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9EQVRBQkFTRSIsIk5PREVfREFUQUJBU0VfVVNFUiIsIk5PREVfREFUQUJBU0VfUFciLCJkaWFsZWN0IiwiaG9zdCIsIk5PREVfREFUQUJBU0VfVVJMIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsU0FBUyxHQUFHQyxPQUFPLENBQUMsV0FBRCxDQUF6Qjs7QUFFQSxNQUFNQyxTQUFTLEdBQUcsSUFBSUYsU0FBSixDQUFjRyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsYUFBMUIsRUFDZEYsT0FBTyxDQUFDQyxHQUFSLENBQVlFLGtCQURFLEVBRWRILE9BQU8sQ0FBQ0MsR0FBUixDQUFZRyxnQkFGRSxFQUdsQjtBQUNJQyxFQUFBQSxPQUFPLEVBQUcsT0FEZDtBQUVJQyxFQUFBQSxJQUFJLEVBQUdOLE9BQU8sQ0FBQ0MsR0FBUixDQUFZTTtBQUZ2QixDQUhrQixDQUFsQjtBQVNBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJWLFNBQWpCO0FBRUEiLCJzb3VyY2VSb290IjoiL1VzZXJzL0FsZXNzYW5kcm9fTXVzb2xpbm8vRGVza3RvcC9maXJzdEFQSS91dGlscyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFNlcXVlbGl6ZSA9IHJlcXVpcmUoJ3NlcXVlbGl6ZScpO1xuXG5jb25zdCBzZXF1ZWxpemUgPSBuZXcgU2VxdWVsaXplKHByb2Nlc3MuZW52Lk5PREVfREFUQUJBU0UsIFxuICAgIHByb2Nlc3MuZW52Lk5PREVfREFUQUJBU0VfVVNFUiwgXG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9EQVRBQkFTRV9QVywgXG57XG4gICAgZGlhbGVjdCA6ICdteXNxbCcsXG4gICAgaG9zdCA6IHByb2Nlc3MuZW52Lk5PREVfREFUQUJBU0VfVVJMXG59XG4pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHNlcXVlbGl6ZTtcblxuLypjb25zdCBteXNxbCA9IHJlcXVpcmUoJ215c3FsMicpO1xuXG5jb25zdCBwb29sID0gbXlzcWwuY3JlYXRlUG9vbCh7XG4gICAgaG9zdCA6ICdsb2NhbGhvc3QnLFxuICAgIGRhdGFiYXNlIDogJ2NvcnNvX25vZGVqcycsXG4gICAgdXNlciA6ICdyb290JyxcbiAgICBwYXNzd29yZCA6ICdyb290cm9vdCdcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHBvb2wucHJvbWlzZSgpO1xuKi8iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "database.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "sequelize",
        "process",
        "env",
        "NODE_DATABASE",
        "NODE_DATABASE_USER",
        "NODE_DATABASE_PW",
        "dialect",
        "host",
        "NODE_DATABASE_URL",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,MAAMC,SAAS,GAAG,IAAIF,SAAJ,CAAcG,OAAO,CAACC,GAAR,CAAYC,aAA1B,EACdF,OAAO,CAACC,GAAR,CAAYE,kBADE,EAEdH,OAAO,CAACC,GAAR,CAAYG,gBAFE,EAGlB;AACIC,EAAAA,OAAO,EAAG,OADd;AAEIC,EAAAA,IAAI,EAAGN,OAAO,CAACC,GAAR,CAAYM;AAFvB,CAHkB,CAAlB;AASAC,MAAM,CAACC,OAAP,GAAiBV,SAAjB;AAEA",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/utils",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\n\nconst sequelize = new Sequelize(process.env.NODE_DATABASE, \n    process.env.NODE_DATABASE_USER, \n    process.env.NODE_DATABASE_PW, \n{\n    dialect : 'mysql',\n    host : process.env.NODE_DATABASE_URL\n}\n);\n\nmodule.exports = sequelize;\n\n/*const mysql = require('mysql2');\n\nconst pool = mysql.createPool({\n    host : 'localhost',\n    database : 'corso_nodejs',\n    user : 'root',\n    password : 'rootroot'\n});\n\nmodule.exports = pool.promise();\n*/"
      ]
    },
    "sourceType": "module",
    "mtime": 1576583378401
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/controllers/feed.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"plugins\":[],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers/feed.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers/feed.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers/feed.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers",
        "sourceFileName": "feed.js"
      }
    },
    "ast": null,
    "code": "const {\n  validationResult\n} = require('express-validator/check');\n\nconst Sequelize = require('sequelize');\n\nconst Op = Sequelize.Op;\n\nconst path = require('path');\n\nconst fs = require('fs');\n\nconst Post = require('../models/post');\n\nconst User = require('../models/user');\n\nconst Like = require('../models/like');\n\nexports.getPosts = (req, res, next) => {\n  Post.findAll({\n    include: [{\n      model: User,\n      attributes: ['id', 'name', 'updatedAt']\n    }]\n  }).then(posts => {\n    var promises = [];\n    posts.forEach(p => {\n      const postWithLikes = Like.count({\n        where: {\n          postId: p.id\n        }\n      }).then(likes => {\n        p.dataValues.likes = likes;\n        return p;\n      });\n      promises.push(postWithLikes);\n    });\n    return Promise.all(promises);\n  }).then(posts => {\n    console.log(posts);\n    res.json({\n      posts: posts\n    });\n  }).catch(err => console.log(err));\n};\n\nexports.getPostsByMe = (req, res, next) => {\n  //Post.findAll().then((posts) => {\n  req.user.getPosts().then(posts => {\n    console.log(posts);\n    res.json({\n      posts: posts\n    });\n  }).catch(err => console.log(err));\n};\n\nexports.getPost = (req, res, next) => {\n  const postId = req.params.id;\n  Post.findByPk(postId).then(post => {\n    if (!post) {\n      res.status(404).json({\n        messages: 'Post Not Found'\n      });\n    }\n\n    res.json({\n      post: post\n    });\n  }).catch(err => console.log(err));\n};\n\nexports.likePost = (req, res, next) => {\n  const postId = req.params.id;\n  Post.findByPk(postId).then(post => {\n    if (!post) {\n      res.status(404).json({\n        messages: 'Post Not Found'\n      });\n    }\n\n    post.getUsers({\n      where: {\n        id: req.user.id\n      }\n    }).then(records => {\n      const record = records[0];\n\n      if (!record) {\n        post.addUser(req.user);\n        res.json({\n          post: 'Like'\n        });\n      } else {\n        post.removeUser(req.user);\n        res.json({\n          post: 'No Like'\n        });\n      }\n    });\n  }).catch(err => console.log(err));\n};\n\nexports.searchPost = (req, res, next) => {\n  const title = '%' + req.query.title + '%';\n  Post.findAll({\n    where: {\n      title: {\n        [Op.like]: title\n      }\n    }\n  }).then(posts => {\n    console.log(posts);\n    res.json({\n      posts: posts\n    });\n  }).catch(err => console.log(err));\n};\n\nexports.createPost = (req, res, next) => {\n  const errors = validationResult(req);\n\n  if (!errors.isEmpty()) {\n    return res.status(422).json({\n      message: 'Errore input parametri',\n      error: errors.array()\n    });\n  }\n\n  if (!req.file) {\n    return res.status(422).json({\n      message: req.fileValidationError ? req.fileValidationError : 'Nessun immagine allegata'\n    });\n  }\n\n  const image = req.file.path;\n  const title = req.body.title;\n  const description = req.body.description; //INSERT NEL DATABASE  \n\n  req.user.createPost({\n    title: title,\n    description: description,\n    image: image\n  }).then(post => {\n    res.status(201).json({\n      messages: 'Success Operation',\n      post: post\n    });\n  }).catch(err => {\n    return res.status(422).json({\n      message: 'Error nel Salvataggio'\n    });\n  });\n};\n\nexports.editPost = (req, res, next) => {\n  const postId = req.params.id;\n  const errors = validationResult(req);\n\n  if (!errors.isEmpty()) {\n    console.log(\"sei nella merda\");\n    return res.status(422).json({\n      message: 'Error input Parametri',\n      error: errors.array()\n    });\n  }\n\n  const title = req.body.title;\n  const description = req.body.description;\n  req.user.getPosts({\n    where: {\n      id: postId\n    }\n  }).then(posts => {\n    const post = posts[0];\n\n    if (!post) {\n      res.status(404).json({\n        messages: 'Post Not Found or Not Your Post'\n      });\n    }\n\n    post.title = title;\n    post.description = description;\n\n    if (req.file) {\n      deleteImage(post.image);\n      const image = req.file.path;\n      post.image = image;\n    }\n\n    return post.save();\n  }).then(post => {\n    res.json({\n      post: post\n    });\n  }).catch(err => console.log(err));\n};\n\nexports.deletePost = (req, res, next) => {\n  const postId = req.params.id;\n  Post.findByPk(postId).then(post => {\n    if (!post) {\n      res.status(404).json({\n        messages: 'Post Not Found'\n      });\n    }\n\n    if (post.userId != req.user.id) {\n      res.status(404).json({\n        messages: 'Operazione non permessa'\n      });\n    }\n\n    deleteImage(post.image);\n    return post.destroy();\n  }).then(() => {\n    res.status(201).json({\n      messages: 'Success Operation'\n    });\n  }).catch(err => console.log(err));\n};\n\nconst deleteImage = filePath => {\n  filePath = path.join(__dirname, '..', filePath);\n  fs.unlink(filePath, err => console.log(err));\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZlZWQuanMiXSwibmFtZXMiOlsidmFsaWRhdGlvblJlc3VsdCIsInJlcXVpcmUiLCJTZXF1ZWxpemUiLCJPcCIsInBhdGgiLCJmcyIsIlBvc3QiLCJVc2VyIiwiTGlrZSIsImV4cG9ydHMiLCJnZXRQb3N0cyIsInJlcSIsInJlcyIsIm5leHQiLCJmaW5kQWxsIiwiaW5jbHVkZSIsIm1vZGVsIiwiYXR0cmlidXRlcyIsInRoZW4iLCJwb3N0cyIsInByb21pc2VzIiwiZm9yRWFjaCIsInAiLCJwb3N0V2l0aExpa2VzIiwiY291bnQiLCJ3aGVyZSIsInBvc3RJZCIsImlkIiwibGlrZXMiLCJkYXRhVmFsdWVzIiwicHVzaCIsIlByb21pc2UiLCJhbGwiLCJjb25zb2xlIiwibG9nIiwianNvbiIsImNhdGNoIiwiZXJyIiwiZ2V0UG9zdHNCeU1lIiwidXNlciIsImdldFBvc3QiLCJwYXJhbXMiLCJmaW5kQnlQayIsInBvc3QiLCJzdGF0dXMiLCJtZXNzYWdlcyIsImxpa2VQb3N0IiwiZ2V0VXNlcnMiLCJyZWNvcmRzIiwicmVjb3JkIiwiYWRkVXNlciIsInJlbW92ZVVzZXIiLCJzZWFyY2hQb3N0IiwidGl0bGUiLCJxdWVyeSIsImxpa2UiLCJjcmVhdGVQb3N0IiwiZXJyb3JzIiwiaXNFbXB0eSIsIm1lc3NhZ2UiLCJlcnJvciIsImFycmF5IiwiZmlsZSIsImZpbGVWYWxpZGF0aW9uRXJyb3IiLCJpbWFnZSIsImJvZHkiLCJkZXNjcmlwdGlvbiIsImVkaXRQb3N0IiwiZGVsZXRlSW1hZ2UiLCJzYXZlIiwiZGVsZXRlUG9zdCIsInVzZXJJZCIsImRlc3Ryb3kiLCJmaWxlUGF0aCIsImpvaW4iLCJfX2Rpcm5hbWUiLCJ1bmxpbmsiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU07QUFBRUEsRUFBQUE7QUFBRixJQUF1QkMsT0FBTyxDQUFDLHlCQUFELENBQXBDOztBQUNBLE1BQU1DLFNBQVMsR0FBR0QsT0FBTyxDQUFDLFdBQUQsQ0FBekI7O0FBQ0EsTUFBTUUsRUFBRSxHQUFHRCxTQUFTLENBQUNDLEVBQXJCOztBQUNBLE1BQU1DLElBQUksR0FBR0gsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsTUFBTUksRUFBRSxHQUFHSixPQUFPLENBQUMsSUFBRCxDQUFsQjs7QUFFQSxNQUFNSyxJQUFJLEdBQUdMLE9BQU8sQ0FBQyxnQkFBRCxDQUFwQjs7QUFDQSxNQUFNTSxJQUFJLEdBQUdOLE9BQU8sQ0FBQyxnQkFBRCxDQUFwQjs7QUFDQSxNQUFNTyxJQUFJLEdBQUdQLE9BQU8sQ0FBQyxnQkFBRCxDQUFwQjs7QUFFQVEsT0FBTyxDQUFDQyxRQUFSLEdBQW1CLENBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEtBQW9CO0FBQ25DUCxFQUFBQSxJQUFJLENBQUNRLE9BQUwsQ0FBYTtBQUFDQyxJQUFBQSxPQUFPLEVBQUcsQ0FBQztBQUFDQyxNQUFBQSxLQUFLLEVBQUdULElBQVQ7QUFBZVUsTUFBQUEsVUFBVSxFQUFHLENBQUMsSUFBRCxFQUFPLE1BQVAsRUFBZSxXQUFmO0FBQTVCLEtBQUQ7QUFBWCxHQUFiLEVBQ0NDLElBREQsQ0FDTUMsS0FBSyxJQUFJO0FBQ1gsUUFBSUMsUUFBUSxHQUFHLEVBQWY7QUFDQUQsSUFBQUEsS0FBSyxDQUFDRSxPQUFOLENBQWNDLENBQUMsSUFBSTtBQUNmLFlBQU1DLGFBQWEsR0FBR2YsSUFBSSxDQUFDZ0IsS0FBTCxDQUFXO0FBQUNDLFFBQUFBLEtBQUssRUFBRztBQUFDQyxVQUFBQSxNQUFNLEVBQUdKLENBQUMsQ0FBQ0s7QUFBWjtBQUFULE9BQVgsRUFBc0NULElBQXRDLENBQ3RCVSxLQUFLLElBQUk7QUFDTE4sUUFBQUEsQ0FBQyxDQUFDTyxVQUFGLENBQWFELEtBQWIsR0FBcUJBLEtBQXJCO0FBQ0EsZUFBT04sQ0FBUDtBQUNBLE9BSmtCLENBQXRCO0FBTUFGLE1BQUFBLFFBQVEsQ0FBQ1UsSUFBVCxDQUFjUCxhQUFkO0FBQ0gsS0FSRDtBQVNBLFdBQU9RLE9BQU8sQ0FBQ0MsR0FBUixDQUFZWixRQUFaLENBQVA7QUFDSCxHQWJELEVBYUdGLElBYkgsQ0FhU0MsS0FBRCxJQUFXO0FBQ2ZjLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZZixLQUFaO0FBQ0FQLElBQUFBLEdBQUcsQ0FBQ3VCLElBQUosQ0FBUztBQUFDaEIsTUFBQUEsS0FBSyxFQUFHQTtBQUFULEtBQVQ7QUFDSCxHQWhCRCxFQWdCR2lCLEtBaEJILENBaUJJQyxHQUFHLElBQUlKLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRyxHQUFaLENBakJYO0FBbUJILENBcEJEOztBQXNCQTVCLE9BQU8sQ0FBQzZCLFlBQVIsR0FBdUIsQ0FBQzNCLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEtBQW9CO0FBQ3ZDO0FBQ0FGLEVBQUFBLEdBQUcsQ0FBQzRCLElBQUosQ0FBUzdCLFFBQVQsR0FBb0JRLElBQXBCLENBQTBCQyxLQUFELElBQVc7QUFDaENjLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZZixLQUFaO0FBQ0FQLElBQUFBLEdBQUcsQ0FBQ3VCLElBQUosQ0FBUztBQUFDaEIsTUFBQUEsS0FBSyxFQUFHQTtBQUFULEtBQVQ7QUFDSCxHQUhELEVBR0dpQixLQUhILENBSUlDLEdBQUcsSUFBSUosT0FBTyxDQUFDQyxHQUFSLENBQVlHLEdBQVosQ0FKWDtBQU1ILENBUkQ7O0FBVUE1QixPQUFPLENBQUMrQixPQUFSLEdBQWtCLENBQUM3QixHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUNsQyxRQUFNYSxNQUFNLEdBQUdmLEdBQUcsQ0FBQzhCLE1BQUosQ0FBV2QsRUFBMUI7QUFDQXJCLEVBQUFBLElBQUksQ0FBQ29DLFFBQUwsQ0FBY2hCLE1BQWQsRUFDQ1IsSUFERCxDQUNPeUIsSUFBRCxJQUFVO0FBQ1osUUFBRyxDQUFDQSxJQUFKLEVBQVU7QUFDTi9CLE1BQUFBLEdBQUcsQ0FBQ2dDLE1BQUosQ0FBVyxHQUFYLEVBQWdCVCxJQUFoQixDQUFxQjtBQUNqQlUsUUFBQUEsUUFBUSxFQUFHO0FBRE0sT0FBckI7QUFHSDs7QUFDRGpDLElBQUFBLEdBQUcsQ0FBQ3VCLElBQUosQ0FBUztBQUFDUSxNQUFBQSxJQUFJLEVBQUdBO0FBQVIsS0FBVDtBQUNILEdBUkQsRUFRR1AsS0FSSCxDQVNJQyxHQUFHLElBQUlKLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRyxHQUFaLENBVFg7QUFXSCxDQWJEOztBQWVBNUIsT0FBTyxDQUFDcUMsUUFBUixHQUFtQixDQUFDbkMsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsS0FBb0I7QUFDbkMsUUFBTWEsTUFBTSxHQUFHZixHQUFHLENBQUM4QixNQUFKLENBQVdkLEVBQTFCO0FBQ0FyQixFQUFBQSxJQUFJLENBQUNvQyxRQUFMLENBQWNoQixNQUFkLEVBQ0NSLElBREQsQ0FDT3lCLElBQUQsSUFBVTtBQUNaLFFBQUcsQ0FBQ0EsSUFBSixFQUFVO0FBQ04vQixNQUFBQSxHQUFHLENBQUNnQyxNQUFKLENBQVcsR0FBWCxFQUFnQlQsSUFBaEIsQ0FBcUI7QUFDakJVLFFBQUFBLFFBQVEsRUFBRztBQURNLE9BQXJCO0FBR0g7O0FBQ0RGLElBQUFBLElBQUksQ0FBQ0ksUUFBTCxDQUFjO0FBQUN0QixNQUFBQSxLQUFLLEVBQUc7QUFBQ0UsUUFBQUEsRUFBRSxFQUFHaEIsR0FBRyxDQUFDNEIsSUFBSixDQUFTWjtBQUFmO0FBQVQsS0FBZCxFQUE0Q1QsSUFBNUMsQ0FBaUQ4QixPQUFPLElBQUk7QUFDeEQsWUFBTUMsTUFBTSxHQUFHRCxPQUFPLENBQUMsQ0FBRCxDQUF0Qjs7QUFDQSxVQUFHLENBQUNDLE1BQUosRUFBWTtBQUNSTixRQUFBQSxJQUFJLENBQUNPLE9BQUwsQ0FBYXZDLEdBQUcsQ0FBQzRCLElBQWpCO0FBQ0EzQixRQUFBQSxHQUFHLENBQUN1QixJQUFKLENBQVM7QUFBQ1EsVUFBQUEsSUFBSSxFQUFHO0FBQVIsU0FBVDtBQUNILE9BSEQsTUFHTztBQUNIQSxRQUFBQSxJQUFJLENBQUNRLFVBQUwsQ0FBZ0J4QyxHQUFHLENBQUM0QixJQUFwQjtBQUNBM0IsUUFBQUEsR0FBRyxDQUFDdUIsSUFBSixDQUFTO0FBQUNRLFVBQUFBLElBQUksRUFBRztBQUFSLFNBQVQ7QUFDSDtBQUNKLEtBVEQ7QUFVSCxHQWpCRCxFQWlCR1AsS0FqQkgsQ0FrQklDLEdBQUcsSUFBSUosT0FBTyxDQUFDQyxHQUFSLENBQVlHLEdBQVosQ0FsQlg7QUFvQkgsQ0F0QkQ7O0FBd0JBNUIsT0FBTyxDQUFDMkMsVUFBUixHQUFxQixDQUFDekMsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsS0FBb0I7QUFDckMsUUFBTXdDLEtBQUssR0FBRyxNQUFNMUMsR0FBRyxDQUFDMkMsS0FBSixDQUFVRCxLQUFoQixHQUF3QixHQUF0QztBQUNBL0MsRUFBQUEsSUFBSSxDQUFDUSxPQUFMLENBQWE7QUFBQ1csSUFBQUEsS0FBSyxFQUFHO0FBQUM0QixNQUFBQSxLQUFLLEVBQUc7QUFBQyxTQUFDbEQsRUFBRSxDQUFDb0QsSUFBSixHQUFZRjtBQUFiO0FBQVQ7QUFBVCxHQUFiLEVBQ0NuQyxJQURELENBQ09DLEtBQUQsSUFBVztBQUNiYyxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWWYsS0FBWjtBQUNBUCxJQUFBQSxHQUFHLENBQUN1QixJQUFKLENBQVM7QUFBQ2hCLE1BQUFBLEtBQUssRUFBR0E7QUFBVCxLQUFUO0FBQ0gsR0FKRCxFQUlHaUIsS0FKSCxDQUtJQyxHQUFHLElBQUlKLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRyxHQUFaLENBTFg7QUFPSCxDQVREOztBQVdBNUIsT0FBTyxDQUFDK0MsVUFBUixHQUFxQixDQUFDN0MsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsS0FBb0I7QUFDckMsUUFBTTRDLE1BQU0sR0FBR3pELGdCQUFnQixDQUFDVyxHQUFELENBQS9COztBQUVBLE1BQUcsQ0FBQzhDLE1BQU0sQ0FBQ0MsT0FBUCxFQUFKLEVBQXNCO0FBQ2xCLFdBQU85QyxHQUFHLENBQUNnQyxNQUFKLENBQVcsR0FBWCxFQUFnQlQsSUFBaEIsQ0FBcUI7QUFDeEJ3QixNQUFBQSxPQUFPLEVBQUcsd0JBRGM7QUFFeEJDLE1BQUFBLEtBQUssRUFBR0gsTUFBTSxDQUFDSSxLQUFQO0FBRmdCLEtBQXJCLENBQVA7QUFJSDs7QUFFRCxNQUFHLENBQUNsRCxHQUFHLENBQUNtRCxJQUFSLEVBQWM7QUFDVixXQUFPbEQsR0FBRyxDQUFDZ0MsTUFBSixDQUFXLEdBQVgsRUFBZ0JULElBQWhCLENBQXFCO0FBQ3hCd0IsTUFBQUEsT0FBTyxFQUFHaEQsR0FBRyxDQUFDb0QsbUJBQUosR0FBMEJwRCxHQUFHLENBQUNvRCxtQkFBOUIsR0FBb0Q7QUFEdEMsS0FBckIsQ0FBUDtBQUdIOztBQUVELFFBQU1DLEtBQUssR0FBR3JELEdBQUcsQ0FBQ21ELElBQUosQ0FBUzFELElBQXZCO0FBQ0EsUUFBTWlELEtBQUssR0FBRzFDLEdBQUcsQ0FBQ3NELElBQUosQ0FBU1osS0FBdkI7QUFDQSxRQUFNYSxXQUFXLEdBQUd2RCxHQUFHLENBQUNzRCxJQUFKLENBQVNDLFdBQTdCLENBbEJxQyxDQW1CckM7O0FBQ0F2RCxFQUFBQSxHQUFHLENBQUM0QixJQUFKLENBQVNpQixVQUFULENBQW9CO0FBQ2hCSCxJQUFBQSxLQUFLLEVBQUdBLEtBRFE7QUFFaEJhLElBQUFBLFdBQVcsRUFBR0EsV0FGRTtBQUdoQkYsSUFBQUEsS0FBSyxFQUFHQTtBQUhRLEdBQXBCLEVBSUc5QyxJQUpILENBSVN5QixJQUFELElBQVU7QUFDZC9CLElBQUFBLEdBQUcsQ0FBQ2dDLE1BQUosQ0FBVyxHQUFYLEVBQWdCVCxJQUFoQixDQUFxQjtBQUNqQlUsTUFBQUEsUUFBUSxFQUFHLG1CQURNO0FBRWpCRixNQUFBQSxJQUFJLEVBQUdBO0FBRlUsS0FBckI7QUFJSCxHQVRELEVBU0dQLEtBVEgsQ0FTVUMsR0FBRyxJQUFJO0FBQ2QsV0FBT3pCLEdBQUcsQ0FBQ2dDLE1BQUosQ0FBVyxHQUFYLEVBQWdCVCxJQUFoQixDQUFxQjtBQUN4QndCLE1BQUFBLE9BQU8sRUFBRztBQURjLEtBQXJCLENBQVA7QUFHRixHQWJEO0FBY0gsQ0FsQ0Q7O0FBb0NBbEQsT0FBTyxDQUFDMEQsUUFBUixHQUFtQixDQUFDeEQsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsS0FBb0I7QUFDbkMsUUFBTWEsTUFBTSxHQUFHZixHQUFHLENBQUM4QixNQUFKLENBQVdkLEVBQTFCO0FBQ0EsUUFBTThCLE1BQU0sR0FBR3pELGdCQUFnQixDQUFDVyxHQUFELENBQS9COztBQUVHLE1BQUcsQ0FBQzhDLE1BQU0sQ0FBQ0MsT0FBUCxFQUFKLEVBQXFCO0FBQ2pCekIsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksaUJBQVo7QUFDQSxXQUFPdEIsR0FBRyxDQUFDZ0MsTUFBSixDQUFXLEdBQVgsRUFBZ0JULElBQWhCLENBQXFCO0FBQ3hCd0IsTUFBQUEsT0FBTyxFQUFHLHVCQURjO0FBRXhCQyxNQUFBQSxLQUFLLEVBQUdILE1BQU0sQ0FBQ0ksS0FBUDtBQUZnQixLQUFyQixDQUFQO0FBSUg7O0FBRUQsUUFBTVIsS0FBSyxHQUFHMUMsR0FBRyxDQUFDc0QsSUFBSixDQUFTWixLQUF2QjtBQUNBLFFBQU1hLFdBQVcsR0FBR3ZELEdBQUcsQ0FBQ3NELElBQUosQ0FBU0MsV0FBN0I7QUFFQXZELEVBQUFBLEdBQUcsQ0FBQzRCLElBQUosQ0FBUzdCLFFBQVQsQ0FBa0I7QUFBRWUsSUFBQUEsS0FBSyxFQUFHO0FBQUVFLE1BQUFBLEVBQUUsRUFBR0Q7QUFBUDtBQUFWLEdBQWxCLEVBQThDUixJQUE5QyxDQUFtREMsS0FBSyxJQUFJO0FBQ3hELFVBQU13QixJQUFJLEdBQUd4QixLQUFLLENBQUMsQ0FBRCxDQUFsQjs7QUFDQSxRQUFHLENBQUN3QixJQUFKLEVBQVM7QUFDTC9CLE1BQUFBLEdBQUcsQ0FBQ2dDLE1BQUosQ0FBVyxHQUFYLEVBQWdCVCxJQUFoQixDQUFxQjtBQUNqQlUsUUFBQUEsUUFBUSxFQUFHO0FBRE0sT0FBckI7QUFHSDs7QUFDREYsSUFBQUEsSUFBSSxDQUFDVSxLQUFMLEdBQWFBLEtBQWI7QUFDQVYsSUFBQUEsSUFBSSxDQUFDdUIsV0FBTCxHQUFtQkEsV0FBbkI7O0FBQ0EsUUFBR3ZELEdBQUcsQ0FBQ21ELElBQVAsRUFBWTtBQUNYTSxNQUFBQSxXQUFXLENBQUN6QixJQUFJLENBQUNxQixLQUFOLENBQVg7QUFDQSxZQUFNQSxLQUFLLEdBQUdyRCxHQUFHLENBQUNtRCxJQUFKLENBQVMxRCxJQUF2QjtBQUNBdUMsTUFBQUEsSUFBSSxDQUFDcUIsS0FBTCxHQUFhQSxLQUFiO0FBQ0E7O0FBQ0QsV0FBT3JCLElBQUksQ0FBQzBCLElBQUwsRUFBUDtBQUNILEdBZkQsRUFlR25ELElBZkgsQ0FlU3lCLElBQUQsSUFBVTtBQUNkL0IsSUFBQUEsR0FBRyxDQUFDdUIsSUFBSixDQUFTO0FBQUVRLE1BQUFBLElBQUksRUFBR0E7QUFBVCxLQUFUO0FBQ0gsR0FqQkQsRUFpQkdQLEtBakJILENBa0JJQyxHQUFHLElBQUlKLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRyxHQUFaLENBbEJYO0FBb0JOLENBbkNEOztBQXFDQTVCLE9BQU8sQ0FBQzZELFVBQVIsR0FBcUIsQ0FBQzNELEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEtBQW9CO0FBQ3JDLFFBQU1hLE1BQU0sR0FBR2YsR0FBRyxDQUFDOEIsTUFBSixDQUFXZCxFQUExQjtBQUVBckIsRUFBQUEsSUFBSSxDQUFDb0MsUUFBTCxDQUFjaEIsTUFBZCxFQUNDUixJQURELENBQ015QixJQUFJLElBQUk7QUFDZCxRQUFHLENBQUNBLElBQUosRUFBVTtBQUNOL0IsTUFBQUEsR0FBRyxDQUFDZ0MsTUFBSixDQUFXLEdBQVgsRUFBZ0JULElBQWhCLENBQXFCO0FBQ2pCVSxRQUFBQSxRQUFRLEVBQUc7QUFETSxPQUFyQjtBQUdIOztBQUNELFFBQUdGLElBQUksQ0FBQzRCLE1BQUwsSUFBZTVELEdBQUcsQ0FBQzRCLElBQUosQ0FBU1osRUFBM0IsRUFBK0I7QUFDM0JmLE1BQUFBLEdBQUcsQ0FBQ2dDLE1BQUosQ0FBVyxHQUFYLEVBQWdCVCxJQUFoQixDQUFxQjtBQUNqQlUsUUFBQUEsUUFBUSxFQUFHO0FBRE0sT0FBckI7QUFHSDs7QUFDRHVCLElBQUFBLFdBQVcsQ0FBQ3pCLElBQUksQ0FBQ3FCLEtBQU4sQ0FBWDtBQUNBLFdBQU9yQixJQUFJLENBQUM2QixPQUFMLEVBQVA7QUFDQyxHQWRELEVBY0d0RCxJQWRILENBY1EsTUFBTTtBQUNWTixJQUFBQSxHQUFHLENBQUNnQyxNQUFKLENBQVcsR0FBWCxFQUFnQlQsSUFBaEIsQ0FBcUI7QUFDakJVLE1BQUFBLFFBQVEsRUFBRztBQURNLEtBQXJCO0FBR0gsR0FsQkQsRUFrQkdULEtBbEJILENBbUJJQyxHQUFHLElBQUlKLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRyxHQUFaLENBbkJYO0FBcUJILENBeEJEOztBQTBCQSxNQUFNK0IsV0FBVyxHQUFHSyxRQUFRLElBQUk7QUFDNUJBLEVBQUFBLFFBQVEsR0FBR3JFLElBQUksQ0FBQ3NFLElBQUwsQ0FBVUMsU0FBVixFQUFxQixJQUFyQixFQUEyQkYsUUFBM0IsQ0FBWDtBQUNBcEUsRUFBQUEsRUFBRSxDQUFDdUUsTUFBSCxDQUFVSCxRQUFWLEVBQW9CcEMsR0FBRyxJQUFJSixPQUFPLENBQUNDLEdBQVIsQ0FBWUcsR0FBWixDQUEzQjtBQUNILENBSEQiLCJzb3VyY2VSb290IjoiL1VzZXJzL0FsZXNzYW5kcm9fTXVzb2xpbm8vRGVza3RvcC9maXJzdEFQSS9jb250cm9sbGVycyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgdmFsaWRhdGlvblJlc3VsdCB9ID0gcmVxdWlyZSgnZXhwcmVzcy12YWxpZGF0b3IvY2hlY2snKTtcbmNvbnN0IFNlcXVlbGl6ZSA9IHJlcXVpcmUoJ3NlcXVlbGl6ZScpO1xuY29uc3QgT3AgPSBTZXF1ZWxpemUuT3A7XG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuY29uc3QgZnMgPSByZXF1aXJlKCdmcycpO1xuXG5jb25zdCBQb3N0ID0gcmVxdWlyZSgnLi4vbW9kZWxzL3Bvc3QnKTtcbmNvbnN0IFVzZXIgPSByZXF1aXJlKCcuLi9tb2RlbHMvdXNlcicpO1xuY29uc3QgTGlrZSA9IHJlcXVpcmUoJy4uL21vZGVscy9saWtlJyk7XG5cbmV4cG9ydHMuZ2V0UG9zdHMgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBQb3N0LmZpbmRBbGwoe2luY2x1ZGUgOiBbe21vZGVsIDogVXNlciwgYXR0cmlidXRlcyA6IFsnaWQnLCAnbmFtZScsICd1cGRhdGVkQXQnXX1dfSlcbiAgICAudGhlbihwb3N0cyA9PiB7XG4gICAgICAgIHZhciBwcm9taXNlcyA9IFtdO1xuICAgICAgICBwb3N0cy5mb3JFYWNoKHAgPT4ge1xuICAgICAgICAgICAgY29uc3QgcG9zdFdpdGhMaWtlcyA9IExpa2UuY291bnQoe3doZXJlIDoge3Bvc3RJZCA6IHAuaWR9fSkudGhlbihcbiAgICAgICAgICAgIGxpa2VzID0+IHtcbiAgICAgICAgICAgICAgICBwLmRhdGFWYWx1ZXMubGlrZXMgPSBsaWtlcztcbiAgICAgICAgICAgICAgICByZXR1cm4gcDtcbiAgICAgICAgICAgICAgIH0gXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgcHJvbWlzZXMucHVzaChwb3N0V2l0aExpa2VzKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBQcm9taXNlLmFsbChwcm9taXNlcyk7XG4gICAgfSkudGhlbigocG9zdHMpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2cocG9zdHMpO1xuICAgICAgICByZXMuanNvbih7cG9zdHMgOiBwb3N0c30pO1xuICAgIH0pLmNhdGNoKFxuICAgICAgICBlcnIgPT4gY29uc29sZS5sb2coZXJyKVxuICAgICk7XG59O1xuXG5leHBvcnRzLmdldFBvc3RzQnlNZSA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIC8vUG9zdC5maW5kQWxsKCkudGhlbigocG9zdHMpID0+IHtcbiAgICByZXEudXNlci5nZXRQb3N0cygpLnRoZW4oKHBvc3RzKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKHBvc3RzKTtcbiAgICAgICAgcmVzLmpzb24oe3Bvc3RzIDogcG9zdHN9KTtcbiAgICB9KS5jYXRjaChcbiAgICAgICAgZXJyID0+IGNvbnNvbGUubG9nKGVycilcbiAgICApO1xufTtcblxuZXhwb3J0cy5nZXRQb3N0ID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgY29uc3QgcG9zdElkID0gcmVxLnBhcmFtcy5pZDtcbiAgICBQb3N0LmZpbmRCeVBrKHBvc3RJZClcbiAgICAudGhlbigocG9zdCkgPT4ge1xuICAgICAgICBpZighcG9zdCkge1xuICAgICAgICAgICAgcmVzLnN0YXR1cyg0MDQpLmpzb24oe1xuICAgICAgICAgICAgICAgIG1lc3NhZ2VzIDogJ1Bvc3QgTm90IEZvdW5kJyxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHJlcy5qc29uKHtwb3N0IDogcG9zdH0pO1xuICAgIH0pLmNhdGNoKFxuICAgICAgICBlcnIgPT4gY29uc29sZS5sb2coZXJyKVxuICAgICk7XG59O1xuXG5leHBvcnRzLmxpa2VQb3N0ID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgY29uc3QgcG9zdElkID0gcmVxLnBhcmFtcy5pZDtcbiAgICBQb3N0LmZpbmRCeVBrKHBvc3RJZClcbiAgICAudGhlbigocG9zdCkgPT4ge1xuICAgICAgICBpZighcG9zdCkge1xuICAgICAgICAgICAgcmVzLnN0YXR1cyg0MDQpLmpzb24oe1xuICAgICAgICAgICAgICAgIG1lc3NhZ2VzIDogJ1Bvc3QgTm90IEZvdW5kJyxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHBvc3QuZ2V0VXNlcnMoe3doZXJlIDoge2lkIDogcmVxLnVzZXIuaWR9fSkudGhlbihyZWNvcmRzID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHJlY29yZCA9IHJlY29yZHNbMF07XG4gICAgICAgICAgICBpZighcmVjb3JkKSB7XG4gICAgICAgICAgICAgICAgcG9zdC5hZGRVc2VyKHJlcS51c2VyKTtcbiAgICAgICAgICAgICAgICByZXMuanNvbih7cG9zdCA6ICdMaWtlJ30pXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHBvc3QucmVtb3ZlVXNlcihyZXEudXNlcik7XG4gICAgICAgICAgICAgICAgcmVzLmpzb24oe3Bvc3QgOiAnTm8gTGlrZSd9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfSkuY2F0Y2goXG4gICAgICAgIGVyciA9PiBjb25zb2xlLmxvZyhlcnIpXG4gICAgKTtcbn07XG5cbmV4cG9ydHMuc2VhcmNoUG9zdCA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIGNvbnN0IHRpdGxlID0gJyUnICsgcmVxLnF1ZXJ5LnRpdGxlICsgJyUnO1xuICAgIFBvc3QuZmluZEFsbCh7d2hlcmUgOiB7dGl0bGUgOiB7W09wLmxpa2VdIDogdGl0bGV9fX0pXG4gICAgLnRoZW4oKHBvc3RzKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKHBvc3RzKTtcbiAgICAgICAgcmVzLmpzb24oe3Bvc3RzIDogcG9zdHN9KTtcbiAgICB9KS5jYXRjaChcbiAgICAgICAgZXJyID0+IGNvbnNvbGUubG9nKGVycilcbiAgICApO1xufTtcblxuZXhwb3J0cy5jcmVhdGVQb3N0ID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgY29uc3QgZXJyb3JzID0gdmFsaWRhdGlvblJlc3VsdChyZXEpO1xuICAgIFxuICAgIGlmKCFlcnJvcnMuaXNFbXB0eSgpKSB7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQyMikuanNvbih7XG4gICAgICAgICAgICBtZXNzYWdlIDogJ0Vycm9yZSBpbnB1dCBwYXJhbWV0cmknLFxuICAgICAgICAgICAgZXJyb3IgOiBlcnJvcnMuYXJyYXkoKVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBpZighcmVxLmZpbGUpIHtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDIyKS5qc29uKHtcbiAgICAgICAgICAgIG1lc3NhZ2UgOiByZXEuZmlsZVZhbGlkYXRpb25FcnJvciA/IHJlcS5maWxlVmFsaWRhdGlvbkVycm9yIDogJ05lc3N1biBpbW1hZ2luZSBhbGxlZ2F0YScsXG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGNvbnN0IGltYWdlID0gcmVxLmZpbGUucGF0aDtcbiAgICBjb25zdCB0aXRsZSA9IHJlcS5ib2R5LnRpdGxlO1xuICAgIGNvbnN0IGRlc2NyaXB0aW9uID0gcmVxLmJvZHkuZGVzY3JpcHRpb247XG4gICAgLy9JTlNFUlQgTkVMIERBVEFCQVNFICBcbiAgICByZXEudXNlci5jcmVhdGVQb3N0KHtcbiAgICAgICAgdGl0bGUgOiB0aXRsZSxcbiAgICAgICAgZGVzY3JpcHRpb24gOiBkZXNjcmlwdGlvbixcbiAgICAgICAgaW1hZ2UgOiBpbWFnZVxuICAgIH0pLnRoZW4oKHBvc3QpID0+IHtcbiAgICAgICAgcmVzLnN0YXR1cygyMDEpLmpzb24oe1xuICAgICAgICAgICAgbWVzc2FnZXMgOiAnU3VjY2VzcyBPcGVyYXRpb24nLFxuICAgICAgICAgICAgcG9zdCA6IHBvc3RcbiAgICAgICAgfSk7XG4gICAgfSkuY2F0Y2goIGVyciA9PiB7XG4gICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDIyKS5qc29uKHtcbiAgICAgICAgICAgbWVzc2FnZSA6ICdFcnJvciBuZWwgU2FsdmF0YWdnaW8nXG4gICAgICAgfSlcbiAgICB9KTtcbn07XG5cbmV4cG9ydHMuZWRpdFBvc3QgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBjb25zdCBwb3N0SWQgPSByZXEucGFyYW1zLmlkO1xuICAgIGNvbnN0IGVycm9ycyA9IHZhbGlkYXRpb25SZXN1bHQocmVxKTtcblxuICAgICAgIGlmKCFlcnJvcnMuaXNFbXB0eSgpKXtcbiAgICAgICAgICAgY29uc29sZS5sb2coXCJzZWkgbmVsbGEgbWVyZGFcIik7XG4gICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQyMikuanNvbih7XG4gICAgICAgICAgICAgICBtZXNzYWdlIDogJ0Vycm9yIGlucHV0IFBhcmFtZXRyaScsXG4gICAgICAgICAgICAgICBlcnJvciA6IGVycm9ycy5hcnJheSgpXG4gICAgICAgICAgIH0pO1xuICAgICAgIH1cbiAgICAgICBcbiAgICAgICBjb25zdCB0aXRsZSA9IHJlcS5ib2R5LnRpdGxlO1xuICAgICAgIGNvbnN0IGRlc2NyaXB0aW9uID0gcmVxLmJvZHkuZGVzY3JpcHRpb247XG5cbiAgICAgICByZXEudXNlci5nZXRQb3N0cyh7IHdoZXJlIDogeyBpZCA6IHBvc3RJZCB9fSkudGhlbihwb3N0cyA9PiB7XG4gICAgICAgICAgIGNvbnN0IHBvc3QgPSBwb3N0c1swXTtcbiAgICAgICAgICAgaWYoIXBvc3Qpe1xuICAgICAgICAgICAgICAgcmVzLnN0YXR1cyg0MDQpLmpzb24oeyBcbiAgICAgICAgICAgICAgICAgICBtZXNzYWdlcyA6ICdQb3N0IE5vdCBGb3VuZCBvciBOb3QgWW91ciBQb3N0JyxcbiAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICB9XG4gICAgICAgICAgIHBvc3QudGl0bGUgPSB0aXRsZTtcbiAgICAgICAgICAgcG9zdC5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uO1xuICAgICAgICAgICBpZihyZXEuZmlsZSl7XG4gICAgICAgICAgICBkZWxldGVJbWFnZShwb3N0LmltYWdlKTsgXG4gICAgICAgICAgICBjb25zdCBpbWFnZSA9IHJlcS5maWxlLnBhdGg7XG4gICAgICAgICAgICBwb3N0LmltYWdlID0gaW1hZ2U7XG4gICAgICAgICAgIH1cbiAgICAgICAgICAgcmV0dXJuIHBvc3Quc2F2ZSgpO1xuICAgICAgIH0pLnRoZW4oKHBvc3QpID0+IHtcbiAgICAgICAgICAgcmVzLmpzb24oeyBwb3N0IDogcG9zdH0pXG4gICAgICAgfSkuY2F0Y2goXG4gICAgICAgICAgIGVyciA9PiBjb25zb2xlLmxvZyhlcnIpXG4gICAgICAgKTtcbn07XG5cbmV4cG9ydHMuZGVsZXRlUG9zdCA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIGNvbnN0IHBvc3RJZCA9IHJlcS5wYXJhbXMuaWQ7XG5cbiAgICBQb3N0LmZpbmRCeVBrKHBvc3RJZClcbiAgICAudGhlbihwb3N0ID0+IHtcbiAgICBpZighcG9zdCkge1xuICAgICAgICByZXMuc3RhdHVzKDQwNCkuanNvbih7XG4gICAgICAgICAgICBtZXNzYWdlcyA6ICdQb3N0IE5vdCBGb3VuZCcsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBpZihwb3N0LnVzZXJJZCAhPSByZXEudXNlci5pZCkge1xuICAgICAgICByZXMuc3RhdHVzKDQwNCkuanNvbih7XG4gICAgICAgICAgICBtZXNzYWdlcyA6ICdPcGVyYXppb25lIG5vbiBwZXJtZXNzYScsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBkZWxldGVJbWFnZShwb3N0LmltYWdlKTsgXG4gICAgcmV0dXJuIHBvc3QuZGVzdHJveSgpOyBcbiAgICB9KS50aGVuKCgpID0+IHtcbiAgICAgICAgcmVzLnN0YXR1cygyMDEpLmpzb24oe1xuICAgICAgICAgICAgbWVzc2FnZXMgOiAnU3VjY2VzcyBPcGVyYXRpb24nLFxuICAgICAgICB9KTtcbiAgICB9KS5jYXRjaChcbiAgICAgICAgZXJyID0+IGNvbnNvbGUubG9nKGVycilcbiAgICApO1xufTtcblxuY29uc3QgZGVsZXRlSW1hZ2UgPSBmaWxlUGF0aCA9PiB7XG4gICAgZmlsZVBhdGggPSBwYXRoLmpvaW4oX19kaXJuYW1lLCAnLi4nLCBmaWxlUGF0aCk7XG4gICAgZnMudW5saW5rKGZpbGVQYXRoLCBlcnIgPT4gY29uc29sZS5sb2coZXJyKSk7XG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "feed.js"
      ],
      "names": [
        "validationResult",
        "require",
        "Sequelize",
        "Op",
        "path",
        "fs",
        "Post",
        "User",
        "Like",
        "exports",
        "getPosts",
        "req",
        "res",
        "next",
        "findAll",
        "include",
        "model",
        "attributes",
        "then",
        "posts",
        "promises",
        "forEach",
        "p",
        "postWithLikes",
        "count",
        "where",
        "postId",
        "id",
        "likes",
        "dataValues",
        "push",
        "Promise",
        "all",
        "console",
        "log",
        "json",
        "catch",
        "err",
        "getPostsByMe",
        "user",
        "getPost",
        "params",
        "findByPk",
        "post",
        "status",
        "messages",
        "likePost",
        "getUsers",
        "records",
        "record",
        "addUser",
        "removeUser",
        "searchPost",
        "title",
        "query",
        "like",
        "createPost",
        "errors",
        "isEmpty",
        "message",
        "error",
        "array",
        "file",
        "fileValidationError",
        "image",
        "body",
        "description",
        "editPost",
        "deleteImage",
        "save",
        "deletePost",
        "userId",
        "destroy",
        "filePath",
        "join",
        "__dirname",
        "unlink"
      ],
      "mappings": "AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAuBC,OAAO,CAAC,yBAAD,CAApC;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,WAAD,CAAzB;;AACA,MAAME,EAAE,GAAGD,SAAS,CAACC,EAArB;;AACA,MAAMC,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMI,EAAE,GAAGJ,OAAO,CAAC,IAAD,CAAlB;;AAEA,MAAMK,IAAI,GAAGL,OAAO,CAAC,gBAAD,CAApB;;AACA,MAAMM,IAAI,GAAGN,OAAO,CAAC,gBAAD,CAApB;;AACA,MAAMO,IAAI,GAAGP,OAAO,CAAC,gBAAD,CAApB;;AAEAQ,OAAO,CAACC,QAAR,GAAmB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACnCP,EAAAA,IAAI,CAACQ,OAAL,CAAa;AAACC,IAAAA,OAAO,EAAG,CAAC;AAACC,MAAAA,KAAK,EAAGT,IAAT;AAAeU,MAAAA,UAAU,EAAG,CAAC,IAAD,EAAO,MAAP,EAAe,WAAf;AAA5B,KAAD;AAAX,GAAb,EACCC,IADD,CACMC,KAAK,IAAI;AACX,QAAIC,QAAQ,GAAG,EAAf;AACAD,IAAAA,KAAK,CAACE,OAAN,CAAcC,CAAC,IAAI;AACf,YAAMC,aAAa,GAAGf,IAAI,CAACgB,KAAL,CAAW;AAACC,QAAAA,KAAK,EAAG;AAACC,UAAAA,MAAM,EAAGJ,CAAC,CAACK;AAAZ;AAAT,OAAX,EAAsCT,IAAtC,CACtBU,KAAK,IAAI;AACLN,QAAAA,CAAC,CAACO,UAAF,CAAaD,KAAb,GAAqBA,KAArB;AACA,eAAON,CAAP;AACA,OAJkB,CAAtB;AAMAF,MAAAA,QAAQ,CAACU,IAAT,CAAcP,aAAd;AACH,KARD;AASA,WAAOQ,OAAO,CAACC,GAAR,CAAYZ,QAAZ,CAAP;AACH,GAbD,EAaGF,IAbH,CAaSC,KAAD,IAAW;AACfc,IAAAA,OAAO,CAACC,GAAR,CAAYf,KAAZ;AACAP,IAAAA,GAAG,CAACuB,IAAJ,CAAS;AAAChB,MAAAA,KAAK,EAAGA;AAAT,KAAT;AACH,GAhBD,EAgBGiB,KAhBH,CAiBIC,GAAG,IAAIJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CAjBX;AAmBH,CApBD;;AAsBA5B,OAAO,CAAC6B,YAAR,GAAuB,CAAC3B,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACvC;AACAF,EAAAA,GAAG,CAAC4B,IAAJ,CAAS7B,QAAT,GAAoBQ,IAApB,CAA0BC,KAAD,IAAW;AAChCc,IAAAA,OAAO,CAACC,GAAR,CAAYf,KAAZ;AACAP,IAAAA,GAAG,CAACuB,IAAJ,CAAS;AAAChB,MAAAA,KAAK,EAAGA;AAAT,KAAT;AACH,GAHD,EAGGiB,KAHH,CAIIC,GAAG,IAAIJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CAJX;AAMH,CARD;;AAUA5B,OAAO,CAAC+B,OAAR,GAAkB,CAAC7B,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAClC,QAAMa,MAAM,GAAGf,GAAG,CAAC8B,MAAJ,CAAWd,EAA1B;AACArB,EAAAA,IAAI,CAACoC,QAAL,CAAchB,MAAd,EACCR,IADD,CACOyB,IAAD,IAAU;AACZ,QAAG,CAACA,IAAJ,EAAU;AACN/B,MAAAA,GAAG,CAACgC,MAAJ,CAAW,GAAX,EAAgBT,IAAhB,CAAqB;AACjBU,QAAAA,QAAQ,EAAG;AADM,OAArB;AAGH;;AACDjC,IAAAA,GAAG,CAACuB,IAAJ,CAAS;AAACQ,MAAAA,IAAI,EAAGA;AAAR,KAAT;AACH,GARD,EAQGP,KARH,CASIC,GAAG,IAAIJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CATX;AAWH,CAbD;;AAeA5B,OAAO,CAACqC,QAAR,GAAmB,CAACnC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACnC,QAAMa,MAAM,GAAGf,GAAG,CAAC8B,MAAJ,CAAWd,EAA1B;AACArB,EAAAA,IAAI,CAACoC,QAAL,CAAchB,MAAd,EACCR,IADD,CACOyB,IAAD,IAAU;AACZ,QAAG,CAACA,IAAJ,EAAU;AACN/B,MAAAA,GAAG,CAACgC,MAAJ,CAAW,GAAX,EAAgBT,IAAhB,CAAqB;AACjBU,QAAAA,QAAQ,EAAG;AADM,OAArB;AAGH;;AACDF,IAAAA,IAAI,CAACI,QAAL,CAAc;AAACtB,MAAAA,KAAK,EAAG;AAACE,QAAAA,EAAE,EAAGhB,GAAG,CAAC4B,IAAJ,CAASZ;AAAf;AAAT,KAAd,EAA4CT,IAA5C,CAAiD8B,OAAO,IAAI;AACxD,YAAMC,MAAM,GAAGD,OAAO,CAAC,CAAD,CAAtB;;AACA,UAAG,CAACC,MAAJ,EAAY;AACRN,QAAAA,IAAI,CAACO,OAAL,CAAavC,GAAG,CAAC4B,IAAjB;AACA3B,QAAAA,GAAG,CAACuB,IAAJ,CAAS;AAACQ,UAAAA,IAAI,EAAG;AAAR,SAAT;AACH,OAHD,MAGO;AACHA,QAAAA,IAAI,CAACQ,UAAL,CAAgBxC,GAAG,CAAC4B,IAApB;AACA3B,QAAAA,GAAG,CAACuB,IAAJ,CAAS;AAACQ,UAAAA,IAAI,EAAG;AAAR,SAAT;AACH;AACJ,KATD;AAUH,GAjBD,EAiBGP,KAjBH,CAkBIC,GAAG,IAAIJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CAlBX;AAoBH,CAtBD;;AAwBA5B,OAAO,CAAC2C,UAAR,GAAqB,CAACzC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACrC,QAAMwC,KAAK,GAAG,MAAM1C,GAAG,CAAC2C,KAAJ,CAAUD,KAAhB,GAAwB,GAAtC;AACA/C,EAAAA,IAAI,CAACQ,OAAL,CAAa;AAACW,IAAAA,KAAK,EAAG;AAAC4B,MAAAA,KAAK,EAAG;AAAC,SAAClD,EAAE,CAACoD,IAAJ,GAAYF;AAAb;AAAT;AAAT,GAAb,EACCnC,IADD,CACOC,KAAD,IAAW;AACbc,IAAAA,OAAO,CAACC,GAAR,CAAYf,KAAZ;AACAP,IAAAA,GAAG,CAACuB,IAAJ,CAAS;AAAChB,MAAAA,KAAK,EAAGA;AAAT,KAAT;AACH,GAJD,EAIGiB,KAJH,CAKIC,GAAG,IAAIJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CALX;AAOH,CATD;;AAWA5B,OAAO,CAAC+C,UAAR,GAAqB,CAAC7C,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACrC,QAAM4C,MAAM,GAAGzD,gBAAgB,CAACW,GAAD,CAA/B;;AAEA,MAAG,CAAC8C,MAAM,CAACC,OAAP,EAAJ,EAAsB;AAClB,WAAO9C,GAAG,CAACgC,MAAJ,CAAW,GAAX,EAAgBT,IAAhB,CAAqB;AACxBwB,MAAAA,OAAO,EAAG,wBADc;AAExBC,MAAAA,KAAK,EAAGH,MAAM,CAACI,KAAP;AAFgB,KAArB,CAAP;AAIH;;AAED,MAAG,CAAClD,GAAG,CAACmD,IAAR,EAAc;AACV,WAAOlD,GAAG,CAACgC,MAAJ,CAAW,GAAX,EAAgBT,IAAhB,CAAqB;AACxBwB,MAAAA,OAAO,EAAGhD,GAAG,CAACoD,mBAAJ,GAA0BpD,GAAG,CAACoD,mBAA9B,GAAoD;AADtC,KAArB,CAAP;AAGH;;AAED,QAAMC,KAAK,GAAGrD,GAAG,CAACmD,IAAJ,CAAS1D,IAAvB;AACA,QAAMiD,KAAK,GAAG1C,GAAG,CAACsD,IAAJ,CAASZ,KAAvB;AACA,QAAMa,WAAW,GAAGvD,GAAG,CAACsD,IAAJ,CAASC,WAA7B,CAlBqC,CAmBrC;;AACAvD,EAAAA,GAAG,CAAC4B,IAAJ,CAASiB,UAAT,CAAoB;AAChBH,IAAAA,KAAK,EAAGA,KADQ;AAEhBa,IAAAA,WAAW,EAAGA,WAFE;AAGhBF,IAAAA,KAAK,EAAGA;AAHQ,GAApB,EAIG9C,IAJH,CAISyB,IAAD,IAAU;AACd/B,IAAAA,GAAG,CAACgC,MAAJ,CAAW,GAAX,EAAgBT,IAAhB,CAAqB;AACjBU,MAAAA,QAAQ,EAAG,mBADM;AAEjBF,MAAAA,IAAI,EAAGA;AAFU,KAArB;AAIH,GATD,EASGP,KATH,CASUC,GAAG,IAAI;AACd,WAAOzB,GAAG,CAACgC,MAAJ,CAAW,GAAX,EAAgBT,IAAhB,CAAqB;AACxBwB,MAAAA,OAAO,EAAG;AADc,KAArB,CAAP;AAGF,GAbD;AAcH,CAlCD;;AAoCAlD,OAAO,CAAC0D,QAAR,GAAmB,CAACxD,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACnC,QAAMa,MAAM,GAAGf,GAAG,CAAC8B,MAAJ,CAAWd,EAA1B;AACA,QAAM8B,MAAM,GAAGzD,gBAAgB,CAACW,GAAD,CAA/B;;AAEG,MAAG,CAAC8C,MAAM,CAACC,OAAP,EAAJ,EAAqB;AACjBzB,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,WAAOtB,GAAG,CAACgC,MAAJ,CAAW,GAAX,EAAgBT,IAAhB,CAAqB;AACxBwB,MAAAA,OAAO,EAAG,uBADc;AAExBC,MAAAA,KAAK,EAAGH,MAAM,CAACI,KAAP;AAFgB,KAArB,CAAP;AAIH;;AAED,QAAMR,KAAK,GAAG1C,GAAG,CAACsD,IAAJ,CAASZ,KAAvB;AACA,QAAMa,WAAW,GAAGvD,GAAG,CAACsD,IAAJ,CAASC,WAA7B;AAEAvD,EAAAA,GAAG,CAAC4B,IAAJ,CAAS7B,QAAT,CAAkB;AAAEe,IAAAA,KAAK,EAAG;AAAEE,MAAAA,EAAE,EAAGD;AAAP;AAAV,GAAlB,EAA8CR,IAA9C,CAAmDC,KAAK,IAAI;AACxD,UAAMwB,IAAI,GAAGxB,KAAK,CAAC,CAAD,CAAlB;;AACA,QAAG,CAACwB,IAAJ,EAAS;AACL/B,MAAAA,GAAG,CAACgC,MAAJ,CAAW,GAAX,EAAgBT,IAAhB,CAAqB;AACjBU,QAAAA,QAAQ,EAAG;AADM,OAArB;AAGH;;AACDF,IAAAA,IAAI,CAACU,KAAL,GAAaA,KAAb;AACAV,IAAAA,IAAI,CAACuB,WAAL,GAAmBA,WAAnB;;AACA,QAAGvD,GAAG,CAACmD,IAAP,EAAY;AACXM,MAAAA,WAAW,CAACzB,IAAI,CAACqB,KAAN,CAAX;AACA,YAAMA,KAAK,GAAGrD,GAAG,CAACmD,IAAJ,CAAS1D,IAAvB;AACAuC,MAAAA,IAAI,CAACqB,KAAL,GAAaA,KAAb;AACA;;AACD,WAAOrB,IAAI,CAAC0B,IAAL,EAAP;AACH,GAfD,EAeGnD,IAfH,CAeSyB,IAAD,IAAU;AACd/B,IAAAA,GAAG,CAACuB,IAAJ,CAAS;AAAEQ,MAAAA,IAAI,EAAGA;AAAT,KAAT;AACH,GAjBD,EAiBGP,KAjBH,CAkBIC,GAAG,IAAIJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CAlBX;AAoBN,CAnCD;;AAqCA5B,OAAO,CAAC6D,UAAR,GAAqB,CAAC3D,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACrC,QAAMa,MAAM,GAAGf,GAAG,CAAC8B,MAAJ,CAAWd,EAA1B;AAEArB,EAAAA,IAAI,CAACoC,QAAL,CAAchB,MAAd,EACCR,IADD,CACMyB,IAAI,IAAI;AACd,QAAG,CAACA,IAAJ,EAAU;AACN/B,MAAAA,GAAG,CAACgC,MAAJ,CAAW,GAAX,EAAgBT,IAAhB,CAAqB;AACjBU,QAAAA,QAAQ,EAAG;AADM,OAArB;AAGH;;AACD,QAAGF,IAAI,CAAC4B,MAAL,IAAe5D,GAAG,CAAC4B,IAAJ,CAASZ,EAA3B,EAA+B;AAC3Bf,MAAAA,GAAG,CAACgC,MAAJ,CAAW,GAAX,EAAgBT,IAAhB,CAAqB;AACjBU,QAAAA,QAAQ,EAAG;AADM,OAArB;AAGH;;AACDuB,IAAAA,WAAW,CAACzB,IAAI,CAACqB,KAAN,CAAX;AACA,WAAOrB,IAAI,CAAC6B,OAAL,EAAP;AACC,GAdD,EAcGtD,IAdH,CAcQ,MAAM;AACVN,IAAAA,GAAG,CAACgC,MAAJ,CAAW,GAAX,EAAgBT,IAAhB,CAAqB;AACjBU,MAAAA,QAAQ,EAAG;AADM,KAArB;AAGH,GAlBD,EAkBGT,KAlBH,CAmBIC,GAAG,IAAIJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CAnBX;AAqBH,CAxBD;;AA0BA,MAAM+B,WAAW,GAAGK,QAAQ,IAAI;AAC5BA,EAAAA,QAAQ,GAAGrE,IAAI,CAACsE,IAAL,CAAUC,SAAV,EAAqB,IAArB,EAA2BF,QAA3B,CAAX;AACApE,EAAAA,EAAE,CAACuE,MAAH,CAAUH,QAAV,EAAoBpC,GAAG,IAAIJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CAA3B;AACH,CAHD",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers",
      "sourcesContent": [
        "const { validationResult } = require('express-validator/check');\nconst Sequelize = require('sequelize');\nconst Op = Sequelize.Op;\nconst path = require('path');\nconst fs = require('fs');\n\nconst Post = require('../models/post');\nconst User = require('../models/user');\nconst Like = require('../models/like');\n\nexports.getPosts = (req, res, next) => {\n    Post.findAll({include : [{model : User, attributes : ['id', 'name', 'updatedAt']}]})\n    .then(posts => {\n        var promises = [];\n        posts.forEach(p => {\n            const postWithLikes = Like.count({where : {postId : p.id}}).then(\n            likes => {\n                p.dataValues.likes = likes;\n                return p;\n               } \n            );\n            promises.push(postWithLikes);\n        });\n        return Promise.all(promises);\n    }).then((posts) => {\n        console.log(posts);\n        res.json({posts : posts});\n    }).catch(\n        err => console.log(err)\n    );\n};\n\nexports.getPostsByMe = (req, res, next) => {\n    //Post.findAll().then((posts) => {\n    req.user.getPosts().then((posts) => {\n        console.log(posts);\n        res.json({posts : posts});\n    }).catch(\n        err => console.log(err)\n    );\n};\n\nexports.getPost = (req, res, next) => {\n    const postId = req.params.id;\n    Post.findByPk(postId)\n    .then((post) => {\n        if(!post) {\n            res.status(404).json({\n                messages : 'Post Not Found',\n            });\n        }\n        res.json({post : post});\n    }).catch(\n        err => console.log(err)\n    );\n};\n\nexports.likePost = (req, res, next) => {\n    const postId = req.params.id;\n    Post.findByPk(postId)\n    .then((post) => {\n        if(!post) {\n            res.status(404).json({\n                messages : 'Post Not Found',\n            });\n        }\n        post.getUsers({where : {id : req.user.id}}).then(records => {\n            const record = records[0];\n            if(!record) {\n                post.addUser(req.user);\n                res.json({post : 'Like'})\n            } else {\n                post.removeUser(req.user);\n                res.json({post : 'No Like'});\n            }\n        });\n    }).catch(\n        err => console.log(err)\n    );\n};\n\nexports.searchPost = (req, res, next) => {\n    const title = '%' + req.query.title + '%';\n    Post.findAll({where : {title : {[Op.like] : title}}})\n    .then((posts) => {\n        console.log(posts);\n        res.json({posts : posts});\n    }).catch(\n        err => console.log(err)\n    );\n};\n\nexports.createPost = (req, res, next) => {\n    const errors = validationResult(req);\n    \n    if(!errors.isEmpty()) {\n        return res.status(422).json({\n            message : 'Errore input parametri',\n            error : errors.array()\n        });\n    }\n\n    if(!req.file) {\n        return res.status(422).json({\n            message : req.fileValidationError ? req.fileValidationError : 'Nessun immagine allegata',\n        });\n    }\n\n    const image = req.file.path;\n    const title = req.body.title;\n    const description = req.body.description;\n    //INSERT NEL DATABASE  \n    req.user.createPost({\n        title : title,\n        description : description,\n        image : image\n    }).then((post) => {\n        res.status(201).json({\n            messages : 'Success Operation',\n            post : post\n        });\n    }).catch( err => {\n       return res.status(422).json({\n           message : 'Error nel Salvataggio'\n       })\n    });\n};\n\nexports.editPost = (req, res, next) => {\n    const postId = req.params.id;\n    const errors = validationResult(req);\n\n       if(!errors.isEmpty()){\n           console.log(\"sei nella merda\");\n           return res.status(422).json({\n               message : 'Error input Parametri',\n               error : errors.array()\n           });\n       }\n       \n       const title = req.body.title;\n       const description = req.body.description;\n\n       req.user.getPosts({ where : { id : postId }}).then(posts => {\n           const post = posts[0];\n           if(!post){\n               res.status(404).json({ \n                   messages : 'Post Not Found or Not Your Post',\n               });\n           }\n           post.title = title;\n           post.description = description;\n           if(req.file){\n            deleteImage(post.image); \n            const image = req.file.path;\n            post.image = image;\n           }\n           return post.save();\n       }).then((post) => {\n           res.json({ post : post})\n       }).catch(\n           err => console.log(err)\n       );\n};\n\nexports.deletePost = (req, res, next) => {\n    const postId = req.params.id;\n\n    Post.findByPk(postId)\n    .then(post => {\n    if(!post) {\n        res.status(404).json({\n            messages : 'Post Not Found',\n        });\n    }\n    if(post.userId != req.user.id) {\n        res.status(404).json({\n            messages : 'Operazione non permessa',\n        });\n    }\n    deleteImage(post.image); \n    return post.destroy(); \n    }).then(() => {\n        res.status(201).json({\n            messages : 'Success Operation',\n        });\n    }).catch(\n        err => console.log(err)\n    );\n};\n\nconst deleteImage = filePath => {\n    filePath = path.join(__dirname, '..', filePath);\n    fs.unlink(filePath, err => console.log(err));\n};"
      ]
    },
    "sourceType": "module",
    "mtime": 1576621457447
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/models/post.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"plugins\":[],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/models/post.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/firstAPI/models/post.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/models/post.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/models",
        "sourceFileName": "post.js"
      }
    },
    "ast": null,
    "code": "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst Post = sequelize.define('post', {\n  id: {\n    type: Sequelize.INTEGER,\n    autoIncrement: true,\n    allowNull: false,\n    primaryKey: true\n  },\n  title: {\n    type: Sequelize.STRING,\n    allowNull: false\n  },\n  description: {\n    type: Sequelize.STRING,\n    allowNull: true\n  },\n  image: {\n    type: Sequelize.STRING,\n    allowNull: true\n  }\n});\nmodule.exports = Post;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvc3QuanMiXSwibmFtZXMiOlsiU2VxdWVsaXplIiwicmVxdWlyZSIsInNlcXVlbGl6ZSIsIlBvc3QiLCJkZWZpbmUiLCJpZCIsInR5cGUiLCJJTlRFR0VSIiwiYXV0b0luY3JlbWVudCIsImFsbG93TnVsbCIsInByaW1hcnlLZXkiLCJ0aXRsZSIsIlNUUklORyIsImRlc2NyaXB0aW9uIiwiaW1hZ2UiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxTQUFTLEdBQUdDLE9BQU8sQ0FBQyxXQUFELENBQXpCOztBQUVBLE1BQU1DLFNBQVMsR0FBR0QsT0FBTyxDQUFDLG1CQUFELENBQXpCOztBQUVBLE1BQU1FLElBQUksR0FBR0QsU0FBUyxDQUFDRSxNQUFWLENBQWlCLE1BQWpCLEVBQXlCO0FBQ2xDQyxFQUFBQSxFQUFFLEVBQUc7QUFDREMsSUFBQUEsSUFBSSxFQUFHTixTQUFTLENBQUNPLE9BRGhCO0FBRURDLElBQUFBLGFBQWEsRUFBRyxJQUZmO0FBR0RDLElBQUFBLFNBQVMsRUFBRyxLQUhYO0FBSURDLElBQUFBLFVBQVUsRUFBRztBQUpaLEdBRDZCO0FBT2xDQyxFQUFBQSxLQUFLLEVBQUc7QUFDSkwsSUFBQUEsSUFBSSxFQUFHTixTQUFTLENBQUNZLE1BRGI7QUFFSkgsSUFBQUEsU0FBUyxFQUFHO0FBRlIsR0FQMEI7QUFXbENJLEVBQUFBLFdBQVcsRUFBRztBQUNWUCxJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ1ksTUFEUDtBQUVWSCxJQUFBQSxTQUFTLEVBQUc7QUFGRixHQVhvQjtBQWVsQ0ssRUFBQUEsS0FBSyxFQUFHO0FBQ0pSLElBQUFBLElBQUksRUFBR04sU0FBUyxDQUFDWSxNQURiO0FBRUpILElBQUFBLFNBQVMsRUFBRztBQUZSO0FBZjBCLENBQXpCLENBQWI7QUFxQkFNLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmIsSUFBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL0FsZXNzYW5kcm9fTXVzb2xpbm8vRGVza3RvcC9maXJzdEFQSS9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBTZXF1ZWxpemUgPSByZXF1aXJlKCdzZXF1ZWxpemUnKTtcblxuY29uc3Qgc2VxdWVsaXplID0gcmVxdWlyZSgnLi4vdXRpbHMvZGF0YWJhc2UnKTtcblxuY29uc3QgUG9zdCA9IHNlcXVlbGl6ZS5kZWZpbmUoJ3Bvc3QnLCB7XG4gICAgaWQgOiB7XG4gICAgICAgIHR5cGUgOiBTZXF1ZWxpemUuSU5URUdFUixcbiAgICAgICAgYXV0b0luY3JlbWVudCA6IHRydWUsXG4gICAgICAgIGFsbG93TnVsbCA6IGZhbHNlLFxuICAgICAgICBwcmltYXJ5S2V5IDogdHJ1ZVxuICAgIH0sXG4gICAgdGl0bGUgOiB7XG4gICAgICAgIHR5cGUgOiBTZXF1ZWxpemUuU1RSSU5HLFxuICAgICAgICBhbGxvd051bGwgOiBmYWxzZSxcbiAgICB9LFxuICAgIGRlc2NyaXB0aW9uIDoge1xuICAgICAgICB0eXBlIDogU2VxdWVsaXplLlNUUklORyxcbiAgICAgICAgYWxsb3dOdWxsIDogdHJ1ZSxcbiAgICB9LFxuICAgIGltYWdlIDoge1xuICAgICAgICB0eXBlIDogU2VxdWVsaXplLlNUUklORyxcbiAgICAgICAgYWxsb3dOdWxsIDogdHJ1ZVxuICAgIH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFBvc3Q7Il19",
    "map": {
      "version": 3,
      "sources": [
        "post.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "sequelize",
        "Post",
        "define",
        "id",
        "type",
        "INTEGER",
        "autoIncrement",
        "allowNull",
        "primaryKey",
        "title",
        "STRING",
        "description",
        "image",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,MAAMC,SAAS,GAAGD,OAAO,CAAC,mBAAD,CAAzB;;AAEA,MAAME,IAAI,GAAGD,SAAS,CAACE,MAAV,CAAiB,MAAjB,EAAyB;AAClCC,EAAAA,EAAE,EAAG;AACDC,IAAAA,IAAI,EAAGN,SAAS,CAACO,OADhB;AAEDC,IAAAA,aAAa,EAAG,IAFf;AAGDC,IAAAA,SAAS,EAAG,KAHX;AAIDC,IAAAA,UAAU,EAAG;AAJZ,GAD6B;AAOlCC,EAAAA,KAAK,EAAG;AACJL,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADb;AAEJH,IAAAA,SAAS,EAAG;AAFR,GAP0B;AAWlCI,EAAAA,WAAW,EAAG;AACVP,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADP;AAEVH,IAAAA,SAAS,EAAG;AAFF,GAXoB;AAelCK,EAAAA,KAAK,EAAG;AACJR,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADb;AAEJH,IAAAA,SAAS,EAAG;AAFR;AAf0B,CAAzB,CAAb;AAqBAM,MAAM,CAACC,OAAP,GAAiBb,IAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/models",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst Post = sequelize.define('post', {\n    id : {\n        type : Sequelize.INTEGER,\n        autoIncrement : true,\n        allowNull : false,\n        primaryKey : true\n    },\n    title : {\n        type : Sequelize.STRING,\n        allowNull : false,\n    },\n    description : {\n        type : Sequelize.STRING,\n        allowNull : true,\n    },\n    image : {\n        type : Sequelize.STRING,\n        allowNull : true\n    }\n});\n\nmodule.exports = Post;"
      ]
    },
    "sourceType": "module",
    "mtime": 1576246287862
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/models/like.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"plugins\":[],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/models/like.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/firstAPI/models/like.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/models/like.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/models",
        "sourceFileName": "like.js"
      }
    },
    "ast": null,
    "code": "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst Like = sequelize.define('like', {\n  id: {\n    type: Sequelize.INTEGER,\n    autoIncrement: true,\n    allowNull: false,\n    primaryKey: true\n  }\n});\nmodule.exports = Like;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpa2UuanMiXSwibmFtZXMiOlsiU2VxdWVsaXplIiwicmVxdWlyZSIsInNlcXVlbGl6ZSIsIkxpa2UiLCJkZWZpbmUiLCJpZCIsInR5cGUiLCJJTlRFR0VSIiwiYXV0b0luY3JlbWVudCIsImFsbG93TnVsbCIsInByaW1hcnlLZXkiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxTQUFTLEdBQUdDLE9BQU8sQ0FBQyxXQUFELENBQXpCOztBQUVBLE1BQU1DLFNBQVMsR0FBR0QsT0FBTyxDQUFDLG1CQUFELENBQXpCOztBQUVBLE1BQU1FLElBQUksR0FBR0QsU0FBUyxDQUFDRSxNQUFWLENBQWlCLE1BQWpCLEVBQXlCO0FBQ2xDQyxFQUFBQSxFQUFFLEVBQUc7QUFDREMsSUFBQUEsSUFBSSxFQUFHTixTQUFTLENBQUNPLE9BRGhCO0FBRURDLElBQUFBLGFBQWEsRUFBRyxJQUZmO0FBR0RDLElBQUFBLFNBQVMsRUFBRyxLQUhYO0FBSURDLElBQUFBLFVBQVUsRUFBRztBQUpaO0FBRDZCLENBQXpCLENBQWI7QUFTQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCVCxJQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvQWxlc3NhbmRyb19NdXNvbGluby9EZXNrdG9wL2ZpcnN0QVBJL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFNlcXVlbGl6ZSA9IHJlcXVpcmUoJ3NlcXVlbGl6ZScpO1xuXG5jb25zdCBzZXF1ZWxpemUgPSByZXF1aXJlKCcuLi91dGlscy9kYXRhYmFzZScpO1xuXG5jb25zdCBMaWtlID0gc2VxdWVsaXplLmRlZmluZSgnbGlrZScsIHtcbiAgICBpZCA6IHtcbiAgICAgICAgdHlwZSA6IFNlcXVlbGl6ZS5JTlRFR0VSLFxuICAgICAgICBhdXRvSW5jcmVtZW50IDogdHJ1ZSxcbiAgICAgICAgYWxsb3dOdWxsIDogZmFsc2UsXG4gICAgICAgIHByaW1hcnlLZXkgOiB0cnVlXG4gICAgfVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gTGlrZTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "like.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "sequelize",
        "Like",
        "define",
        "id",
        "type",
        "INTEGER",
        "autoIncrement",
        "allowNull",
        "primaryKey",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,MAAMC,SAAS,GAAGD,OAAO,CAAC,mBAAD,CAAzB;;AAEA,MAAME,IAAI,GAAGD,SAAS,CAACE,MAAV,CAAiB,MAAjB,EAAyB;AAClCC,EAAAA,EAAE,EAAG;AACDC,IAAAA,IAAI,EAAGN,SAAS,CAACO,OADhB;AAEDC,IAAAA,aAAa,EAAG,IAFf;AAGDC,IAAAA,SAAS,EAAG,KAHX;AAIDC,IAAAA,UAAU,EAAG;AAJZ;AAD6B,CAAzB,CAAb;AASAC,MAAM,CAACC,OAAP,GAAiBT,IAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/models",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst Like = sequelize.define('like', {\n    id : {\n        type : Sequelize.INTEGER,\n        autoIncrement : true,\n        allowNull : false,\n        primaryKey : true\n    }\n});\n\nmodule.exports = Like;"
      ]
    },
    "sourceType": "module",
    "mtime": 1576146094299
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/routes/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"plugins\":[],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "const feedRoutes = require('./feed');\n\nconst authRoutes = require('./auth');\n\nconst galleryRoutes = require('./gallery');\n\nmodule.exports = function (app) {\n  app.use('/feed', feedRoutes);\n  app.use('/auth', authRoutes);\n  app.use('/gallery', galleryRoutes);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImZlZWRSb3V0ZXMiLCJyZXF1aXJlIiwiYXV0aFJvdXRlcyIsImdhbGxlcnlSb3V0ZXMiLCJtb2R1bGUiLCJleHBvcnRzIiwiYXBwIiwidXNlIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxVQUFVLEdBQUdDLE9BQU8sQ0FBQyxRQUFELENBQTFCOztBQUNBLE1BQU1DLFVBQVUsR0FBR0QsT0FBTyxDQUFDLFFBQUQsQ0FBMUI7O0FBQ0EsTUFBTUUsYUFBYSxHQUFHRixPQUFPLENBQUMsV0FBRCxDQUE3Qjs7QUFFQUcsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQVNDLEdBQVQsRUFBYztBQUMzQkEsRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsT0FBUixFQUFpQlAsVUFBakI7QUFDQU0sRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsT0FBUixFQUFpQkwsVUFBakI7QUFDQUksRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsVUFBUixFQUFvQkosYUFBcEI7QUFDSCxDQUpEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9BbGVzc2FuZHJvX011c29saW5vL0Rlc2t0b3AvZmlyc3RBUEkvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZmVlZFJvdXRlcyA9IHJlcXVpcmUoJy4vZmVlZCcpO1xuY29uc3QgYXV0aFJvdXRlcyA9IHJlcXVpcmUoJy4vYXV0aCcpO1xuY29uc3QgZ2FsbGVyeVJvdXRlcyA9IHJlcXVpcmUoJy4vZ2FsbGVyeScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGFwcCkge1xuICAgIGFwcC51c2UoJy9mZWVkJywgZmVlZFJvdXRlcyk7XG4gICAgYXBwLnVzZSgnL2F1dGgnLCBhdXRoUm91dGVzKTtcbiAgICBhcHAudXNlKCcvZ2FsbGVyeScsIGdhbGxlcnlSb3V0ZXMpO1xufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "feedRoutes",
        "require",
        "authRoutes",
        "galleryRoutes",
        "module",
        "exports",
        "app",
        "use"
      ],
      "mappings": "AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,QAAD,CAA1B;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,QAAD,CAA1B;;AACA,MAAME,aAAa,GAAGF,OAAO,CAAC,WAAD,CAA7B;;AAEAG,MAAM,CAACC,OAAP,GAAiB,UAASC,GAAT,EAAc;AAC3BA,EAAAA,GAAG,CAACC,GAAJ,CAAQ,OAAR,EAAiBP,UAAjB;AACAM,EAAAA,GAAG,CAACC,GAAJ,CAAQ,OAAR,EAAiBL,UAAjB;AACAI,EAAAA,GAAG,CAACC,GAAJ,CAAQ,UAAR,EAAoBJ,aAApB;AACH,CAJD",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes",
      "sourcesContent": [
        "const feedRoutes = require('./feed');\nconst authRoutes = require('./auth');\nconst galleryRoutes = require('./gallery');\n\nmodule.exports = function(app) {\n    app.use('/feed', feedRoutes);\n    app.use('/auth', authRoutes);\n    app.use('/gallery', galleryRoutes);\n};"
      ]
    },
    "sourceType": "module",
    "mtime": 1576522201915
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/routes/auth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"plugins\":[],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes/auth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes/auth.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes/auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes",
        "sourceFileName": "auth.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst {\n  body,\n  query\n} = require('express-validator/check');\n\nconst router = express.Router();\n\nconst authController = require('../controllers/auth');\n\nconst User = require('../models/user');\n\nconst isAuth = require('../middleware/is-auth'); //6 END POINT\n//------> JWT\n//POST /user/login\n//POST /user/register\n//GET /user/me\n//PUT /user/:id //verificare permessi\n//POST /auth/register\n\n\nrouter.post('/register', [body('email').isEmail().withMessage('Inserisci una mail valida name@server.com').custom((value, {\n  req\n}) => {\n  return User.findOne({\n    where: {\n      email: value\n    }\n  }).then(user => {\n    if (user) {\n      return Promise.reject('Email Esistente');\n    }\n  });\n}), body('password').trim().isLength({\n  min: 5\n}).withMessage('Password > 5 caratteri'), body('name').trim().not().isEmpty().withMessage('Name non vuoto')], authController.registerUser);\nrouter.post('/login', [body('email').isEmail().withMessage('Inserisci una mail valida name@server.com'), body('password').trim().isLength({\n  min: 5\n}).withMessage('Password > 5 caratteri')], authController.loginUser);\nrouter.get('/me', isAuth, authController.loginMe);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGguanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJib2R5IiwicXVlcnkiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJhdXRoQ29udHJvbGxlciIsIlVzZXIiLCJpc0F1dGgiLCJwb3N0IiwiaXNFbWFpbCIsIndpdGhNZXNzYWdlIiwiY3VzdG9tIiwidmFsdWUiLCJyZXEiLCJmaW5kT25lIiwid2hlcmUiLCJlbWFpbCIsInRoZW4iLCJ1c2VyIiwiUHJvbWlzZSIsInJlamVjdCIsInRyaW0iLCJpc0xlbmd0aCIsIm1pbiIsIm5vdCIsImlzRW1wdHkiLCJyZWdpc3RlclVzZXIiLCJsb2dpblVzZXIiLCJnZXQiLCJsb2dpbk1lIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxNQUFNO0FBQUVDLEVBQUFBLElBQUY7QUFBUUMsRUFBQUE7QUFBUixJQUFrQkYsT0FBTyxDQUFDLHlCQUFELENBQS9COztBQUNBLE1BQU1HLE1BQU0sR0FBR0osT0FBTyxDQUFDSyxNQUFSLEVBQWY7O0FBRUEsTUFBTUMsY0FBYyxHQUFHTCxPQUFPLENBQUMscUJBQUQsQ0FBOUI7O0FBQ0EsTUFBTU0sSUFBSSxHQUFHTixPQUFPLENBQUMsZ0JBQUQsQ0FBcEI7O0FBQ0EsTUFBTU8sTUFBTSxHQUFHUCxPQUFPLENBQUMsdUJBQUQsQ0FBdEIsQyxDQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOzs7QUFDQUcsTUFBTSxDQUFDSyxJQUFQLENBQVksV0FBWixFQUNJLENBQ0lQLElBQUksQ0FBQyxPQUFELENBQUosQ0FBY1EsT0FBZCxHQUF3QkMsV0FBeEIsQ0FBb0MsMkNBQXBDLEVBQ0NDLE1BREQsQ0FDUSxDQUFDQyxLQUFELEVBQVE7QUFBQ0MsRUFBQUE7QUFBRCxDQUFSLEtBQWtCO0FBQ3RCLFNBQU9QLElBQUksQ0FBQ1EsT0FBTCxDQUFhO0FBQUNDLElBQUFBLEtBQUssRUFBRztBQUFDQyxNQUFBQSxLQUFLLEVBQUdKO0FBQVQ7QUFBVCxHQUFiLEVBQXdDSyxJQUF4QyxDQUE2Q0MsSUFBSSxJQUFJO0FBQ3hELFFBQUdBLElBQUgsRUFBUztBQUNMLGFBQU9DLE9BQU8sQ0FBQ0MsTUFBUixDQUFlLGlCQUFmLENBQVA7QUFDSDtBQUNKLEdBSk0sQ0FBUDtBQUtILENBUEQsQ0FESixFQVNJbkIsSUFBSSxDQUFDLFVBQUQsQ0FBSixDQUFpQm9CLElBQWpCLEdBQXdCQyxRQUF4QixDQUFpQztBQUFDQyxFQUFBQSxHQUFHLEVBQUc7QUFBUCxDQUFqQyxFQUE0Q2IsV0FBNUMsQ0FBd0Qsd0JBQXhELENBVEosRUFVSVQsSUFBSSxDQUFDLE1BQUQsQ0FBSixDQUFhb0IsSUFBYixHQUFvQkcsR0FBcEIsR0FBMEJDLE9BQTFCLEdBQW9DZixXQUFwQyxDQUFnRCxnQkFBaEQsQ0FWSixDQURKLEVBYUlMLGNBQWMsQ0FBQ3FCLFlBYm5CO0FBZUF2QixNQUFNLENBQUNLLElBQVAsQ0FBWSxRQUFaLEVBQ0ksQ0FDSVAsSUFBSSxDQUFDLE9BQUQsQ0FBSixDQUFjUSxPQUFkLEdBQXdCQyxXQUF4QixDQUFvQywyQ0FBcEMsQ0FESixFQUVJVCxJQUFJLENBQUMsVUFBRCxDQUFKLENBQWlCb0IsSUFBakIsR0FBd0JDLFFBQXhCLENBQWlDO0FBQUNDLEVBQUFBLEdBQUcsRUFBRztBQUFQLENBQWpDLEVBQTRDYixXQUE1QyxDQUF3RCx3QkFBeEQsQ0FGSixDQURKLEVBS0lMLGNBQWMsQ0FBQ3NCLFNBTG5CO0FBT0F4QixNQUFNLENBQUN5QixHQUFQLENBQVcsS0FBWCxFQUFrQnJCLE1BQWxCLEVBQTBCRixjQUFjLENBQUN3QixPQUF6QztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUI1QixNQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvQWxlc3NhbmRyb19NdXNvbGluby9EZXNrdG9wL2ZpcnN0QVBJL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG5jb25zdCB7IGJvZHksIHF1ZXJ5IH0gPSByZXF1aXJlKCdleHByZXNzLXZhbGlkYXRvci9jaGVjaycpO1xuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcblxuY29uc3QgYXV0aENvbnRyb2xsZXIgPSByZXF1aXJlKCcuLi9jb250cm9sbGVycy9hdXRoJyk7XG5jb25zdCBVc2VyID0gcmVxdWlyZSgnLi4vbW9kZWxzL3VzZXInKTtcbmNvbnN0IGlzQXV0aCA9IHJlcXVpcmUoJy4uL21pZGRsZXdhcmUvaXMtYXV0aCcpO1xuXG4vLzYgRU5EIFBPSU5UXG4vLy0tLS0tLT4gSldUXG4vL1BPU1QgL3VzZXIvbG9naW5cbi8vUE9TVCAvdXNlci9yZWdpc3RlclxuLy9HRVQgL3VzZXIvbWVcbi8vUFVUIC91c2VyLzppZCAvL3ZlcmlmaWNhcmUgcGVybWVzc2lcblxuLy9QT1NUIC9hdXRoL3JlZ2lzdGVyXG5yb3V0ZXIucG9zdCgnL3JlZ2lzdGVyJyxcbiAgICBbXG4gICAgICAgIGJvZHkoJ2VtYWlsJykuaXNFbWFpbCgpLndpdGhNZXNzYWdlKCdJbnNlcmlzY2kgdW5hIG1haWwgdmFsaWRhIG5hbWVAc2VydmVyLmNvbScpXG4gICAgICAgIC5jdXN0b20oKHZhbHVlLCB7cmVxfSkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIFVzZXIuZmluZE9uZSh7d2hlcmUgOiB7ZW1haWwgOiB2YWx1ZX19KS50aGVuKHVzZXIgPT4ge1xuICAgICAgICAgICAgICAgIGlmKHVzZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KCdFbWFpbCBFc2lzdGVudGUnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSksXG4gICAgICAgIGJvZHkoJ3Bhc3N3b3JkJykudHJpbSgpLmlzTGVuZ3RoKHttaW4gOiA1fSkud2l0aE1lc3NhZ2UoJ1Bhc3N3b3JkID4gNSBjYXJhdHRlcmknKSxcbiAgICAgICAgYm9keSgnbmFtZScpLnRyaW0oKS5ub3QoKS5pc0VtcHR5KCkud2l0aE1lc3NhZ2UoJ05hbWUgbm9uIHZ1b3RvJyksXG4gICAgXSxcbiAgICBhdXRoQ29udHJvbGxlci5yZWdpc3RlclVzZXIpO1xuXG5yb3V0ZXIucG9zdCgnL2xvZ2luJywgXG4gICAgW1xuICAgICAgICBib2R5KCdlbWFpbCcpLmlzRW1haWwoKS53aXRoTWVzc2FnZSgnSW5zZXJpc2NpIHVuYSBtYWlsIHZhbGlkYSBuYW1lQHNlcnZlci5jb20nKSxcbiAgICAgICAgYm9keSgncGFzc3dvcmQnKS50cmltKCkuaXNMZW5ndGgoe21pbiA6IDV9KS53aXRoTWVzc2FnZSgnUGFzc3dvcmQgPiA1IGNhcmF0dGVyaScpLFxuICAgIF0sICBcbiAgICBhdXRoQ29udHJvbGxlci5sb2dpblVzZXIpO1xuXG5yb3V0ZXIuZ2V0KCcvbWUnLCBpc0F1dGgsIGF1dGhDb250cm9sbGVyLmxvZ2luTWUpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "auth.js"
      ],
      "names": [
        "express",
        "require",
        "body",
        "query",
        "router",
        "Router",
        "authController",
        "User",
        "isAuth",
        "post",
        "isEmail",
        "withMessage",
        "custom",
        "value",
        "req",
        "findOne",
        "where",
        "email",
        "then",
        "user",
        "Promise",
        "reject",
        "trim",
        "isLength",
        "min",
        "not",
        "isEmpty",
        "registerUser",
        "loginUser",
        "get",
        "loginMe",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAM;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,IAAkBF,OAAO,CAAC,yBAAD,CAA/B;;AACA,MAAMG,MAAM,GAAGJ,OAAO,CAACK,MAAR,EAAf;;AAEA,MAAMC,cAAc,GAAGL,OAAO,CAAC,qBAAD,CAA9B;;AACA,MAAMM,IAAI,GAAGN,OAAO,CAAC,gBAAD,CAApB;;AACA,MAAMO,MAAM,GAAGP,OAAO,CAAC,uBAAD,CAAtB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACAG,MAAM,CAACK,IAAP,CAAY,WAAZ,EACI,CACIP,IAAI,CAAC,OAAD,CAAJ,CAAcQ,OAAd,GAAwBC,WAAxB,CAAoC,2CAApC,EACCC,MADD,CACQ,CAACC,KAAD,EAAQ;AAACC,EAAAA;AAAD,CAAR,KAAkB;AACtB,SAAOP,IAAI,CAACQ,OAAL,CAAa;AAACC,IAAAA,KAAK,EAAG;AAACC,MAAAA,KAAK,EAAGJ;AAAT;AAAT,GAAb,EAAwCK,IAAxC,CAA6CC,IAAI,IAAI;AACxD,QAAGA,IAAH,EAAS;AACL,aAAOC,OAAO,CAACC,MAAR,CAAe,iBAAf,CAAP;AACH;AACJ,GAJM,CAAP;AAKH,CAPD,CADJ,EASInB,IAAI,CAAC,UAAD,CAAJ,CAAiBoB,IAAjB,GAAwBC,QAAxB,CAAiC;AAACC,EAAAA,GAAG,EAAG;AAAP,CAAjC,EAA4Cb,WAA5C,CAAwD,wBAAxD,CATJ,EAUIT,IAAI,CAAC,MAAD,CAAJ,CAAaoB,IAAb,GAAoBG,GAApB,GAA0BC,OAA1B,GAAoCf,WAApC,CAAgD,gBAAhD,CAVJ,CADJ,EAaIL,cAAc,CAACqB,YAbnB;AAeAvB,MAAM,CAACK,IAAP,CAAY,QAAZ,EACI,CACIP,IAAI,CAAC,OAAD,CAAJ,CAAcQ,OAAd,GAAwBC,WAAxB,CAAoC,2CAApC,CADJ,EAEIT,IAAI,CAAC,UAAD,CAAJ,CAAiBoB,IAAjB,GAAwBC,QAAxB,CAAiC;AAACC,EAAAA,GAAG,EAAG;AAAP,CAAjC,EAA4Cb,WAA5C,CAAwD,wBAAxD,CAFJ,CADJ,EAKIL,cAAc,CAACsB,SALnB;AAOAxB,MAAM,CAACyB,GAAP,CAAW,KAAX,EAAkBrB,MAAlB,EAA0BF,cAAc,CAACwB,OAAzC;AAEAC,MAAM,CAACC,OAAP,GAAiB5B,MAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes",
      "sourcesContent": [
        "const express = require('express');\nconst { body, query } = require('express-validator/check');\nconst router = express.Router();\n\nconst authController = require('../controllers/auth');\nconst User = require('../models/user');\nconst isAuth = require('../middleware/is-auth');\n\n//6 END POINT\n//------> JWT\n//POST /user/login\n//POST /user/register\n//GET /user/me\n//PUT /user/:id //verificare permessi\n\n//POST /auth/register\nrouter.post('/register',\n    [\n        body('email').isEmail().withMessage('Inserisci una mail valida name@server.com')\n        .custom((value, {req}) => {\n            return User.findOne({where : {email : value}}).then(user => {\n                if(user) {\n                    return Promise.reject('Email Esistente');\n                }\n            });\n        }),\n        body('password').trim().isLength({min : 5}).withMessage('Password > 5 caratteri'),\n        body('name').trim().not().isEmpty().withMessage('Name non vuoto'),\n    ],\n    authController.registerUser);\n\nrouter.post('/login', \n    [\n        body('email').isEmail().withMessage('Inserisci una mail valida name@server.com'),\n        body('password').trim().isLength({min : 5}).withMessage('Password > 5 caratteri'),\n    ],  \n    authController.loginUser);\n\nrouter.get('/me', isAuth, authController.loginMe);\n\nmodule.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1576521180073
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/controllers/auth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"plugins\":[],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers/auth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers/auth.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers/auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers",
        "sourceFileName": "auth.js"
      }
    },
    "ast": null,
    "code": "const {\n  validationResult\n} = require('express-validator/check');\n\nconst bcrypt = require('bcryptjs');\n\nconst jwt = require('jsonwebtoken');\n\nconst User = require('../models/user');\n\nexports.registerUser = (req, res, next) => {\n  const errors = validationResult(req);\n\n  if (!errors.isEmpty()) {\n    return res.status(422).json({\n      message: 'Errore input parametri',\n      error: errors.array()\n    });\n  }\n\n  const email = req.body.email;\n  const name = req.body.name;\n  const password = req.body.password;\n  bcrypt.hash(password, 12).then(hashedPassword => {\n    User.create({\n      name: name,\n      email: email,\n      password: hashedPassword\n    }).then(user => {\n      res.status(201).json({\n        messages: 'Success Operation',\n        user: user\n      });\n    }).catch(err => {\n      return res.status(422).json({\n        message: err\n      });\n    });\n  }).catch(err => {\n    return res.status(422).json({\n      message: err\n    });\n  });\n};\n\nexports.loginMe = (req, res, next) => {\n  req.user.password = '***************';\n  res.status(200).json({\n    user: req.user\n  });\n};\n\nexports.loginUser = (req, res, next) => {\n  const errors = validationResult(req);\n\n  if (!errors.isEmpty()) {\n    return res.status(422).json({\n      message: 'Errore input parametri',\n      error: errors.array()\n    });\n  }\n\n  const email = req.body.email;\n  const password = req.body.password;\n  let loginUser;\n  User.findOne({\n    where: {\n      email: email\n    }\n  }).then(user => {\n    if (!user) {\n      return res.status(401).json({\n        message: 'Non autorizzato, Email errata'\n      });\n    }\n\n    loginUser = user;\n    return bcrypt.compare(password, user.password);\n  }).then(isEqual => {\n    if (!isEqual) {\n      return res.status(401).json({\n        message: 'Non autorizzato, Password errata'\n      });\n    }\n\n    const token = jwt.sign({\n      id: loginUser.id,\n      email: loginUser.email,\n      name: loginUser.name\n    }, 'axAYgScUa4Z2UdjgirykmI3iZsSCaPGh', {\n      expiresIn: '1h'\n    });\n    res.status(201).json({\n      messages: 'Sei Loggato',\n      id: loginUser.id,\n      token: token\n    });\n  }).catch(err => {\n    return res.status(422).json({\n      message: err\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "auth.js"
      ],
      "names": [
        "validationResult",
        "require",
        "bcrypt",
        "jwt",
        "User",
        "exports",
        "registerUser",
        "req",
        "res",
        "next",
        "errors",
        "isEmpty",
        "status",
        "json",
        "message",
        "error",
        "array",
        "email",
        "body",
        "name",
        "password",
        "hash",
        "then",
        "hashedPassword",
        "create",
        "user",
        "messages",
        "catch",
        "err",
        "loginMe",
        "loginUser",
        "findOne",
        "where",
        "compare",
        "isEqual",
        "token",
        "sign",
        "id",
        "expiresIn"
      ],
      "mappings": "AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAuBC,OAAO,CAAC,yBAAD,CAApC;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAME,GAAG,GAAGF,OAAO,CAAC,cAAD,CAAnB;;AACA,MAAMG,IAAI,GAAGH,OAAO,CAAC,gBAAD,CAApB;;AAEAI,OAAO,CAACC,YAAR,GAAuB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACvC,QAAMC,MAAM,GAAGV,gBAAgB,CAACO,GAAD,CAA/B;;AAEA,MAAG,CAACG,MAAM,CAACC,OAAP,EAAJ,EAAsB;AAClB,WAAOH,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,OAAO,EAAG,wBADc;AAExBC,MAAAA,KAAK,EAAGL,MAAM,CAACM,KAAP;AAFgB,KAArB,CAAP;AAIH;;AAED,QAAMC,KAAK,GAAGV,GAAG,CAACW,IAAJ,CAASD,KAAvB;AACA,QAAME,IAAI,GAAGZ,GAAG,CAACW,IAAJ,CAASC,IAAtB;AACA,QAAMC,QAAQ,GAAGb,GAAG,CAACW,IAAJ,CAASE,QAA1B;AAEAlB,EAAAA,MAAM,CAACmB,IAAP,CAAYD,QAAZ,EAAsB,EAAtB,EACCE,IADD,CACMC,cAAc,IAAI;AACpBnB,IAAAA,IAAI,CAACoB,MAAL,CAAY;AAACL,MAAAA,IAAI,EAAGA,IAAR;AAAcF,MAAAA,KAAK,EAAGA,KAAtB;AAA6BG,MAAAA,QAAQ,EAAGG;AAAxC,KAAZ,EACCD,IADD,CACMG,IAAI,IAAI;AACVjB,MAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBa,QAAAA,QAAQ,EAAG,mBADM;AAEjBD,QAAAA,IAAI,EAAGA;AAFU,OAArB;AAIH,KAND,EAOCE,KAPD,CAOOC,GAAG,IAAI;AACV,aAAOpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,QAAAA,OAAO,EAAGc;AADc,OAArB,CAAP;AAGH,KAXD;AAYH,GAdD,EAeCD,KAfD,CAeOC,GAAG,IAAI;AACV,WAAOpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,OAAO,EAAGc;AADc,KAArB,CAAP;AAGH,GAnBD;AAoBH,CAlCD;;AAoCAvB,OAAO,CAACwB,OAAR,GAAkB,CAACtB,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAClCF,EAAAA,GAAG,CAACkB,IAAJ,CAASL,QAAT,GAAoB,iBAApB;AACAZ,EAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBY,IAAAA,IAAI,EAAGlB,GAAG,CAACkB;AADM,GAArB;AAGH,CALD;;AAOApB,OAAO,CAACyB,SAAR,GAAoB,CAACvB,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACpC,QAAMC,MAAM,GAAGV,gBAAgB,CAACO,GAAD,CAA/B;;AAEA,MAAG,CAACG,MAAM,CAACC,OAAP,EAAJ,EAAsB;AAClB,WAAOH,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,OAAO,EAAG,wBADc;AAExBC,MAAAA,KAAK,EAAGL,MAAM,CAACM,KAAP;AAFgB,KAArB,CAAP;AAIH;;AAED,QAAMC,KAAK,GAAGV,GAAG,CAACW,IAAJ,CAASD,KAAvB;AACA,QAAMG,QAAQ,GAAGb,GAAG,CAACW,IAAJ,CAASE,QAA1B;AAEA,MAAIU,SAAJ;AACA1B,EAAAA,IAAI,CAAC2B,OAAL,CAAa;AAACC,IAAAA,KAAK,EAAG;AAACf,MAAAA,KAAK,EAAGA;AAAT;AAAT,GAAb,EAAwCK,IAAxC,CAA6CG,IAAI,IAAI;AACjD,QAAG,CAACA,IAAJ,EAAU;AACN,aAAOjB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,QAAAA,OAAO,EAAG;AADc,OAArB,CAAP;AAGH;;AACDgB,IAAAA,SAAS,GAAGL,IAAZ;AACA,WAAOvB,MAAM,CAAC+B,OAAP,CAAeb,QAAf,EAAyBK,IAAI,CAACL,QAA9B,CAAP;AACH,GARD,EASCE,IATD,CASMY,OAAO,IAAI;AACb,QAAG,CAACA,OAAJ,EAAY;AACR,aAAO1B,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,QAAAA,OAAO,EAAG;AADc,OAArB,CAAP;AAGH;;AACD,UAAMqB,KAAK,GAAGhC,GAAG,CAACiC,IAAJ,CACV;AACIC,MAAAA,EAAE,EAAGP,SAAS,CAACO,EADnB;AAEIpB,MAAAA,KAAK,EAAGa,SAAS,CAACb,KAFtB;AAGIE,MAAAA,IAAI,EAAGW,SAAS,CAACX;AAHrB,KADU,EAKP,kCALO,EAK6B;AAACmB,MAAAA,SAAS,EAAG;AAAb,KAL7B,CAAd;AAOA9B,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBa,MAAAA,QAAQ,EAAG,aADM;AAEjBW,MAAAA,EAAE,EAAGP,SAAS,CAACO,EAFE;AAGjBF,MAAAA,KAAK,EAAGA;AAHS,KAArB;AAKH,GA3BD,EA4BCR,KA5BD,CA4BOC,GAAG,IAAI;AACV,WAAOpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,OAAO,EAAGc;AADc,KAArB,CAAP;AAGH,GAhCD;AAiCH,CA/CD",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers",
      "sourcesContent": [
        "const { validationResult } = require('express-validator/check');\nconst bcrypt = require('bcryptjs');\nconst jwt = require('jsonwebtoken');\nconst User = require('../models/user');\n\nexports.registerUser = (req, res, next) => {\n    const errors = validationResult(req);\n    \n    if(!errors.isEmpty()) {\n        return res.status(422).json({\n            message : 'Errore input parametri',\n            error : errors.array()\n        });\n    }\n\n    const email = req.body.email;\n    const name = req.body.name;\n    const password = req.body.password;\n\n    bcrypt.hash(password, 12)\n    .then(hashedPassword => {\n        User.create({name : name, email : email, password : hashedPassword})\n        .then(user => {\n            res.status(201).json({\n                messages : 'Success Operation',\n                user : user\n            });\n        })\n        .catch(err => {\n            return res.status(422).json({\n                message : err\n            })\n        });\n    })\n    .catch(err => {\n        return res.status(422).json({\n            message : err\n        });\n    });\n};\n\nexports.loginMe = (req, res, next) => {\n    req.user.password = '***************';\n    res.status(200).json({\n        user : req.user,\n    });\n};\n\nexports.loginUser = (req, res, next) => {\n    const errors = validationResult(req);\n    \n    if(!errors.isEmpty()) {\n        return res.status(422).json({\n            message : 'Errore input parametri',\n            error : errors.array()\n        });\n    }\n\n    const email = req.body.email;\n    const password = req.body.password;\n\n    let loginUser;\n    User.findOne({where : {email : email}}).then(user => {\n        if(!user) {\n            return res.status(401).json({\n                message : 'Non autorizzato, Email errata',\n            });\n        }\n        loginUser = user;\n        return bcrypt.compare(password, user.password);\n    })\n    .then(isEqual => {\n        if(!isEqual){\n            return res.status(401).json({\n                message : 'Non autorizzato, Password errata',\n            });\n        }\n        const token = jwt.sign(\n            {\n                id : loginUser.id, \n                email : loginUser.email,\n                name : loginUser.name\n            }, 'axAYgScUa4Z2UdjgirykmI3iZsSCaPGh', {expiresIn : '1h'});\n\n        res.status(201).json({\n            messages : 'Sei Loggato',\n            id : loginUser.id,\n            token : token\n        });\n    })\n    .catch(err => {\n        return res.status(422).json({\n            message : err\n        });\n    });\n};"
      ]
    },
    "sourceType": "module",
    "mtime": 1576244094323
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/routes/gallery.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"plugins\":[],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes/gallery.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes/gallery.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes/gallery.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes",
        "sourceFileName": "gallery.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst {\n  body,\n  query\n} = require('express-validator/check');\n\nconst router = express.Router();\n\nconst isAuth = require('../middleware/is-auth');\n\nconst galleryController = require('../controllers/gallery');\n\nconst path = require('path');\n\nconst multer = require('multer');\n\nconst uuidv4 = require('uuid/v4');\n\nconst storage = multer.diskStorage({\n  destination: (req, file, callback) => {\n    callback(null, 'public/gallery');\n  },\n  filename: (req, file, callback) => {\n    //callback(null, Date.now() + '-' + file.originalname);\n    callback(null, uuidv4() + path.extname(file.originalname));\n  }\n});\n\nconst fileFilter = (req, file, callback) => {\n  if (file.mimetype == 'image/png' || file.mimetype == 'image/jpg' || file.mimetype == 'image/jpeg') {\n    callback(null, true);\n  } else {\n    req.fileValidationError = \"Estensione non consentita solo: 'image/jpg' | 'image/png' | 'image/jpeg'\";\n    callback(null, false);\n  }\n};\n\nvar upload = multer({\n  storage: storage,\n  fileFilter: fileFilter\n}); //NOT AUTH | AUTH\n//GET ALL /feed/posts\n//GET /feed/post/:id\n//POST /feed/post\n//PUT /feed/post/:id\n//DELETE /feed/post/:id\n//POST /feed/post/:id/like\n//POST /feed/posts\n\nvar cpUpload = upload.fields([{\n  name: 'avatar',\n  maxCount: 1\n}, {\n  name: 'gallery',\n  maxCount: 8\n}]);\nrouter.post('/', [isAuth, cpUpload], galleryController.createGallery);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhbGxlcnkuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJib2R5IiwicXVlcnkiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJpc0F1dGgiLCJnYWxsZXJ5Q29udHJvbGxlciIsInBhdGgiLCJtdWx0ZXIiLCJ1dWlkdjQiLCJzdG9yYWdlIiwiZGlza1N0b3JhZ2UiLCJkZXN0aW5hdGlvbiIsInJlcSIsImZpbGUiLCJjYWxsYmFjayIsImZpbGVuYW1lIiwiZXh0bmFtZSIsIm9yaWdpbmFsbmFtZSIsImZpbGVGaWx0ZXIiLCJtaW1ldHlwZSIsImZpbGVWYWxpZGF0aW9uRXJyb3IiLCJ1cGxvYWQiLCJjcFVwbG9hZCIsImZpZWxkcyIsIm5hbWUiLCJtYXhDb3VudCIsInBvc3QiLCJjcmVhdGVHYWxsZXJ5IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxNQUFNO0FBQUVDLEVBQUFBLElBQUY7QUFBUUMsRUFBQUE7QUFBUixJQUFrQkYsT0FBTyxDQUFDLHlCQUFELENBQS9COztBQUNBLE1BQU1HLE1BQU0sR0FBR0osT0FBTyxDQUFDSyxNQUFSLEVBQWY7O0FBRUEsTUFBTUMsTUFBTSxHQUFHTCxPQUFPLENBQUMsdUJBQUQsQ0FBdEI7O0FBRUEsTUFBTU0saUJBQWlCLEdBQUdOLE9BQU8sQ0FBQyx3QkFBRCxDQUFqQzs7QUFFQSxNQUFNTyxJQUFJLEdBQUdQLE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUNBLE1BQU1RLE1BQU0sR0FBR1IsT0FBTyxDQUFDLFFBQUQsQ0FBdEI7O0FBQ0EsTUFBTVMsTUFBTSxHQUFHVCxPQUFPLENBQUMsU0FBRCxDQUF0Qjs7QUFFQSxNQUFNVSxPQUFPLEdBQUdGLE1BQU0sQ0FBQ0csV0FBUCxDQUFtQjtBQUMvQkMsRUFBQUEsV0FBVyxFQUFHLENBQUNDLEdBQUQsRUFBTUMsSUFBTixFQUFZQyxRQUFaLEtBQXlCO0FBQ25DQSxJQUFBQSxRQUFRLENBQUMsSUFBRCxFQUFPLGdCQUFQLENBQVI7QUFDSCxHQUg4QjtBQUkvQkMsRUFBQUEsUUFBUSxFQUFHLENBQUNILEdBQUQsRUFBTUMsSUFBTixFQUFZQyxRQUFaLEtBQXlCO0FBQ2hDO0FBQ0FBLElBQUFBLFFBQVEsQ0FBQyxJQUFELEVBQU9OLE1BQU0sS0FBS0YsSUFBSSxDQUFDVSxPQUFMLENBQWFILElBQUksQ0FBQ0ksWUFBbEIsQ0FBbEIsQ0FBUjtBQUNIO0FBUDhCLENBQW5CLENBQWhCOztBQVVBLE1BQU1DLFVBQVUsR0FBSSxDQUFDTixHQUFELEVBQU1DLElBQU4sRUFBWUMsUUFBWixLQUF5QjtBQUN6QyxNQUFHRCxJQUFJLENBQUNNLFFBQUwsSUFBaUIsV0FBakIsSUFBZ0NOLElBQUksQ0FBQ00sUUFBTCxJQUFpQixXQUFqRCxJQUFnRU4sSUFBSSxDQUFDTSxRQUFMLElBQWlCLFlBQXBGLEVBQWtHO0FBQzlGTCxJQUFBQSxRQUFRLENBQUMsSUFBRCxFQUFPLElBQVAsQ0FBUjtBQUNILEdBRkQsTUFFTztBQUNIRixJQUFBQSxHQUFHLENBQUNRLG1CQUFKLEdBQTBCLDBFQUExQjtBQUNBTixJQUFBQSxRQUFRLENBQUMsSUFBRCxFQUFPLEtBQVAsQ0FBUjtBQUNIO0FBQ0osQ0FQRDs7QUFTQSxJQUFJTyxNQUFNLEdBQUdkLE1BQU0sQ0FBQztBQUFFRSxFQUFBQSxPQUFPLEVBQUdBLE9BQVo7QUFBcUJTLEVBQUFBLFVBQVUsRUFBR0E7QUFBbEMsQ0FBRCxDQUFuQixDLENBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFFQTs7QUFFQSxJQUFJSSxRQUFRLEdBQUdELE1BQU0sQ0FBQ0UsTUFBUCxDQUFjLENBQ3pCO0FBQUNDLEVBQUFBLElBQUksRUFBRyxRQUFSO0FBQWtCQyxFQUFBQSxRQUFRLEVBQUc7QUFBN0IsQ0FEeUIsRUFFekI7QUFBQ0QsRUFBQUEsSUFBSSxFQUFHLFNBQVI7QUFBbUJDLEVBQUFBLFFBQVEsRUFBRztBQUE5QixDQUZ5QixDQUFkLENBQWY7QUFLQXZCLE1BQU0sQ0FBQ3dCLElBQVAsQ0FBWSxHQUFaLEVBQWlCLENBQUN0QixNQUFELEVBQVNrQixRQUFULENBQWpCLEVBQXFDakIsaUJBQWlCLENBQUNzQixhQUF2RDtBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUIzQixNQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvQWxlc3NhbmRyb19NdXNvbGluby9EZXNrdG9wL2ZpcnN0QVBJL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG5jb25zdCB7IGJvZHksIHF1ZXJ5IH0gPSByZXF1aXJlKCdleHByZXNzLXZhbGlkYXRvci9jaGVjaycpO1xuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcblxuY29uc3QgaXNBdXRoID0gcmVxdWlyZSgnLi4vbWlkZGxld2FyZS9pcy1hdXRoJyk7XG5cbmNvbnN0IGdhbGxlcnlDb250cm9sbGVyID0gcmVxdWlyZSgnLi4vY29udHJvbGxlcnMvZ2FsbGVyeScpO1xuXG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuY29uc3QgbXVsdGVyID0gcmVxdWlyZSgnbXVsdGVyJyk7XG5jb25zdCB1dWlkdjQgPSByZXF1aXJlKCd1dWlkL3Y0Jyk7XG5cbmNvbnN0IHN0b3JhZ2UgPSBtdWx0ZXIuZGlza1N0b3JhZ2Uoe1xuICAgIGRlc3RpbmF0aW9uIDogKHJlcSwgZmlsZSwgY2FsbGJhY2spID0+IHtcbiAgICAgICAgY2FsbGJhY2sobnVsbCwgJ3B1YmxpYy9nYWxsZXJ5Jyk7XG4gICAgfSxcbiAgICBmaWxlbmFtZSA6IChyZXEsIGZpbGUsIGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIC8vY2FsbGJhY2sobnVsbCwgRGF0ZS5ub3coKSArICctJyArIGZpbGUub3JpZ2luYWxuYW1lKTtcbiAgICAgICAgY2FsbGJhY2sobnVsbCwgdXVpZHY0KCkgKyBwYXRoLmV4dG5hbWUoZmlsZS5vcmlnaW5hbG5hbWUpKTtcbiAgICB9LFxufSk7XG5cbmNvbnN0IGZpbGVGaWx0ZXIgPSAoKHJlcSwgZmlsZSwgY2FsbGJhY2spID0+IHtcbiAgICBpZihmaWxlLm1pbWV0eXBlID09ICdpbWFnZS9wbmcnIHx8IGZpbGUubWltZXR5cGUgPT0gJ2ltYWdlL2pwZycgfHwgZmlsZS5taW1ldHlwZSA9PSAnaW1hZ2UvanBlZycpIHtcbiAgICAgICAgY2FsbGJhY2sobnVsbCwgdHJ1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmVxLmZpbGVWYWxpZGF0aW9uRXJyb3IgPSBcIkVzdGVuc2lvbmUgbm9uIGNvbnNlbnRpdGEgc29sbzogJ2ltYWdlL2pwZycgfCAnaW1hZ2UvcG5nJyB8ICdpbWFnZS9qcGVnJ1wiO1xuICAgICAgICBjYWxsYmFjayhudWxsLCBmYWxzZSk7XG4gICAgfVxufSk7XG5cbnZhciB1cGxvYWQgPSBtdWx0ZXIoeyBzdG9yYWdlIDogc3RvcmFnZSwgZmlsZUZpbHRlciA6IGZpbGVGaWx0ZXJ9KTtcblxuLy9OT1QgQVVUSCB8IEFVVEhcbi8vR0VUIEFMTCAvZmVlZC9wb3N0c1xuLy9HRVQgL2ZlZWQvcG9zdC86aWRcblxuLy9QT1NUIC9mZWVkL3Bvc3Rcbi8vUFVUIC9mZWVkL3Bvc3QvOmlkXG4vL0RFTEVURSAvZmVlZC9wb3N0LzppZFxuXG4vL1BPU1QgL2ZlZWQvcG9zdC86aWQvbGlrZVxuXG4vL1BPU1QgL2ZlZWQvcG9zdHNcblxudmFyIGNwVXBsb2FkID0gdXBsb2FkLmZpZWxkcyhbXG4gICAge25hbWUgOiAnYXZhdGFyJywgbWF4Q291bnQgOiAxfSxcbiAgICB7bmFtZSA6ICdnYWxsZXJ5JywgbWF4Q291bnQgOiA4fVxuXSk7XG5cbnJvdXRlci5wb3N0KCcvJywgW2lzQXV0aCwgY3BVcGxvYWRdLCBnYWxsZXJ5Q29udHJvbGxlci5jcmVhdGVHYWxsZXJ5KTtcblxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "gallery.js"
      ],
      "names": [
        "express",
        "require",
        "body",
        "query",
        "router",
        "Router",
        "isAuth",
        "galleryController",
        "path",
        "multer",
        "uuidv4",
        "storage",
        "diskStorage",
        "destination",
        "req",
        "file",
        "callback",
        "filename",
        "extname",
        "originalname",
        "fileFilter",
        "mimetype",
        "fileValidationError",
        "upload",
        "cpUpload",
        "fields",
        "name",
        "maxCount",
        "post",
        "createGallery",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAM;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,IAAkBF,OAAO,CAAC,yBAAD,CAA/B;;AACA,MAAMG,MAAM,GAAGJ,OAAO,CAACK,MAAR,EAAf;;AAEA,MAAMC,MAAM,GAAGL,OAAO,CAAC,uBAAD,CAAtB;;AAEA,MAAMM,iBAAiB,GAAGN,OAAO,CAAC,wBAAD,CAAjC;;AAEA,MAAMO,IAAI,GAAGP,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMQ,MAAM,GAAGR,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMS,MAAM,GAAGT,OAAO,CAAC,SAAD,CAAtB;;AAEA,MAAMU,OAAO,GAAGF,MAAM,CAACG,WAAP,CAAmB;AAC/BC,EAAAA,WAAW,EAAG,CAACC,GAAD,EAAMC,IAAN,EAAYC,QAAZ,KAAyB;AACnCA,IAAAA,QAAQ,CAAC,IAAD,EAAO,gBAAP,CAAR;AACH,GAH8B;AAI/BC,EAAAA,QAAQ,EAAG,CAACH,GAAD,EAAMC,IAAN,EAAYC,QAAZ,KAAyB;AAChC;AACAA,IAAAA,QAAQ,CAAC,IAAD,EAAON,MAAM,KAAKF,IAAI,CAACU,OAAL,CAAaH,IAAI,CAACI,YAAlB,CAAlB,CAAR;AACH;AAP8B,CAAnB,CAAhB;;AAUA,MAAMC,UAAU,GAAI,CAACN,GAAD,EAAMC,IAAN,EAAYC,QAAZ,KAAyB;AACzC,MAAGD,IAAI,CAACM,QAAL,IAAiB,WAAjB,IAAgCN,IAAI,CAACM,QAAL,IAAiB,WAAjD,IAAgEN,IAAI,CAACM,QAAL,IAAiB,YAApF,EAAkG;AAC9FL,IAAAA,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAR;AACH,GAFD,MAEO;AACHF,IAAAA,GAAG,CAACQ,mBAAJ,GAA0B,0EAA1B;AACAN,IAAAA,QAAQ,CAAC,IAAD,EAAO,KAAP,CAAR;AACH;AACJ,CAPD;;AASA,IAAIO,MAAM,GAAGd,MAAM,CAAC;AAAEE,EAAAA,OAAO,EAAGA,OAAZ;AAAqBS,EAAAA,UAAU,EAAGA;AAAlC,CAAD,CAAnB,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;;AAEA,IAAII,QAAQ,GAAGD,MAAM,CAACE,MAAP,CAAc,CACzB;AAACC,EAAAA,IAAI,EAAG,QAAR;AAAkBC,EAAAA,QAAQ,EAAG;AAA7B,CADyB,EAEzB;AAACD,EAAAA,IAAI,EAAG,SAAR;AAAmBC,EAAAA,QAAQ,EAAG;AAA9B,CAFyB,CAAd,CAAf;AAKAvB,MAAM,CAACwB,IAAP,CAAY,GAAZ,EAAiB,CAACtB,MAAD,EAASkB,QAAT,CAAjB,EAAqCjB,iBAAiB,CAACsB,aAAvD;AAEAC,MAAM,CAACC,OAAP,GAAiB3B,MAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes",
      "sourcesContent": [
        "const express = require('express');\nconst { body, query } = require('express-validator/check');\nconst router = express.Router();\n\nconst isAuth = require('../middleware/is-auth');\n\nconst galleryController = require('../controllers/gallery');\n\nconst path = require('path');\nconst multer = require('multer');\nconst uuidv4 = require('uuid/v4');\n\nconst storage = multer.diskStorage({\n    destination : (req, file, callback) => {\n        callback(null, 'public/gallery');\n    },\n    filename : (req, file, callback) => {\n        //callback(null, Date.now() + '-' + file.originalname);\n        callback(null, uuidv4() + path.extname(file.originalname));\n    },\n});\n\nconst fileFilter = ((req, file, callback) => {\n    if(file.mimetype == 'image/png' || file.mimetype == 'image/jpg' || file.mimetype == 'image/jpeg') {\n        callback(null, true);\n    } else {\n        req.fileValidationError = \"Estensione non consentita solo: 'image/jpg' | 'image/png' | 'image/jpeg'\";\n        callback(null, false);\n    }\n});\n\nvar upload = multer({ storage : storage, fileFilter : fileFilter});\n\n//NOT AUTH | AUTH\n//GET ALL /feed/posts\n//GET /feed/post/:id\n\n//POST /feed/post\n//PUT /feed/post/:id\n//DELETE /feed/post/:id\n\n//POST /feed/post/:id/like\n\n//POST /feed/posts\n\nvar cpUpload = upload.fields([\n    {name : 'avatar', maxCount : 1},\n    {name : 'gallery', maxCount : 8}\n]);\n\nrouter.post('/', [isAuth, cpUpload], galleryController.createGallery);\n\nmodule.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1576523278119
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/controllers/gallery.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"plugins\":[],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers/gallery.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers/gallery.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers/gallery.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers",
        "sourceFileName": "gallery.js"
      }
    },
    "ast": null,
    "code": "const path = require('path');\n\nexports.createGallery = (req, res, next) => {\n  res.status(201).json({\n    messages: 'Success Operation'\n  });\n\n  if (req.files.length == 0) {\n    return res.status(422).json({\n      message: req.fileValidationError ? req.fileValidationError : 'Nessun immagine allegata'\n    });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhbGxlcnkuanMiXSwibmFtZXMiOlsicGF0aCIsInJlcXVpcmUiLCJleHBvcnRzIiwiY3JlYXRlR2FsbGVyeSIsInJlcSIsInJlcyIsIm5leHQiLCJzdGF0dXMiLCJqc29uIiwibWVzc2FnZXMiLCJmaWxlcyIsImxlbmd0aCIsIm1lc3NhZ2UiLCJmaWxlVmFsaWRhdGlvbkVycm9yIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxJQUFJLEdBQUdDLE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUVBQyxPQUFPLENBQUNDLGFBQVIsR0FBd0IsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsS0FBb0I7QUFFeENELEVBQUFBLEdBQUcsQ0FBQ0UsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ2pCQyxJQUFBQSxRQUFRLEVBQUc7QUFETSxHQUFyQjs7QUFJQSxNQUFHTCxHQUFHLENBQUNNLEtBQUosQ0FBVUMsTUFBVixJQUFvQixDQUF2QixFQUEwQjtBQUN0QixXQUFPTixHQUFHLENBQUNFLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUN4QkksTUFBQUEsT0FBTyxFQUFHUixHQUFHLENBQUNTLG1CQUFKLEdBQTBCVCxHQUFHLENBQUNTLG1CQUE5QixHQUFvRDtBQUR0QyxLQUFyQixDQUFQO0FBR0g7QUFFSixDQVpEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9BbGVzc2FuZHJvX011c29saW5vL0Rlc2t0b3AvZmlyc3RBUEkvY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuXG5leHBvcnRzLmNyZWF0ZUdhbGxlcnkgPSAocmVxLCByZXMsIG5leHQpID0+IHtcblxuICAgIHJlcy5zdGF0dXMoMjAxKS5qc29uKHtcbiAgICAgICAgbWVzc2FnZXMgOiAnU3VjY2VzcyBPcGVyYXRpb24nLFxuICAgIH0pO1xuXG4gICAgaWYocmVxLmZpbGVzLmxlbmd0aCA9PSAwKSB7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQyMikuanNvbih7XG4gICAgICAgICAgICBtZXNzYWdlIDogcmVxLmZpbGVWYWxpZGF0aW9uRXJyb3IgPyByZXEuZmlsZVZhbGlkYXRpb25FcnJvciA6ICdOZXNzdW4gaW1tYWdpbmUgYWxsZWdhdGEnLFxuICAgICAgICB9KTtcbiAgICB9XG5cbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "gallery.js"
      ],
      "names": [
        "path",
        "require",
        "exports",
        "createGallery",
        "req",
        "res",
        "next",
        "status",
        "json",
        "messages",
        "files",
        "length",
        "message",
        "fileValidationError"
      ],
      "mappings": "AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AAEAC,OAAO,CAACC,aAAR,GAAwB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAExCD,EAAAA,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,IAAAA,QAAQ,EAAG;AADM,GAArB;;AAIA,MAAGL,GAAG,CAACM,KAAJ,CAAUC,MAAV,IAAoB,CAAvB,EAA0B;AACtB,WAAON,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBI,MAAAA,OAAO,EAAGR,GAAG,CAACS,mBAAJ,GAA0BT,GAAG,CAACS,mBAA9B,GAAoD;AADtC,KAArB,CAAP;AAGH;AAEJ,CAZD",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers",
      "sourcesContent": [
        "const path = require('path');\n\nexports.createGallery = (req, res, next) => {\n\n    res.status(201).json({\n        messages : 'Success Operation',\n    });\n\n    if(req.files.length == 0) {\n        return res.status(422).json({\n            message : req.fileValidationError ? req.fileValidationError : 'Nessun immagine allegata',\n        });\n    }\n\n};"
      ]
    },
    "sourceType": "module",
    "mtime": 1576522843266
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/models/artistic_event.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/models/artistic_event.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/firstAPI/models/artistic_event.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/models/artistic_event.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/models",
        "sourceFileName": "artistic_event.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar Sequelize = require('sequelize');\n\nvar sequelize = require('../utils/database');\n\nvar Artistic_Event = sequelize.define('artistic_event', {\n  id: {\n    type: Sequelize.INTEGER,\n    autoIncrement: true,\n    allowNull: false,\n    primaryKey: true\n  },\n  title: {\n    type: Sequelize.STRING,\n    allowNull: false\n  },\n  date: {\n    type: Sequelize.DATE,\n    allowNull: true\n  },\n  factsheet: {\n    //it must include the date\n    type: Sequelize.STRING,\n    allowNull: true\n  },\n  \"abstract\": {\n    type: Sequelize.STRING,\n    allowNull: true\n  },\n  image: {\n    //photo gallery\n    type: Sequelize.STRING,\n    allowNull: true\n  }\n});\nmodule.exports = Artistic_Event;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFydGlzdGljX2V2ZW50LmpzIl0sIm5hbWVzIjpbIlNlcXVlbGl6ZSIsInJlcXVpcmUiLCJzZXF1ZWxpemUiLCJBcnRpc3RpY19FdmVudCIsImRlZmluZSIsImlkIiwidHlwZSIsIklOVEVHRVIiLCJhdXRvSW5jcmVtZW50IiwiYWxsb3dOdWxsIiwicHJpbWFyeUtleSIsInRpdGxlIiwiU1RSSU5HIiwiZGF0ZSIsIkRBVEUiLCJmYWN0c2hlZXQiLCJpbWFnZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsU0FBUyxHQUFHQyxPQUFPLENBQUMsV0FBRCxDQUF6Qjs7QUFFQSxJQUFNQyxTQUFTLEdBQUdELE9BQU8sQ0FBQyxtQkFBRCxDQUF6Qjs7QUFFQSxJQUFNRSxjQUFjLEdBQUdELFNBQVMsQ0FBQ0UsTUFBVixDQUFpQixnQkFBakIsRUFBbUM7QUFDdERDLEVBQUFBLEVBQUUsRUFBRztBQUNEQyxJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ08sT0FEaEI7QUFFREMsSUFBQUEsYUFBYSxFQUFHLElBRmY7QUFHREMsSUFBQUEsU0FBUyxFQUFHLEtBSFg7QUFJREMsSUFBQUEsVUFBVSxFQUFHO0FBSlosR0FEaUQ7QUFPdERDLEVBQUFBLEtBQUssRUFBRztBQUNKTCxJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ1ksTUFEYjtBQUVKSCxJQUFBQSxTQUFTLEVBQUc7QUFGUixHQVA4QztBQVd0REksRUFBQUEsSUFBSSxFQUFHO0FBQ0hQLElBQUFBLElBQUksRUFBR04sU0FBUyxDQUFDYyxJQURkO0FBRUhMLElBQUFBLFNBQVMsRUFBRztBQUZULEdBWCtDO0FBZXRETSxFQUFBQSxTQUFTLEVBQUc7QUFBRTtBQUNWVCxJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ1ksTUFEVDtBQUVSSCxJQUFBQSxTQUFTLEVBQUc7QUFGSixHQWYwQztBQW1CdEQsY0FBVztBQUNQSCxJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ1ksTUFEVjtBQUVQSCxJQUFBQSxTQUFTLEVBQUc7QUFGTCxHQW5CMkM7QUF1QnRETyxFQUFBQSxLQUFLLEVBQUc7QUFBRTtBQUNOVixJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ1ksTUFEYjtBQUVKSCxJQUFBQSxTQUFTLEVBQUc7QUFGUjtBQXZCOEMsQ0FBbkMsQ0FBdkI7QUE2QkFRLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmYsY0FBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL0FsZXNzYW5kcm9fTXVzb2xpbm8vRGVza3RvcC9maXJzdEFQSS9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBTZXF1ZWxpemUgPSByZXF1aXJlKCdzZXF1ZWxpemUnKTtcblxuY29uc3Qgc2VxdWVsaXplID0gcmVxdWlyZSgnLi4vdXRpbHMvZGF0YWJhc2UnKTtcblxuY29uc3QgQXJ0aXN0aWNfRXZlbnQgPSBzZXF1ZWxpemUuZGVmaW5lKCdhcnRpc3RpY19ldmVudCcsIHtcbiAgICBpZCA6IHtcbiAgICAgICAgdHlwZSA6IFNlcXVlbGl6ZS5JTlRFR0VSLFxuICAgICAgICBhdXRvSW5jcmVtZW50IDogdHJ1ZSxcbiAgICAgICAgYWxsb3dOdWxsIDogZmFsc2UsXG4gICAgICAgIHByaW1hcnlLZXkgOiB0cnVlXG4gICAgfSxcbiAgICB0aXRsZSA6IHtcbiAgICAgICAgdHlwZSA6IFNlcXVlbGl6ZS5TVFJJTkcsXG4gICAgICAgIGFsbG93TnVsbCA6IGZhbHNlLFxuICAgIH0sXG4gICAgZGF0ZSA6IHtcbiAgICAgICAgdHlwZSA6IFNlcXVlbGl6ZS5EQVRFLFxuICAgICAgICBhbGxvd051bGwgOiB0cnVlLFxuICAgIH0sXG4gICAgZmFjdHNoZWV0IDogeyAvL2l0IG11c3QgaW5jbHVkZSB0aGUgZGF0ZVxuICAgICAgICB0eXBlIDogU2VxdWVsaXplLlNUUklORyxcbiAgICAgICAgYWxsb3dOdWxsIDogdHJ1ZSxcbiAgICB9LFxuICAgIGFic3RyYWN0IDoge1xuICAgICAgICB0eXBlIDogU2VxdWVsaXplLlNUUklORyxcbiAgICAgICAgYWxsb3dOdWxsIDogdHJ1ZSxcbiAgICB9LFxuICAgIGltYWdlIDogeyAvL3Bob3RvIGdhbGxlcnlcbiAgICAgICAgdHlwZSA6IFNlcXVlbGl6ZS5TVFJJTkcsXG4gICAgICAgIGFsbG93TnVsbCA6IHRydWVcbiAgICB9XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBBcnRpc3RpY19FdmVudDsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "artistic_event.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "sequelize",
        "Artistic_Event",
        "define",
        "id",
        "type",
        "INTEGER",
        "autoIncrement",
        "allowNull",
        "primaryKey",
        "title",
        "STRING",
        "date",
        "DATE",
        "factsheet",
        "image",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,IAAMC,SAAS,GAAGD,OAAO,CAAC,mBAAD,CAAzB;;AAEA,IAAME,cAAc,GAAGD,SAAS,CAACE,MAAV,CAAiB,gBAAjB,EAAmC;AACtDC,EAAAA,EAAE,EAAG;AACDC,IAAAA,IAAI,EAAGN,SAAS,CAACO,OADhB;AAEDC,IAAAA,aAAa,EAAG,IAFf;AAGDC,IAAAA,SAAS,EAAG,KAHX;AAIDC,IAAAA,UAAU,EAAG;AAJZ,GADiD;AAOtDC,EAAAA,KAAK,EAAG;AACJL,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADb;AAEJH,IAAAA,SAAS,EAAG;AAFR,GAP8C;AAWtDI,EAAAA,IAAI,EAAG;AACHP,IAAAA,IAAI,EAAGN,SAAS,CAACc,IADd;AAEHL,IAAAA,SAAS,EAAG;AAFT,GAX+C;AAetDM,EAAAA,SAAS,EAAG;AAAE;AACVT,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADT;AAERH,IAAAA,SAAS,EAAG;AAFJ,GAf0C;AAmBtD,cAAW;AACPH,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADV;AAEPH,IAAAA,SAAS,EAAG;AAFL,GAnB2C;AAuBtDO,EAAAA,KAAK,EAAG;AAAE;AACNV,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADb;AAEJH,IAAAA,SAAS,EAAG;AAFR;AAvB8C,CAAnC,CAAvB;AA6BAQ,MAAM,CAACC,OAAP,GAAiBf,cAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/models",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst Artistic_Event = sequelize.define('artistic_event', {\n    id : {\n        type : Sequelize.INTEGER,\n        autoIncrement : true,\n        allowNull : false,\n        primaryKey : true\n    },\n    title : {\n        type : Sequelize.STRING,\n        allowNull : false,\n    },\n    date : {\n        type : Sequelize.DATE,\n        allowNull : true,\n    },\n    factsheet : { //it must include the date\n        type : Sequelize.STRING,\n        allowNull : true,\n    },\n    abstract : {\n        type : Sequelize.STRING,\n        allowNull : true,\n    },\n    image : { //photo gallery\n        type : Sequelize.STRING,\n        allowNull : true\n    }\n});\n\nmodule.exports = Artistic_Event;"
      ]
    },
    "sourceType": "script",
    "mtime": 1576864510245
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/models/performer.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/models/performer.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/firstAPI/models/performer.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/models/performer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/models",
        "sourceFileName": "performer.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar Sequelize = require('sequelize');\n\nvar sequelize = require('../utils/database');\n\nvar Performer = sequelize.define('performer', {\n  id: {\n    type: Sequelize.INTEGER,\n    autoIncrement: true,\n    allowNull: false,\n    primaryKey: true\n  },\n  name: {\n    type: Sequelize.STRING,\n    allowNull: false\n  },\n  company_members: {\n    type: Sequelize.STRING,\n    allowNull: false\n  },\n  current_affiliation: {\n    type: Sequelize.STRING,\n    allowNull: true\n  },\n  main_achievements: {\n    type: Sequelize.STRING,\n    allowNull: true\n  },\n  image: {\n    //photo gallery\n    type: Sequelize.STRING,\n    allowNull: true\n  },\n  details: {\n    type: Sequelize.STRING,\n    allowNull: true\n  },\n  isCompany: {\n    type: Sequelize.BOOLEAN,\n    allowNull: true\n  }\n});\nmodule.exports = Performer;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBlcmZvcm1lci5qcyJdLCJuYW1lcyI6WyJTZXF1ZWxpemUiLCJyZXF1aXJlIiwic2VxdWVsaXplIiwiUGVyZm9ybWVyIiwiZGVmaW5lIiwiaWQiLCJ0eXBlIiwiSU5URUdFUiIsImF1dG9JbmNyZW1lbnQiLCJhbGxvd051bGwiLCJwcmltYXJ5S2V5IiwibmFtZSIsIlNUUklORyIsImNvbXBhbnlfbWVtYmVycyIsImN1cnJlbnRfYWZmaWxpYXRpb24iLCJtYWluX2FjaGlldmVtZW50cyIsImltYWdlIiwiZGV0YWlscyIsImlzQ29tcGFueSIsIkJPT0xFQU4iLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLFNBQVMsR0FBR0MsT0FBTyxDQUFDLFdBQUQsQ0FBekI7O0FBRUEsSUFBTUMsU0FBUyxHQUFHRCxPQUFPLENBQUMsbUJBQUQsQ0FBekI7O0FBRUEsSUFBTUUsU0FBUyxHQUFHRCxTQUFTLENBQUNFLE1BQVYsQ0FBaUIsV0FBakIsRUFBOEI7QUFDNUNDLEVBQUFBLEVBQUUsRUFBRztBQUNEQyxJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ08sT0FEaEI7QUFFREMsSUFBQUEsYUFBYSxFQUFHLElBRmY7QUFHREMsSUFBQUEsU0FBUyxFQUFHLEtBSFg7QUFJREMsSUFBQUEsVUFBVSxFQUFHO0FBSlosR0FEdUM7QUFPNUNDLEVBQUFBLElBQUksRUFBRztBQUNITCxJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ1ksTUFEZDtBQUVISCxJQUFBQSxTQUFTLEVBQUc7QUFGVCxHQVBxQztBQVc1Q0ksRUFBQUEsZUFBZSxFQUFHO0FBQ2RQLElBQUFBLElBQUksRUFBR04sU0FBUyxDQUFDWSxNQURIO0FBRWRILElBQUFBLFNBQVMsRUFBRztBQUZFLEdBWDBCO0FBZTVDSyxFQUFBQSxtQkFBbUIsRUFBRztBQUNsQlIsSUFBQUEsSUFBSSxFQUFHTixTQUFTLENBQUNZLE1BREM7QUFFbEJILElBQUFBLFNBQVMsRUFBRztBQUZNLEdBZnNCO0FBbUI1Q00sRUFBQUEsaUJBQWlCLEVBQUc7QUFDaEJULElBQUFBLElBQUksRUFBR04sU0FBUyxDQUFDWSxNQUREO0FBRWhCSCxJQUFBQSxTQUFTLEVBQUc7QUFGSSxHQW5Cd0I7QUF1QjVDTyxFQUFBQSxLQUFLLEVBQUc7QUFBRTtBQUNOVixJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ1ksTUFEYjtBQUVKSCxJQUFBQSxTQUFTLEVBQUc7QUFGUixHQXZCb0M7QUEyQjVDUSxFQUFBQSxPQUFPLEVBQUc7QUFDTlgsSUFBQUEsSUFBSSxFQUFHTixTQUFTLENBQUNZLE1BRFg7QUFFTkgsSUFBQUEsU0FBUyxFQUFHO0FBRk4sR0EzQmtDO0FBK0I1Q1MsRUFBQUEsU0FBUyxFQUFHO0FBQ1JaLElBQUFBLElBQUksRUFBR04sU0FBUyxDQUFDbUIsT0FEVDtBQUVSVixJQUFBQSxTQUFTLEVBQUc7QUFGSjtBQS9CZ0MsQ0FBOUIsQ0FBbEI7QUFxQ0FXLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmxCLFNBQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9BbGVzc2FuZHJvX011c29saW5vL0Rlc2t0b3AvZmlyc3RBUEkvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU2VxdWVsaXplID0gcmVxdWlyZSgnc2VxdWVsaXplJyk7XG5cbmNvbnN0IHNlcXVlbGl6ZSA9IHJlcXVpcmUoJy4uL3V0aWxzL2RhdGFiYXNlJyk7XG5cbmNvbnN0IFBlcmZvcm1lciA9IHNlcXVlbGl6ZS5kZWZpbmUoJ3BlcmZvcm1lcicsIHtcbiAgICBpZCA6IHtcbiAgICAgICAgdHlwZSA6IFNlcXVlbGl6ZS5JTlRFR0VSLFxuICAgICAgICBhdXRvSW5jcmVtZW50IDogdHJ1ZSxcbiAgICAgICAgYWxsb3dOdWxsIDogZmFsc2UsXG4gICAgICAgIHByaW1hcnlLZXkgOiB0cnVlXG4gICAgfSxcbiAgICBuYW1lIDoge1xuICAgICAgICB0eXBlIDogU2VxdWVsaXplLlNUUklORyxcbiAgICAgICAgYWxsb3dOdWxsIDogZmFsc2UsXG4gICAgfSxcbiAgICBjb21wYW55X21lbWJlcnMgOiB7XG4gICAgICAgIHR5cGUgOiBTZXF1ZWxpemUuU1RSSU5HLFxuICAgICAgICBhbGxvd051bGwgOiBmYWxzZSxcbiAgICB9LFxuICAgIGN1cnJlbnRfYWZmaWxpYXRpb24gOiB7XG4gICAgICAgIHR5cGUgOiBTZXF1ZWxpemUuU1RSSU5HLFxuICAgICAgICBhbGxvd051bGwgOiB0cnVlLFxuICAgIH0sXG4gICAgbWFpbl9hY2hpZXZlbWVudHMgOiB7XG4gICAgICAgIHR5cGUgOiBTZXF1ZWxpemUuU1RSSU5HLFxuICAgICAgICBhbGxvd051bGwgOiB0cnVlLFxuICAgIH0sXG4gICAgaW1hZ2UgOiB7IC8vcGhvdG8gZ2FsbGVyeVxuICAgICAgICB0eXBlIDogU2VxdWVsaXplLlNUUklORyxcbiAgICAgICAgYWxsb3dOdWxsIDogdHJ1ZVxuICAgIH0sXG4gICAgZGV0YWlscyA6IHtcbiAgICAgICAgdHlwZSA6IFNlcXVlbGl6ZS5TVFJJTkcsXG4gICAgICAgIGFsbG93TnVsbCA6IHRydWUsXG4gICAgfSxcbiAgICBpc0NvbXBhbnkgOiB7XG4gICAgICAgIHR5cGUgOiBTZXF1ZWxpemUuQk9PTEVBTixcbiAgICAgICAgYWxsb3dOdWxsIDogdHJ1ZSxcbiAgICB9XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBQZXJmb3JtZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "performer.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "sequelize",
        "Performer",
        "define",
        "id",
        "type",
        "INTEGER",
        "autoIncrement",
        "allowNull",
        "primaryKey",
        "name",
        "STRING",
        "company_members",
        "current_affiliation",
        "main_achievements",
        "image",
        "details",
        "isCompany",
        "BOOLEAN",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,IAAMC,SAAS,GAAGD,OAAO,CAAC,mBAAD,CAAzB;;AAEA,IAAME,SAAS,GAAGD,SAAS,CAACE,MAAV,CAAiB,WAAjB,EAA8B;AAC5CC,EAAAA,EAAE,EAAG;AACDC,IAAAA,IAAI,EAAGN,SAAS,CAACO,OADhB;AAEDC,IAAAA,aAAa,EAAG,IAFf;AAGDC,IAAAA,SAAS,EAAG,KAHX;AAIDC,IAAAA,UAAU,EAAG;AAJZ,GADuC;AAO5CC,EAAAA,IAAI,EAAG;AACHL,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADd;AAEHH,IAAAA,SAAS,EAAG;AAFT,GAPqC;AAW5CI,EAAAA,eAAe,EAAG;AACdP,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADH;AAEdH,IAAAA,SAAS,EAAG;AAFE,GAX0B;AAe5CK,EAAAA,mBAAmB,EAAG;AAClBR,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADC;AAElBH,IAAAA,SAAS,EAAG;AAFM,GAfsB;AAmB5CM,EAAAA,iBAAiB,EAAG;AAChBT,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADD;AAEhBH,IAAAA,SAAS,EAAG;AAFI,GAnBwB;AAuB5CO,EAAAA,KAAK,EAAG;AAAE;AACNV,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADb;AAEJH,IAAAA,SAAS,EAAG;AAFR,GAvBoC;AA2B5CQ,EAAAA,OAAO,EAAG;AACNX,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADX;AAENH,IAAAA,SAAS,EAAG;AAFN,GA3BkC;AA+B5CS,EAAAA,SAAS,EAAG;AACRZ,IAAAA,IAAI,EAAGN,SAAS,CAACmB,OADT;AAERV,IAAAA,SAAS,EAAG;AAFJ;AA/BgC,CAA9B,CAAlB;AAqCAW,MAAM,CAACC,OAAP,GAAiBlB,SAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/models",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst Performer = sequelize.define('performer', {\n    id : {\n        type : Sequelize.INTEGER,\n        autoIncrement : true,\n        allowNull : false,\n        primaryKey : true\n    },\n    name : {\n        type : Sequelize.STRING,\n        allowNull : false,\n    },\n    company_members : {\n        type : Sequelize.STRING,\n        allowNull : false,\n    },\n    current_affiliation : {\n        type : Sequelize.STRING,\n        allowNull : true,\n    },\n    main_achievements : {\n        type : Sequelize.STRING,\n        allowNull : true,\n    },\n    image : { //photo gallery\n        type : Sequelize.STRING,\n        allowNull : true\n    },\n    details : {\n        type : Sequelize.STRING,\n        allowNull : true,\n    },\n    isCompany : {\n        type : Sequelize.BOOLEAN,\n        allowNull : true,\n    }\n});\n\nmodule.exports = Performer;"
      ]
    },
    "sourceType": "script",
    "mtime": 1576864463724
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/models/seminary.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/models/seminary.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/firstAPI/models/seminary.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/models/seminary.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/models",
        "sourceFileName": "seminary.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar Sequelize = require('sequelize');\n\nvar sequelize = require('../utils/database');\n\nvar Seminary = sequelize.define('seminary', {\n  id: {\n    type: Sequelize.INTEGER,\n    autoIncrement: true,\n    allowNull: false,\n    primaryKey: true\n  },\n  title: {\n    type: Sequelize.STRING,\n    allowNull: false\n  },\n  date: {\n    type: Sequelize.DATE,\n    allowNull: true\n  },\n  location: {\n    type: Sequelize.STRING,\n    allowNull: true\n  }\n});\nmodule.exports = Seminary;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlbWluYXJ5LmpzIl0sIm5hbWVzIjpbIlNlcXVlbGl6ZSIsInJlcXVpcmUiLCJzZXF1ZWxpemUiLCJTZW1pbmFyeSIsImRlZmluZSIsImlkIiwidHlwZSIsIklOVEVHRVIiLCJhdXRvSW5jcmVtZW50IiwiYWxsb3dOdWxsIiwicHJpbWFyeUtleSIsInRpdGxlIiwiU1RSSU5HIiwiZGF0ZSIsIkRBVEUiLCJsb2NhdGlvbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsU0FBUyxHQUFHQyxPQUFPLENBQUMsV0FBRCxDQUF6Qjs7QUFFQSxJQUFNQyxTQUFTLEdBQUdELE9BQU8sQ0FBQyxtQkFBRCxDQUF6Qjs7QUFFQSxJQUFNRSxRQUFRLEdBQUdELFNBQVMsQ0FBQ0UsTUFBVixDQUFpQixVQUFqQixFQUE2QjtBQUMxQ0MsRUFBQUEsRUFBRSxFQUFHO0FBQ0RDLElBQUFBLElBQUksRUFBR04sU0FBUyxDQUFDTyxPQURoQjtBQUVEQyxJQUFBQSxhQUFhLEVBQUcsSUFGZjtBQUdEQyxJQUFBQSxTQUFTLEVBQUcsS0FIWDtBQUlEQyxJQUFBQSxVQUFVLEVBQUc7QUFKWixHQURxQztBQU8xQ0MsRUFBQUEsS0FBSyxFQUFHO0FBQ0pMLElBQUFBLElBQUksRUFBR04sU0FBUyxDQUFDWSxNQURiO0FBRUpILElBQUFBLFNBQVMsRUFBRztBQUZSLEdBUGtDO0FBVzFDSSxFQUFBQSxJQUFJLEVBQUc7QUFDSFAsSUFBQUEsSUFBSSxFQUFHTixTQUFTLENBQUNjLElBRGQ7QUFFSEwsSUFBQUEsU0FBUyxFQUFHO0FBRlQsR0FYbUM7QUFlMUNNLEVBQUFBLFFBQVEsRUFBRztBQUNQVCxJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ1ksTUFEVjtBQUVQSCxJQUFBQSxTQUFTLEVBQUc7QUFGTDtBQWYrQixDQUE3QixDQUFqQjtBQXFCQU8sTUFBTSxDQUFDQyxPQUFQLEdBQWlCZCxRQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvQWxlc3NhbmRyb19NdXNvbGluby9EZXNrdG9wL2ZpcnN0QVBJL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFNlcXVlbGl6ZSA9IHJlcXVpcmUoJ3NlcXVlbGl6ZScpO1xuXG5jb25zdCBzZXF1ZWxpemUgPSByZXF1aXJlKCcuLi91dGlscy9kYXRhYmFzZScpO1xuXG5jb25zdCBTZW1pbmFyeSA9IHNlcXVlbGl6ZS5kZWZpbmUoJ3NlbWluYXJ5Jywge1xuICAgIGlkIDoge1xuICAgICAgICB0eXBlIDogU2VxdWVsaXplLklOVEVHRVIsXG4gICAgICAgIGF1dG9JbmNyZW1lbnQgOiB0cnVlLFxuICAgICAgICBhbGxvd051bGwgOiBmYWxzZSxcbiAgICAgICAgcHJpbWFyeUtleSA6IHRydWVcbiAgICB9LFxuICAgIHRpdGxlIDoge1xuICAgICAgICB0eXBlIDogU2VxdWVsaXplLlNUUklORyxcbiAgICAgICAgYWxsb3dOdWxsIDogZmFsc2UsXG4gICAgfSxcbiAgICBkYXRlIDoge1xuICAgICAgICB0eXBlIDogU2VxdWVsaXplLkRBVEUsXG4gICAgICAgIGFsbG93TnVsbCA6IHRydWUsXG4gICAgfSxcbiAgICBsb2NhdGlvbiA6IHtcbiAgICAgICAgdHlwZSA6IFNlcXVlbGl6ZS5TVFJJTkcsXG4gICAgICAgIGFsbG93TnVsbCA6IHRydWVcbiAgICB9XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBTZW1pbmFyeTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "seminary.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "sequelize",
        "Seminary",
        "define",
        "id",
        "type",
        "INTEGER",
        "autoIncrement",
        "allowNull",
        "primaryKey",
        "title",
        "STRING",
        "date",
        "DATE",
        "location",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,IAAMC,SAAS,GAAGD,OAAO,CAAC,mBAAD,CAAzB;;AAEA,IAAME,QAAQ,GAAGD,SAAS,CAACE,MAAV,CAAiB,UAAjB,EAA6B;AAC1CC,EAAAA,EAAE,EAAG;AACDC,IAAAA,IAAI,EAAGN,SAAS,CAACO,OADhB;AAEDC,IAAAA,aAAa,EAAG,IAFf;AAGDC,IAAAA,SAAS,EAAG,KAHX;AAIDC,IAAAA,UAAU,EAAG;AAJZ,GADqC;AAO1CC,EAAAA,KAAK,EAAG;AACJL,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADb;AAEJH,IAAAA,SAAS,EAAG;AAFR,GAPkC;AAW1CI,EAAAA,IAAI,EAAG;AACHP,IAAAA,IAAI,EAAGN,SAAS,CAACc,IADd;AAEHL,IAAAA,SAAS,EAAG;AAFT,GAXmC;AAe1CM,EAAAA,QAAQ,EAAG;AACPT,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADV;AAEPH,IAAAA,SAAS,EAAG;AAFL;AAf+B,CAA7B,CAAjB;AAqBAO,MAAM,CAACC,OAAP,GAAiBd,QAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/models",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst Seminary = sequelize.define('seminary', {\n    id : {\n        type : Sequelize.INTEGER,\n        autoIncrement : true,\n        allowNull : false,\n        primaryKey : true\n    },\n    title : {\n        type : Sequelize.STRING,\n        allowNull : false,\n    },\n    date : {\n        type : Sequelize.DATE,\n        allowNull : true,\n    },\n    location : {\n        type : Sequelize.STRING,\n        allowNull : true\n    }\n});\n\nmodule.exports = Seminary;"
      ]
    },
    "sourceType": "script",
    "mtime": 1577443492096
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/models/similarity.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/models/similarity.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/firstAPI/models/similarity.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/models/similarity.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/models",
        "sourceFileName": "similarity.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar Sequelize = require('sequelize');\n\nvar sequelize = require('../utils/database');\n\nvar Similarity = sequelize.define('similarity', {\n  id: {\n    type: Sequelize.INTEGER,\n    autoIncrement: true,\n    allowNull: false,\n    primaryKey: true\n  }\n});\nmodule.exports = Similarity;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpbWlsYXJpdHkuanMiXSwibmFtZXMiOlsiU2VxdWVsaXplIiwicmVxdWlyZSIsInNlcXVlbGl6ZSIsIlNpbWlsYXJpdHkiLCJkZWZpbmUiLCJpZCIsInR5cGUiLCJJTlRFR0VSIiwiYXV0b0luY3JlbWVudCIsImFsbG93TnVsbCIsInByaW1hcnlLZXkiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLFNBQVMsR0FBR0MsT0FBTyxDQUFDLFdBQUQsQ0FBekI7O0FBRUEsSUFBTUMsU0FBUyxHQUFHRCxPQUFPLENBQUMsbUJBQUQsQ0FBekI7O0FBRUEsSUFBTUUsVUFBVSxHQUFHRCxTQUFTLENBQUNFLE1BQVYsQ0FBaUIsWUFBakIsRUFBK0I7QUFDOUNDLEVBQUFBLEVBQUUsRUFBRztBQUNEQyxJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ08sT0FEaEI7QUFFREMsSUFBQUEsYUFBYSxFQUFHLElBRmY7QUFHREMsSUFBQUEsU0FBUyxFQUFHLEtBSFg7QUFJREMsSUFBQUEsVUFBVSxFQUFHO0FBSlo7QUFEeUMsQ0FBL0IsQ0FBbkI7QUFTQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCVCxVQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvQWxlc3NhbmRyb19NdXNvbGluby9EZXNrdG9wL2ZpcnN0QVBJL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFNlcXVlbGl6ZSA9IHJlcXVpcmUoJ3NlcXVlbGl6ZScpO1xuXG5jb25zdCBzZXF1ZWxpemUgPSByZXF1aXJlKCcuLi91dGlscy9kYXRhYmFzZScpO1xuXG5jb25zdCBTaW1pbGFyaXR5ID0gc2VxdWVsaXplLmRlZmluZSgnc2ltaWxhcml0eScsIHtcbiAgICBpZCA6IHtcbiAgICAgICAgdHlwZSA6IFNlcXVlbGl6ZS5JTlRFR0VSLFxuICAgICAgICBhdXRvSW5jcmVtZW50IDogdHJ1ZSxcbiAgICAgICAgYWxsb3dOdWxsIDogZmFsc2UsXG4gICAgICAgIHByaW1hcnlLZXkgOiB0cnVlXG4gICAgfVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gU2ltaWxhcml0eTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "similarity.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "sequelize",
        "Similarity",
        "define",
        "id",
        "type",
        "INTEGER",
        "autoIncrement",
        "allowNull",
        "primaryKey",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,IAAMC,SAAS,GAAGD,OAAO,CAAC,mBAAD,CAAzB;;AAEA,IAAME,UAAU,GAAGD,SAAS,CAACE,MAAV,CAAiB,YAAjB,EAA+B;AAC9CC,EAAAA,EAAE,EAAG;AACDC,IAAAA,IAAI,EAAGN,SAAS,CAACO,OADhB;AAEDC,IAAAA,aAAa,EAAG,IAFf;AAGDC,IAAAA,SAAS,EAAG,KAHX;AAIDC,IAAAA,UAAU,EAAG;AAJZ;AADyC,CAA/B,CAAnB;AASAC,MAAM,CAACC,OAAP,GAAiBT,UAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/models",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst Similarity = sequelize.define('similarity', {\n    id : {\n        type : Sequelize.INTEGER,\n        autoIncrement : true,\n        allowNull : false,\n        primaryKey : true\n    }\n});\n\nmodule.exports = Similarity;"
      ]
    },
    "sourceType": "script",
    "mtime": 1576867651255
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/models/performance.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/models/performance.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/firstAPI/models/performance.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/models/performance.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/models",
        "sourceFileName": "performance.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar Sequelize = require('sequelize');\n\nvar sequelize = require('../utils/database');\n\nvar Performance = sequelize.define('performance', {\n  id: {\n    type: Sequelize.INTEGER,\n    autoIncrement: true,\n    allowNull: false,\n    primaryKey: true\n  }\n});\nmodule.exports = Performance;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBlcmZvcm1hbmNlLmpzIl0sIm5hbWVzIjpbIlNlcXVlbGl6ZSIsInJlcXVpcmUiLCJzZXF1ZWxpemUiLCJQZXJmb3JtYW5jZSIsImRlZmluZSIsImlkIiwidHlwZSIsIklOVEVHRVIiLCJhdXRvSW5jcmVtZW50IiwiYWxsb3dOdWxsIiwicHJpbWFyeUtleSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsU0FBUyxHQUFHQyxPQUFPLENBQUMsV0FBRCxDQUF6Qjs7QUFFQSxJQUFNQyxTQUFTLEdBQUdELE9BQU8sQ0FBQyxtQkFBRCxDQUF6Qjs7QUFFQSxJQUFNRSxXQUFXLEdBQUdELFNBQVMsQ0FBQ0UsTUFBVixDQUFpQixhQUFqQixFQUFnQztBQUNoREMsRUFBQUEsRUFBRSxFQUFHO0FBQ0RDLElBQUFBLElBQUksRUFBR04sU0FBUyxDQUFDTyxPQURoQjtBQUVEQyxJQUFBQSxhQUFhLEVBQUcsSUFGZjtBQUdEQyxJQUFBQSxTQUFTLEVBQUcsS0FIWDtBQUlEQyxJQUFBQSxVQUFVLEVBQUc7QUFKWjtBQUQyQyxDQUFoQyxDQUFwQjtBQVNBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJULFdBQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9BbGVzc2FuZHJvX011c29saW5vL0Rlc2t0b3AvZmlyc3RBUEkvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU2VxdWVsaXplID0gcmVxdWlyZSgnc2VxdWVsaXplJyk7XG5cbmNvbnN0IHNlcXVlbGl6ZSA9IHJlcXVpcmUoJy4uL3V0aWxzL2RhdGFiYXNlJyk7XG5cbmNvbnN0IFBlcmZvcm1hbmNlID0gc2VxdWVsaXplLmRlZmluZSgncGVyZm9ybWFuY2UnLCB7XG4gICAgaWQgOiB7XG4gICAgICAgIHR5cGUgOiBTZXF1ZWxpemUuSU5URUdFUixcbiAgICAgICAgYXV0b0luY3JlbWVudCA6IHRydWUsXG4gICAgICAgIGFsbG93TnVsbCA6IGZhbHNlLFxuICAgICAgICBwcmltYXJ5S2V5IDogdHJ1ZVxuICAgIH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFBlcmZvcm1hbmNlOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "performance.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "sequelize",
        "Performance",
        "define",
        "id",
        "type",
        "INTEGER",
        "autoIncrement",
        "allowNull",
        "primaryKey",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,IAAMC,SAAS,GAAGD,OAAO,CAAC,mBAAD,CAAzB;;AAEA,IAAME,WAAW,GAAGD,SAAS,CAACE,MAAV,CAAiB,aAAjB,EAAgC;AAChDC,EAAAA,EAAE,EAAG;AACDC,IAAAA,IAAI,EAAGN,SAAS,CAACO,OADhB;AAEDC,IAAAA,aAAa,EAAG,IAFf;AAGDC,IAAAA,SAAS,EAAG,KAHX;AAIDC,IAAAA,UAAU,EAAG;AAJZ;AAD2C,CAAhC,CAApB;AASAC,MAAM,CAACC,OAAP,GAAiBT,WAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/models",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst Performance = sequelize.define('performance', {\n    id : {\n        type : Sequelize.INTEGER,\n        autoIncrement : true,\n        allowNull : false,\n        primaryKey : true\n    }\n});\n\nmodule.exports = Performance;"
      ]
    },
    "sourceType": "script",
    "mtime": 1576866381903
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/routes/artistic_event.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes/artistic_event.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes/artistic_event.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes/artistic_event.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes",
        "sourceFileName": "artistic_event.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar _require = require('express-validator/check'),\n    body = _require.body,\n    query = _require.query;\n\nvar router = express.Router();\n\nvar isAuth = require('../middleware/is-auth');\n\nvar feedController = require('../controllers/feed');\n\nvar path = require('path');\n\nvar multer = require('multer');\n\nvar uuidv4 = require('uuid/v4');\n\nvar storage = multer.diskStorage({\n  destination: function destination(req, file, callback) {\n    callback(null, 'public/images');\n  },\n  filename: function filename(req, file, callback) {\n    //callback(null, Date.now() + '-' + file.originalname);\n    callback(null, uuidv4() + path.extname(file.originalname));\n  }\n});\n\nvar fileFilter = function fileFilter(req, file, callback) {\n  if (file.mimetype == 'image/png' || file.mimetype == 'image/jpg' || file.mimetype == 'image/jpeg') {\n    callback(null, true);\n  } else {\n    req.fileValidationError = \"Estensione non consentita solo: 'image/jpg' | 'image/png' | 'image/jpeg'\";\n    callback(null, false);\n  }\n};\n\nvar upload = multer({\n  storage: storage,\n  fileFilter: fileFilter\n});\nvar cpUpload = upload.single('image');\nrouter.get('/artisticevent', feedController.getArtisticEvents);\nrouter.get('/artisticevent/search', feedController.searchArtisticEvent);\nrouter.get('/artisticevent/:id', feedController.getArtisticEvent);\nrouter.put('/post/:id', isAuth, feedController.editPost);\nrouter[\"delete\"]('/post/:id', isAuth, feedController.deletePost);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFydGlzdGljX2V2ZW50LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwiYm9keSIsInF1ZXJ5Iiwicm91dGVyIiwiUm91dGVyIiwiaXNBdXRoIiwiZmVlZENvbnRyb2xsZXIiLCJwYXRoIiwibXVsdGVyIiwidXVpZHY0Iiwic3RvcmFnZSIsImRpc2tTdG9yYWdlIiwiZGVzdGluYXRpb24iLCJyZXEiLCJmaWxlIiwiY2FsbGJhY2siLCJmaWxlbmFtZSIsImV4dG5hbWUiLCJvcmlnaW5hbG5hbWUiLCJmaWxlRmlsdGVyIiwibWltZXR5cGUiLCJmaWxlVmFsaWRhdGlvbkVycm9yIiwidXBsb2FkIiwiY3BVcGxvYWQiLCJzaW5nbGUiLCJnZXQiLCJnZXRBcnRpc3RpY0V2ZW50cyIsInNlYXJjaEFydGlzdGljRXZlbnQiLCJnZXRBcnRpc3RpY0V2ZW50IiwicHV0IiwiZWRpdFBvc3QiLCJkZWxldGVQb3N0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztlQUN3QkEsT0FBTyxDQUFDLHlCQUFELEM7SUFBdkJDLEksWUFBQUEsSTtJQUFNQyxLLFlBQUFBLEs7O0FBQ2QsSUFBTUMsTUFBTSxHQUFHSixPQUFPLENBQUNLLE1BQVIsRUFBZjs7QUFFQSxJQUFNQyxNQUFNLEdBQUdMLE9BQU8sQ0FBQyx1QkFBRCxDQUF0Qjs7QUFFQSxJQUFNTSxjQUFjLEdBQUdOLE9BQU8sQ0FBQyxxQkFBRCxDQUE5Qjs7QUFFQSxJQUFNTyxJQUFJLEdBQUdQLE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUNBLElBQU1RLE1BQU0sR0FBR1IsT0FBTyxDQUFDLFFBQUQsQ0FBdEI7O0FBQ0EsSUFBTVMsTUFBTSxHQUFHVCxPQUFPLENBQUMsU0FBRCxDQUF0Qjs7QUFFQSxJQUFNVSxPQUFPLEdBQUdGLE1BQU0sQ0FBQ0csV0FBUCxDQUFtQjtBQUMvQkMsRUFBQUEsV0FBVyxFQUFHLHFCQUFDQyxHQUFELEVBQU1DLElBQU4sRUFBWUMsUUFBWixFQUF5QjtBQUNuQ0EsSUFBQUEsUUFBUSxDQUFDLElBQUQsRUFBTyxlQUFQLENBQVI7QUFDSCxHQUg4QjtBQUkvQkMsRUFBQUEsUUFBUSxFQUFHLGtCQUFDSCxHQUFELEVBQU1DLElBQU4sRUFBWUMsUUFBWixFQUF5QjtBQUNoQztBQUNBQSxJQUFBQSxRQUFRLENBQUMsSUFBRCxFQUFPTixNQUFNLEtBQUtGLElBQUksQ0FBQ1UsT0FBTCxDQUFhSCxJQUFJLENBQUNJLFlBQWxCLENBQWxCLENBQVI7QUFDSDtBQVA4QixDQUFuQixDQUFoQjs7QUFVQSxJQUFNQyxVQUFVLEdBQUksU0FBZEEsVUFBYyxDQUFDTixHQUFELEVBQU1DLElBQU4sRUFBWUMsUUFBWixFQUF5QjtBQUN6QyxNQUFHRCxJQUFJLENBQUNNLFFBQUwsSUFBaUIsV0FBakIsSUFBZ0NOLElBQUksQ0FBQ00sUUFBTCxJQUFpQixXQUFqRCxJQUFnRU4sSUFBSSxDQUFDTSxRQUFMLElBQWlCLFlBQXBGLEVBQWtHO0FBQzlGTCxJQUFBQSxRQUFRLENBQUMsSUFBRCxFQUFPLElBQVAsQ0FBUjtBQUNILEdBRkQsTUFFTztBQUNIRixJQUFBQSxHQUFHLENBQUNRLG1CQUFKLEdBQTBCLDBFQUExQjtBQUNBTixJQUFBQSxRQUFRLENBQUMsSUFBRCxFQUFPLEtBQVAsQ0FBUjtBQUNIO0FBQ0osQ0FQRDs7QUFTQSxJQUFJTyxNQUFNLEdBQUdkLE1BQU0sQ0FBQztBQUFFRSxFQUFBQSxPQUFPLEVBQUdBLE9BQVo7QUFBcUJTLEVBQUFBLFVBQVUsRUFBR0E7QUFBbEMsQ0FBRCxDQUFuQjtBQUVBLElBQUlJLFFBQVEsR0FBR0QsTUFBTSxDQUFDRSxNQUFQLENBQWMsT0FBZCxDQUFmO0FBRUFyQixNQUFNLENBQUNzQixHQUFQLENBQVcsZ0JBQVgsRUFBNkJuQixjQUFjLENBQUNvQixpQkFBNUM7QUFDQXZCLE1BQU0sQ0FBQ3NCLEdBQVAsQ0FBVyx1QkFBWCxFQUFvQ25CLGNBQWMsQ0FBQ3FCLG1CQUFuRDtBQUNBeEIsTUFBTSxDQUFDc0IsR0FBUCxDQUFXLG9CQUFYLEVBQWlDbkIsY0FBYyxDQUFDc0IsZ0JBQWhEO0FBQ0F6QixNQUFNLENBQUMwQixHQUFQLENBQVcsV0FBWCxFQUF3QnhCLE1BQXhCLEVBQWdDQyxjQUFjLENBQUN3QixRQUEvQztBQUNBM0IsTUFBTSxVQUFOLENBQWMsV0FBZCxFQUEyQkUsTUFBM0IsRUFBbUNDLGNBQWMsQ0FBQ3lCLFVBQWxEO0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjlCLE1BQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9BbGVzc2FuZHJvX011c29saW5vL0Rlc2t0b3AvZmlyc3RBUEkvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbmNvbnN0IHsgYm9keSwgcXVlcnkgfSA9IHJlcXVpcmUoJ2V4cHJlc3MtdmFsaWRhdG9yL2NoZWNrJyk7XG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuXG5jb25zdCBpc0F1dGggPSByZXF1aXJlKCcuLi9taWRkbGV3YXJlL2lzLWF1dGgnKTtcblxuY29uc3QgZmVlZENvbnRyb2xsZXIgPSByZXF1aXJlKCcuLi9jb250cm9sbGVycy9mZWVkJyk7XG5cbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5jb25zdCBtdWx0ZXIgPSByZXF1aXJlKCdtdWx0ZXInKTtcbmNvbnN0IHV1aWR2NCA9IHJlcXVpcmUoJ3V1aWQvdjQnKTtcblxuY29uc3Qgc3RvcmFnZSA9IG11bHRlci5kaXNrU3RvcmFnZSh7XG4gICAgZGVzdGluYXRpb24gOiAocmVxLCBmaWxlLCBjYWxsYmFjaykgPT4ge1xuICAgICAgICBjYWxsYmFjayhudWxsLCAncHVibGljL2ltYWdlcycpO1xuICAgIH0sXG4gICAgZmlsZW5hbWUgOiAocmVxLCBmaWxlLCBjYWxsYmFjaykgPT4ge1xuICAgICAgICAvL2NhbGxiYWNrKG51bGwsIERhdGUubm93KCkgKyAnLScgKyBmaWxlLm9yaWdpbmFsbmFtZSk7XG4gICAgICAgIGNhbGxiYWNrKG51bGwsIHV1aWR2NCgpICsgcGF0aC5leHRuYW1lKGZpbGUub3JpZ2luYWxuYW1lKSk7XG4gICAgfSxcbn0pO1xuXG5jb25zdCBmaWxlRmlsdGVyID0gKChyZXEsIGZpbGUsIGNhbGxiYWNrKSA9PiB7XG4gICAgaWYoZmlsZS5taW1ldHlwZSA9PSAnaW1hZ2UvcG5nJyB8fCBmaWxlLm1pbWV0eXBlID09ICdpbWFnZS9qcGcnIHx8IGZpbGUubWltZXR5cGUgPT0gJ2ltYWdlL2pwZWcnKSB7XG4gICAgICAgIGNhbGxiYWNrKG51bGwsIHRydWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHJlcS5maWxlVmFsaWRhdGlvbkVycm9yID0gXCJFc3RlbnNpb25lIG5vbiBjb25zZW50aXRhIHNvbG86ICdpbWFnZS9qcGcnIHwgJ2ltYWdlL3BuZycgfCAnaW1hZ2UvanBlZydcIjtcbiAgICAgICAgY2FsbGJhY2sobnVsbCwgZmFsc2UpO1xuICAgIH1cbn0pO1xuXG52YXIgdXBsb2FkID0gbXVsdGVyKHsgc3RvcmFnZSA6IHN0b3JhZ2UsIGZpbGVGaWx0ZXIgOiBmaWxlRmlsdGVyfSk7XG5cbnZhciBjcFVwbG9hZCA9IHVwbG9hZC5zaW5nbGUoJ2ltYWdlJyk7XG5cbnJvdXRlci5nZXQoJy9hcnRpc3RpY2V2ZW50JywgZmVlZENvbnRyb2xsZXIuZ2V0QXJ0aXN0aWNFdmVudHMpO1xucm91dGVyLmdldCgnL2FydGlzdGljZXZlbnQvc2VhcmNoJywgZmVlZENvbnRyb2xsZXIuc2VhcmNoQXJ0aXN0aWNFdmVudCk7XG5yb3V0ZXIuZ2V0KCcvYXJ0aXN0aWNldmVudC86aWQnLCBmZWVkQ29udHJvbGxlci5nZXRBcnRpc3RpY0V2ZW50KTtcbnJvdXRlci5wdXQoJy9wb3N0LzppZCcsIGlzQXV0aCwgZmVlZENvbnRyb2xsZXIuZWRpdFBvc3QpO1xucm91dGVyLmRlbGV0ZSgnL3Bvc3QvOmlkJywgaXNBdXRoLCBmZWVkQ29udHJvbGxlci5kZWxldGVQb3N0KTtcblxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "artistic_event.js"
      ],
      "names": [
        "express",
        "require",
        "body",
        "query",
        "router",
        "Router",
        "isAuth",
        "feedController",
        "path",
        "multer",
        "uuidv4",
        "storage",
        "diskStorage",
        "destination",
        "req",
        "file",
        "callback",
        "filename",
        "extname",
        "originalname",
        "fileFilter",
        "mimetype",
        "fileValidationError",
        "upload",
        "cpUpload",
        "single",
        "get",
        "getArtisticEvents",
        "searchArtisticEvent",
        "getArtisticEvent",
        "put",
        "editPost",
        "deletePost",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;eACwBA,OAAO,CAAC,yBAAD,C;IAAvBC,I,YAAAA,I;IAAMC,K,YAAAA,K;;AACd,IAAMC,MAAM,GAAGJ,OAAO,CAACK,MAAR,EAAf;;AAEA,IAAMC,MAAM,GAAGL,OAAO,CAAC,uBAAD,CAAtB;;AAEA,IAAMM,cAAc,GAAGN,OAAO,CAAC,qBAAD,CAA9B;;AAEA,IAAMO,IAAI,GAAGP,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMQ,MAAM,GAAGR,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMS,MAAM,GAAGT,OAAO,CAAC,SAAD,CAAtB;;AAEA,IAAMU,OAAO,GAAGF,MAAM,CAACG,WAAP,CAAmB;AAC/BC,EAAAA,WAAW,EAAG,qBAACC,GAAD,EAAMC,IAAN,EAAYC,QAAZ,EAAyB;AACnCA,IAAAA,QAAQ,CAAC,IAAD,EAAO,eAAP,CAAR;AACH,GAH8B;AAI/BC,EAAAA,QAAQ,EAAG,kBAACH,GAAD,EAAMC,IAAN,EAAYC,QAAZ,EAAyB;AAChC;AACAA,IAAAA,QAAQ,CAAC,IAAD,EAAON,MAAM,KAAKF,IAAI,CAACU,OAAL,CAAaH,IAAI,CAACI,YAAlB,CAAlB,CAAR;AACH;AAP8B,CAAnB,CAAhB;;AAUA,IAAMC,UAAU,GAAI,SAAdA,UAAc,CAACN,GAAD,EAAMC,IAAN,EAAYC,QAAZ,EAAyB;AACzC,MAAGD,IAAI,CAACM,QAAL,IAAiB,WAAjB,IAAgCN,IAAI,CAACM,QAAL,IAAiB,WAAjD,IAAgEN,IAAI,CAACM,QAAL,IAAiB,YAApF,EAAkG;AAC9FL,IAAAA,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAR;AACH,GAFD,MAEO;AACHF,IAAAA,GAAG,CAACQ,mBAAJ,GAA0B,0EAA1B;AACAN,IAAAA,QAAQ,CAAC,IAAD,EAAO,KAAP,CAAR;AACH;AACJ,CAPD;;AASA,IAAIO,MAAM,GAAGd,MAAM,CAAC;AAAEE,EAAAA,OAAO,EAAGA,OAAZ;AAAqBS,EAAAA,UAAU,EAAGA;AAAlC,CAAD,CAAnB;AAEA,IAAII,QAAQ,GAAGD,MAAM,CAACE,MAAP,CAAc,OAAd,CAAf;AAEArB,MAAM,CAACsB,GAAP,CAAW,gBAAX,EAA6BnB,cAAc,CAACoB,iBAA5C;AACAvB,MAAM,CAACsB,GAAP,CAAW,uBAAX,EAAoCnB,cAAc,CAACqB,mBAAnD;AACAxB,MAAM,CAACsB,GAAP,CAAW,oBAAX,EAAiCnB,cAAc,CAACsB,gBAAhD;AACAzB,MAAM,CAAC0B,GAAP,CAAW,WAAX,EAAwBxB,MAAxB,EAAgCC,cAAc,CAACwB,QAA/C;AACA3B,MAAM,UAAN,CAAc,WAAd,EAA2BE,MAA3B,EAAmCC,cAAc,CAACyB,UAAlD;AAEAC,MAAM,CAACC,OAAP,GAAiB9B,MAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes",
      "sourcesContent": [
        "const express = require('express');\nconst { body, query } = require('express-validator/check');\nconst router = express.Router();\n\nconst isAuth = require('../middleware/is-auth');\n\nconst feedController = require('../controllers/feed');\n\nconst path = require('path');\nconst multer = require('multer');\nconst uuidv4 = require('uuid/v4');\n\nconst storage = multer.diskStorage({\n    destination : (req, file, callback) => {\n        callback(null, 'public/images');\n    },\n    filename : (req, file, callback) => {\n        //callback(null, Date.now() + '-' + file.originalname);\n        callback(null, uuidv4() + path.extname(file.originalname));\n    },\n});\n\nconst fileFilter = ((req, file, callback) => {\n    if(file.mimetype == 'image/png' || file.mimetype == 'image/jpg' || file.mimetype == 'image/jpeg') {\n        callback(null, true);\n    } else {\n        req.fileValidationError = \"Estensione non consentita solo: 'image/jpg' | 'image/png' | 'image/jpeg'\";\n        callback(null, false);\n    }\n});\n\nvar upload = multer({ storage : storage, fileFilter : fileFilter});\n\nvar cpUpload = upload.single('image');\n\nrouter.get('/artisticevent', feedController.getArtisticEvents);\nrouter.get('/artisticevent/search', feedController.searchArtisticEvent);\nrouter.get('/artisticevent/:id', feedController.getArtisticEvent);\nrouter.put('/post/:id', isAuth, feedController.editPost);\nrouter.delete('/post/:id', isAuth, feedController.deletePost);\n\nmodule.exports = router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1577043118563
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/routes/artisticevent.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes/artisticevent.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes/artisticevent.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes/artisticevent.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes",
        "sourceFileName": "artisticevent.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar _require = require('express-validator/check'),\n    body = _require.body,\n    query = _require.query;\n\nvar router = express.Router();\n\nvar isAuth = require('../middleware/is-auth');\n\nvar feedController = require('../controllers/artisticevent');\n\nvar path = require('path');\n\nvar multer = require('multer');\n\nvar uuidv4 = require('uuid/v4');\n\nvar storage = multer.diskStorage({\n  destination: function destination(req, file, callback) {\n    callback(null, 'public/images');\n  },\n  filename: function filename(req, file, callback) {\n    //callback(null, Date.now() + '-' + file.originalname);\n    callback(null, uuidv4() + path.extname(file.originalname));\n  }\n});\n\nvar fileFilter = function fileFilter(req, file, callback) {\n  if (file.mimetype == 'image/png' || file.mimetype == 'image/jpg' || file.mimetype == 'image/jpeg') {\n    callback(null, true);\n  } else {\n    req.fileValidationError = \"Estensione non consentita solo: 'image/jpg' | 'image/png' | 'image/jpeg'\";\n    callback(null, false);\n  }\n};\n\nvar upload = multer({\n  storage: storage,\n  fileFilter: fileFilter\n});\nvar cpUpload = upload.single('image');\nrouter.get('/artisticevent', feedController.getArtisticevents);\nrouter.get('/artisticevent/search', feedController.searchArtisticevent);\nrouter.get('/artisticevent/:id', feedController.getArtisticevent);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFydGlzdGljZXZlbnQuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJib2R5IiwicXVlcnkiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJpc0F1dGgiLCJmZWVkQ29udHJvbGxlciIsInBhdGgiLCJtdWx0ZXIiLCJ1dWlkdjQiLCJzdG9yYWdlIiwiZGlza1N0b3JhZ2UiLCJkZXN0aW5hdGlvbiIsInJlcSIsImZpbGUiLCJjYWxsYmFjayIsImZpbGVuYW1lIiwiZXh0bmFtZSIsIm9yaWdpbmFsbmFtZSIsImZpbGVGaWx0ZXIiLCJtaW1ldHlwZSIsImZpbGVWYWxpZGF0aW9uRXJyb3IiLCJ1cGxvYWQiLCJjcFVwbG9hZCIsInNpbmdsZSIsImdldCIsImdldEFydGlzdGljZXZlbnRzIiwic2VhcmNoQXJ0aXN0aWNldmVudCIsImdldEFydGlzdGljZXZlbnQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O2VBQ3dCQSxPQUFPLENBQUMseUJBQUQsQztJQUF2QkMsSSxZQUFBQSxJO0lBQU1DLEssWUFBQUEsSzs7QUFDZCxJQUFNQyxNQUFNLEdBQUdKLE9BQU8sQ0FBQ0ssTUFBUixFQUFmOztBQUVBLElBQU1DLE1BQU0sR0FBR0wsT0FBTyxDQUFDLHVCQUFELENBQXRCOztBQUVBLElBQU1NLGNBQWMsR0FBR04sT0FBTyxDQUFDLDhCQUFELENBQTlCOztBQUVBLElBQU1PLElBQUksR0FBR1AsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTVEsTUFBTSxHQUFHUixPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFDQSxJQUFNUyxNQUFNLEdBQUdULE9BQU8sQ0FBQyxTQUFELENBQXRCOztBQUVBLElBQU1VLE9BQU8sR0FBR0YsTUFBTSxDQUFDRyxXQUFQLENBQW1CO0FBQy9CQyxFQUFBQSxXQUFXLEVBQUcscUJBQUNDLEdBQUQsRUFBTUMsSUFBTixFQUFZQyxRQUFaLEVBQXlCO0FBQ25DQSxJQUFBQSxRQUFRLENBQUMsSUFBRCxFQUFPLGVBQVAsQ0FBUjtBQUNILEdBSDhCO0FBSS9CQyxFQUFBQSxRQUFRLEVBQUcsa0JBQUNILEdBQUQsRUFBTUMsSUFBTixFQUFZQyxRQUFaLEVBQXlCO0FBQ2hDO0FBQ0FBLElBQUFBLFFBQVEsQ0FBQyxJQUFELEVBQU9OLE1BQU0sS0FBS0YsSUFBSSxDQUFDVSxPQUFMLENBQWFILElBQUksQ0FBQ0ksWUFBbEIsQ0FBbEIsQ0FBUjtBQUNIO0FBUDhCLENBQW5CLENBQWhCOztBQVVBLElBQU1DLFVBQVUsR0FBSSxTQUFkQSxVQUFjLENBQUNOLEdBQUQsRUFBTUMsSUFBTixFQUFZQyxRQUFaLEVBQXlCO0FBQ3pDLE1BQUdELElBQUksQ0FBQ00sUUFBTCxJQUFpQixXQUFqQixJQUFnQ04sSUFBSSxDQUFDTSxRQUFMLElBQWlCLFdBQWpELElBQWdFTixJQUFJLENBQUNNLFFBQUwsSUFBaUIsWUFBcEYsRUFBa0c7QUFDOUZMLElBQUFBLFFBQVEsQ0FBQyxJQUFELEVBQU8sSUFBUCxDQUFSO0FBQ0gsR0FGRCxNQUVPO0FBQ0hGLElBQUFBLEdBQUcsQ0FBQ1EsbUJBQUosR0FBMEIsMEVBQTFCO0FBQ0FOLElBQUFBLFFBQVEsQ0FBQyxJQUFELEVBQU8sS0FBUCxDQUFSO0FBQ0g7QUFDSixDQVBEOztBQVNBLElBQUlPLE1BQU0sR0FBR2QsTUFBTSxDQUFDO0FBQUVFLEVBQUFBLE9BQU8sRUFBR0EsT0FBWjtBQUFxQlMsRUFBQUEsVUFBVSxFQUFHQTtBQUFsQyxDQUFELENBQW5CO0FBRUEsSUFBSUksUUFBUSxHQUFHRCxNQUFNLENBQUNFLE1BQVAsQ0FBYyxPQUFkLENBQWY7QUFFQXJCLE1BQU0sQ0FBQ3NCLEdBQVAsQ0FBVyxnQkFBWCxFQUE2Qm5CLGNBQWMsQ0FBQ29CLGlCQUE1QztBQUNBdkIsTUFBTSxDQUFDc0IsR0FBUCxDQUFXLHVCQUFYLEVBQW9DbkIsY0FBYyxDQUFDcUIsbUJBQW5EO0FBQ0F4QixNQUFNLENBQUNzQixHQUFQLENBQVcsb0JBQVgsRUFBaUNuQixjQUFjLENBQUNzQixnQkFBaEQ7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCM0IsTUFBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL0FsZXNzYW5kcm9fTXVzb2xpbm8vRGVza3RvcC9maXJzdEFQSS9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xuY29uc3QgeyBib2R5LCBxdWVyeSB9ID0gcmVxdWlyZSgnZXhwcmVzcy12YWxpZGF0b3IvY2hlY2snKTtcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbmNvbnN0IGlzQXV0aCA9IHJlcXVpcmUoJy4uL21pZGRsZXdhcmUvaXMtYXV0aCcpO1xuXG5jb25zdCBmZWVkQ29udHJvbGxlciA9IHJlcXVpcmUoJy4uL2NvbnRyb2xsZXJzL2FydGlzdGljZXZlbnQnKTtcblxuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbmNvbnN0IG11bHRlciA9IHJlcXVpcmUoJ211bHRlcicpO1xuY29uc3QgdXVpZHY0ID0gcmVxdWlyZSgndXVpZC92NCcpO1xuXG5jb25zdCBzdG9yYWdlID0gbXVsdGVyLmRpc2tTdG9yYWdlKHtcbiAgICBkZXN0aW5hdGlvbiA6IChyZXEsIGZpbGUsIGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIGNhbGxiYWNrKG51bGwsICdwdWJsaWMvaW1hZ2VzJyk7XG4gICAgfSxcbiAgICBmaWxlbmFtZSA6IChyZXEsIGZpbGUsIGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIC8vY2FsbGJhY2sobnVsbCwgRGF0ZS5ub3coKSArICctJyArIGZpbGUub3JpZ2luYWxuYW1lKTtcbiAgICAgICAgY2FsbGJhY2sobnVsbCwgdXVpZHY0KCkgKyBwYXRoLmV4dG5hbWUoZmlsZS5vcmlnaW5hbG5hbWUpKTtcbiAgICB9LFxufSk7XG5cbmNvbnN0IGZpbGVGaWx0ZXIgPSAoKHJlcSwgZmlsZSwgY2FsbGJhY2spID0+IHtcbiAgICBpZihmaWxlLm1pbWV0eXBlID09ICdpbWFnZS9wbmcnIHx8IGZpbGUubWltZXR5cGUgPT0gJ2ltYWdlL2pwZycgfHwgZmlsZS5taW1ldHlwZSA9PSAnaW1hZ2UvanBlZycpIHtcbiAgICAgICAgY2FsbGJhY2sobnVsbCwgdHJ1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmVxLmZpbGVWYWxpZGF0aW9uRXJyb3IgPSBcIkVzdGVuc2lvbmUgbm9uIGNvbnNlbnRpdGEgc29sbzogJ2ltYWdlL2pwZycgfCAnaW1hZ2UvcG5nJyB8ICdpbWFnZS9qcGVnJ1wiO1xuICAgICAgICBjYWxsYmFjayhudWxsLCBmYWxzZSk7XG4gICAgfVxufSk7XG5cbnZhciB1cGxvYWQgPSBtdWx0ZXIoeyBzdG9yYWdlIDogc3RvcmFnZSwgZmlsZUZpbHRlciA6IGZpbGVGaWx0ZXJ9KTtcblxudmFyIGNwVXBsb2FkID0gdXBsb2FkLnNpbmdsZSgnaW1hZ2UnKTtcblxucm91dGVyLmdldCgnL2FydGlzdGljZXZlbnQnLCBmZWVkQ29udHJvbGxlci5nZXRBcnRpc3RpY2V2ZW50cyk7XG5yb3V0ZXIuZ2V0KCcvYXJ0aXN0aWNldmVudC9zZWFyY2gnLCBmZWVkQ29udHJvbGxlci5zZWFyY2hBcnRpc3RpY2V2ZW50KTtcbnJvdXRlci5nZXQoJy9hcnRpc3RpY2V2ZW50LzppZCcsIGZlZWRDb250cm9sbGVyLmdldEFydGlzdGljZXZlbnQpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "artisticevent.js"
      ],
      "names": [
        "express",
        "require",
        "body",
        "query",
        "router",
        "Router",
        "isAuth",
        "feedController",
        "path",
        "multer",
        "uuidv4",
        "storage",
        "diskStorage",
        "destination",
        "req",
        "file",
        "callback",
        "filename",
        "extname",
        "originalname",
        "fileFilter",
        "mimetype",
        "fileValidationError",
        "upload",
        "cpUpload",
        "single",
        "get",
        "getArtisticevents",
        "searchArtisticevent",
        "getArtisticevent",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;eACwBA,OAAO,CAAC,yBAAD,C;IAAvBC,I,YAAAA,I;IAAMC,K,YAAAA,K;;AACd,IAAMC,MAAM,GAAGJ,OAAO,CAACK,MAAR,EAAf;;AAEA,IAAMC,MAAM,GAAGL,OAAO,CAAC,uBAAD,CAAtB;;AAEA,IAAMM,cAAc,GAAGN,OAAO,CAAC,8BAAD,CAA9B;;AAEA,IAAMO,IAAI,GAAGP,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMQ,MAAM,GAAGR,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMS,MAAM,GAAGT,OAAO,CAAC,SAAD,CAAtB;;AAEA,IAAMU,OAAO,GAAGF,MAAM,CAACG,WAAP,CAAmB;AAC/BC,EAAAA,WAAW,EAAG,qBAACC,GAAD,EAAMC,IAAN,EAAYC,QAAZ,EAAyB;AACnCA,IAAAA,QAAQ,CAAC,IAAD,EAAO,eAAP,CAAR;AACH,GAH8B;AAI/BC,EAAAA,QAAQ,EAAG,kBAACH,GAAD,EAAMC,IAAN,EAAYC,QAAZ,EAAyB;AAChC;AACAA,IAAAA,QAAQ,CAAC,IAAD,EAAON,MAAM,KAAKF,IAAI,CAACU,OAAL,CAAaH,IAAI,CAACI,YAAlB,CAAlB,CAAR;AACH;AAP8B,CAAnB,CAAhB;;AAUA,IAAMC,UAAU,GAAI,SAAdA,UAAc,CAACN,GAAD,EAAMC,IAAN,EAAYC,QAAZ,EAAyB;AACzC,MAAGD,IAAI,CAACM,QAAL,IAAiB,WAAjB,IAAgCN,IAAI,CAACM,QAAL,IAAiB,WAAjD,IAAgEN,IAAI,CAACM,QAAL,IAAiB,YAApF,EAAkG;AAC9FL,IAAAA,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAR;AACH,GAFD,MAEO;AACHF,IAAAA,GAAG,CAACQ,mBAAJ,GAA0B,0EAA1B;AACAN,IAAAA,QAAQ,CAAC,IAAD,EAAO,KAAP,CAAR;AACH;AACJ,CAPD;;AASA,IAAIO,MAAM,GAAGd,MAAM,CAAC;AAAEE,EAAAA,OAAO,EAAGA,OAAZ;AAAqBS,EAAAA,UAAU,EAAGA;AAAlC,CAAD,CAAnB;AAEA,IAAII,QAAQ,GAAGD,MAAM,CAACE,MAAP,CAAc,OAAd,CAAf;AAEArB,MAAM,CAACsB,GAAP,CAAW,gBAAX,EAA6BnB,cAAc,CAACoB,iBAA5C;AACAvB,MAAM,CAACsB,GAAP,CAAW,uBAAX,EAAoCnB,cAAc,CAACqB,mBAAnD;AACAxB,MAAM,CAACsB,GAAP,CAAW,oBAAX,EAAiCnB,cAAc,CAACsB,gBAAhD;AAEAC,MAAM,CAACC,OAAP,GAAiB3B,MAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes",
      "sourcesContent": [
        "const express = require('express');\nconst { body, query } = require('express-validator/check');\nconst router = express.Router();\n\nconst isAuth = require('../middleware/is-auth');\n\nconst feedController = require('../controllers/artisticevent');\n\nconst path = require('path');\nconst multer = require('multer');\nconst uuidv4 = require('uuid/v4');\n\nconst storage = multer.diskStorage({\n    destination : (req, file, callback) => {\n        callback(null, 'public/images');\n    },\n    filename : (req, file, callback) => {\n        //callback(null, Date.now() + '-' + file.originalname);\n        callback(null, uuidv4() + path.extname(file.originalname));\n    },\n});\n\nconst fileFilter = ((req, file, callback) => {\n    if(file.mimetype == 'image/png' || file.mimetype == 'image/jpg' || file.mimetype == 'image/jpeg') {\n        callback(null, true);\n    } else {\n        req.fileValidationError = \"Estensione non consentita solo: 'image/jpg' | 'image/png' | 'image/jpeg'\";\n        callback(null, false);\n    }\n});\n\nvar upload = multer({ storage : storage, fileFilter : fileFilter});\n\nvar cpUpload = upload.single('image');\n\nrouter.get('/artisticevent', feedController.getArtisticevents);\nrouter.get('/artisticevent/search', feedController.searchArtisticevent);\nrouter.get('/artisticevent/:id', feedController.getArtisticevent);\n\nmodule.exports = router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1577442303826
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/controllers/artisticevent.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers/artisticevent.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers/artisticevent.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers/artisticevent.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers",
        "sourceFileName": "artisticevent.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _require = require('express-validator/check'),\n    validationResult = _require.validationResult;\n\nvar Sequelize = require('sequelize');\n\nvar Op = Sequelize.Op;\n\nvar path = require('path');\n\nvar fs = require('fs');\n\nvar Artisticevent = require('../models/artisticevent');\n\nvar User = require('../models/user');\n\nexports.getArtisticevents = function (req, res, next) {\n  ArtisticEvent.findAll({\n    include: [{\n      model: User,\n      attributes: ['id', 'name', 'updatedAt']\n    }]\n  }).then(function (artisticevents) {\n    console.log(artisticevents);\n    res.json({\n      artisticevents: artisticevents\n    });\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\n\nexports.getArtisticevent = function (req, res, next) {\n  var artisticeventId = req.params.id;\n  ArtisticEvent.findByPk(artisticeventId).then(function (artisticevent) {\n    if (!artisticevent) {\n      res.status(404).json({\n        messages: 'Artistic Event Not Found'\n      });\n    }\n\n    res.json({\n      artisticevent: artisticevent\n    });\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\n\nexports.getArtisticeventsByMe = function (req, res, next) {\n  req.user.getArtisticevents().then(function (artisticEvents) {\n    console.log(artisticEvents);\n    res.json({\n      artisticEvents: artisticEvents\n    });\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\n\nexports.searchArtisticevent = function (req, res, next) {\n  var title = '%' + req.query.title + '%';\n  Artisticevent.findAll({\n    where: {\n      title: _defineProperty({}, Op.like, title)\n    }\n  }).then(function (posts) {\n    console.log(artistic_events);\n    res.json({\n      artisticevents: artisticevents\n    });\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFydGlzdGljZXZlbnQuanMiXSwibmFtZXMiOlsicmVxdWlyZSIsInZhbGlkYXRpb25SZXN1bHQiLCJTZXF1ZWxpemUiLCJPcCIsInBhdGgiLCJmcyIsIkFydGlzdGljZXZlbnQiLCJVc2VyIiwiZXhwb3J0cyIsImdldEFydGlzdGljZXZlbnRzIiwicmVxIiwicmVzIiwibmV4dCIsIkFydGlzdGljRXZlbnQiLCJmaW5kQWxsIiwiaW5jbHVkZSIsIm1vZGVsIiwiYXR0cmlidXRlcyIsInRoZW4iLCJhcnRpc3RpY2V2ZW50cyIsImNvbnNvbGUiLCJsb2ciLCJqc29uIiwiZXJyIiwiZ2V0QXJ0aXN0aWNldmVudCIsImFydGlzdGljZXZlbnRJZCIsInBhcmFtcyIsImlkIiwiZmluZEJ5UGsiLCJhcnRpc3RpY2V2ZW50Iiwic3RhdHVzIiwibWVzc2FnZXMiLCJnZXRBcnRpc3RpY2V2ZW50c0J5TWUiLCJ1c2VyIiwiYXJ0aXN0aWNFdmVudHMiLCJzZWFyY2hBcnRpc3RpY2V2ZW50IiwidGl0bGUiLCJxdWVyeSIsIndoZXJlIiwibGlrZSIsInBvc3RzIiwiYXJ0aXN0aWNfZXZlbnRzIl0sIm1hcHBpbmdzIjoiOzs7O2VBQTZCQSxPQUFPLENBQUMseUJBQUQsQztJQUE1QkMsZ0IsWUFBQUEsZ0I7O0FBQ1IsSUFBTUMsU0FBUyxHQUFHRixPQUFPLENBQUMsV0FBRCxDQUF6Qjs7QUFDQSxJQUFNRyxFQUFFLEdBQUdELFNBQVMsQ0FBQ0MsRUFBckI7O0FBQ0EsSUFBTUMsSUFBSSxHQUFHSixPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxJQUFNSyxFQUFFLEdBQUdMLE9BQU8sQ0FBQyxJQUFELENBQWxCOztBQUVBLElBQU1NLGFBQWEsR0FBR04sT0FBTyxDQUFDLHlCQUFELENBQTdCOztBQUNBLElBQU1PLElBQUksR0FBR1AsT0FBTyxDQUFDLGdCQUFELENBQXBCOztBQUVBUSxPQUFPLENBQUNDLGlCQUFSLEdBQTRCLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEVBQW9CO0FBQzVDQyxFQUFBQSxhQUFhLENBQUNDLE9BQWQsQ0FBc0I7QUFBQ0MsSUFBQUEsT0FBTyxFQUFHLENBQUM7QUFBQ0MsTUFBQUEsS0FBSyxFQUFHVCxJQUFUO0FBQWVVLE1BQUFBLFVBQVUsRUFBRyxDQUFDLElBQUQsRUFBTyxNQUFQLEVBQWUsV0FBZjtBQUE1QixLQUFEO0FBQVgsR0FBdEIsRUFDQ0MsSUFERCxDQUNNLFVBQUNDLGNBQUQsRUFBb0I7QUFDdEJDLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixjQUFaO0FBQ0FSLElBQUFBLEdBQUcsQ0FBQ1csSUFBSixDQUFTO0FBQUNILE1BQUFBLGNBQWMsRUFBR0E7QUFBbEIsS0FBVDtBQUNILEdBSkQsV0FLSSxVQUFBSSxHQUFHO0FBQUEsV0FBSUgsT0FBTyxDQUFDQyxHQUFSLENBQVlFLEdBQVosQ0FBSjtBQUFBLEdBTFA7QUFPSCxDQVJEOztBQVVBZixPQUFPLENBQUNnQixnQkFBUixHQUEyQixVQUFDZCxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFvQjtBQUMzQyxNQUFNYSxlQUFlLEdBQUdmLEdBQUcsQ0FBQ2dCLE1BQUosQ0FBV0MsRUFBbkM7QUFDQWQsRUFBQUEsYUFBYSxDQUFDZSxRQUFkLENBQXVCSCxlQUF2QixFQUNDUCxJQURELENBQ00sVUFBQ1csYUFBRCxFQUFtQjtBQUNyQixRQUFHLENBQUNBLGFBQUosRUFBbUI7QUFDZmxCLE1BQUFBLEdBQUcsQ0FBQ21CLE1BQUosQ0FBVyxHQUFYLEVBQWdCUixJQUFoQixDQUFxQjtBQUNqQlMsUUFBQUEsUUFBUSxFQUFHO0FBRE0sT0FBckI7QUFHSDs7QUFDRHBCLElBQUFBLEdBQUcsQ0FBQ1csSUFBSixDQUFTO0FBQUNPLE1BQUFBLGFBQWEsRUFBR0E7QUFBakIsS0FBVDtBQUNILEdBUkQsV0FTSSxVQUFBTixHQUFHO0FBQUEsV0FBSUgsT0FBTyxDQUFDQyxHQUFSLENBQVlFLEdBQVosQ0FBSjtBQUFBLEdBVFA7QUFXSCxDQWJEOztBQWVBZixPQUFPLENBQUN3QixxQkFBUixHQUFnQyxVQUFDdEIsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsRUFBb0I7QUFDaERGLEVBQUFBLEdBQUcsQ0FBQ3VCLElBQUosQ0FBU3hCLGlCQUFULEdBQTZCUyxJQUE3QixDQUFrQyxVQUFDZ0IsY0FBRCxFQUFvQjtBQUNsRGQsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlhLGNBQVo7QUFDQXZCLElBQUFBLEdBQUcsQ0FBQ1csSUFBSixDQUFTO0FBQUNZLE1BQUFBLGNBQWMsRUFBR0E7QUFBbEIsS0FBVDtBQUNILEdBSEQsV0FJSSxVQUFBWCxHQUFHO0FBQUEsV0FBSUgsT0FBTyxDQUFDQyxHQUFSLENBQVlFLEdBQVosQ0FBSjtBQUFBLEdBSlA7QUFNSCxDQVBEOztBQVVBZixPQUFPLENBQUMyQixtQkFBUixHQUE4QixVQUFDekIsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsRUFBb0I7QUFDOUMsTUFBTXdCLEtBQUssR0FBRyxNQUFNMUIsR0FBRyxDQUFDMkIsS0FBSixDQUFVRCxLQUFoQixHQUF3QixHQUF0QztBQUNBOUIsRUFBQUEsYUFBYSxDQUFDUSxPQUFkLENBQXNCO0FBQUN3QixJQUFBQSxLQUFLLEVBQUc7QUFBQ0YsTUFBQUEsS0FBSyxzQkFBS2pDLEVBQUUsQ0FBQ29DLElBQVIsRUFBZ0JILEtBQWhCO0FBQU47QUFBVCxHQUF0QixFQUNDbEIsSUFERCxDQUNNLFVBQUNzQixLQUFELEVBQVc7QUFDYnBCLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZb0IsZUFBWjtBQUNBOUIsSUFBQUEsR0FBRyxDQUFDVyxJQUFKLENBQVM7QUFBQ0gsTUFBQUEsY0FBYyxFQUFHQTtBQUFsQixLQUFUO0FBQ0gsR0FKRCxXQUtJLFVBQUFJLEdBQUc7QUFBQSxXQUFJSCxPQUFPLENBQUNDLEdBQVIsQ0FBWUUsR0FBWixDQUFKO0FBQUEsR0FMUDtBQU9ILENBVEQiLCJzb3VyY2VSb290IjoiL1VzZXJzL0FsZXNzYW5kcm9fTXVzb2xpbm8vRGVza3RvcC9maXJzdEFQSS9jb250cm9sbGVycyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgdmFsaWRhdGlvblJlc3VsdCB9ID0gcmVxdWlyZSgnZXhwcmVzcy12YWxpZGF0b3IvY2hlY2snKTtcbmNvbnN0IFNlcXVlbGl6ZSA9IHJlcXVpcmUoJ3NlcXVlbGl6ZScpO1xuY29uc3QgT3AgPSBTZXF1ZWxpemUuT3A7XG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuY29uc3QgZnMgPSByZXF1aXJlKCdmcycpO1xuXG5jb25zdCBBcnRpc3RpY2V2ZW50ID0gcmVxdWlyZSgnLi4vbW9kZWxzL2FydGlzdGljZXZlbnQnKTtcbmNvbnN0IFVzZXIgPSByZXF1aXJlKCcuLi9tb2RlbHMvdXNlcicpO1xuXG5leHBvcnRzLmdldEFydGlzdGljZXZlbnRzID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgQXJ0aXN0aWNFdmVudC5maW5kQWxsKHtpbmNsdWRlIDogW3ttb2RlbCA6IFVzZXIsIGF0dHJpYnV0ZXMgOiBbJ2lkJywgJ25hbWUnLCAndXBkYXRlZEF0J119XX0pXG4gICAgLnRoZW4oKGFydGlzdGljZXZlbnRzKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKGFydGlzdGljZXZlbnRzKTtcbiAgICAgICAgcmVzLmpzb24oe2FydGlzdGljZXZlbnRzIDogYXJ0aXN0aWNldmVudHN9KTtcbiAgICB9KS5jYXRjaChcbiAgICAgICAgZXJyID0+IGNvbnNvbGUubG9nKGVycilcbiAgICApO1xufTtcblxuZXhwb3J0cy5nZXRBcnRpc3RpY2V2ZW50ID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgY29uc3QgYXJ0aXN0aWNldmVudElkID0gcmVxLnBhcmFtcy5pZDtcbiAgICBBcnRpc3RpY0V2ZW50LmZpbmRCeVBrKGFydGlzdGljZXZlbnRJZClcbiAgICAudGhlbigoYXJ0aXN0aWNldmVudCkgPT4ge1xuICAgICAgICBpZighYXJ0aXN0aWNldmVudCkge1xuICAgICAgICAgICAgcmVzLnN0YXR1cyg0MDQpLmpzb24oe1xuICAgICAgICAgICAgICAgIG1lc3NhZ2VzIDogJ0FydGlzdGljIEV2ZW50IE5vdCBGb3VuZCcsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXMuanNvbih7YXJ0aXN0aWNldmVudCA6IGFydGlzdGljZXZlbnR9KTtcbiAgICB9KS5jYXRjaChcbiAgICAgICAgZXJyID0+IGNvbnNvbGUubG9nKGVycilcbiAgICApO1xufTtcblxuZXhwb3J0cy5nZXRBcnRpc3RpY2V2ZW50c0J5TWUgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICByZXEudXNlci5nZXRBcnRpc3RpY2V2ZW50cygpLnRoZW4oKGFydGlzdGljRXZlbnRzKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKGFydGlzdGljRXZlbnRzKTtcbiAgICAgICAgcmVzLmpzb24oe2FydGlzdGljRXZlbnRzIDogYXJ0aXN0aWNFdmVudHN9KTtcbiAgICB9KS5jYXRjaChcbiAgICAgICAgZXJyID0+IGNvbnNvbGUubG9nKGVycilcbiAgICApO1xufTtcblxuXG5leHBvcnRzLnNlYXJjaEFydGlzdGljZXZlbnQgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBjb25zdCB0aXRsZSA9ICclJyArIHJlcS5xdWVyeS50aXRsZSArICclJztcbiAgICBBcnRpc3RpY2V2ZW50LmZpbmRBbGwoe3doZXJlIDoge3RpdGxlIDoge1tPcC5saWtlXSA6IHRpdGxlfX19KVxuICAgIC50aGVuKChwb3N0cykgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhhcnRpc3RpY19ldmVudHMpO1xuICAgICAgICByZXMuanNvbih7YXJ0aXN0aWNldmVudHMgOiBhcnRpc3RpY2V2ZW50c30pO1xuICAgIH0pLmNhdGNoKFxuICAgICAgICBlcnIgPT4gY29uc29sZS5sb2coZXJyKVxuICAgICk7XG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "artisticevent.js"
      ],
      "names": [
        "require",
        "validationResult",
        "Sequelize",
        "Op",
        "path",
        "fs",
        "Artisticevent",
        "User",
        "exports",
        "getArtisticevents",
        "req",
        "res",
        "next",
        "ArtisticEvent",
        "findAll",
        "include",
        "model",
        "attributes",
        "then",
        "artisticevents",
        "console",
        "log",
        "json",
        "err",
        "getArtisticevent",
        "artisticeventId",
        "params",
        "id",
        "findByPk",
        "artisticevent",
        "status",
        "messages",
        "getArtisticeventsByMe",
        "user",
        "artisticEvents",
        "searchArtisticevent",
        "title",
        "query",
        "where",
        "like",
        "posts",
        "artistic_events"
      ],
      "mappings": ";;;;eAA6BA,OAAO,CAAC,yBAAD,C;IAA5BC,gB,YAAAA,gB;;AACR,IAAMC,SAAS,GAAGF,OAAO,CAAC,WAAD,CAAzB;;AACA,IAAMG,EAAE,GAAGD,SAAS,CAACC,EAArB;;AACA,IAAMC,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMK,EAAE,GAAGL,OAAO,CAAC,IAAD,CAAlB;;AAEA,IAAMM,aAAa,GAAGN,OAAO,CAAC,yBAAD,CAA7B;;AACA,IAAMO,IAAI,GAAGP,OAAO,CAAC,gBAAD,CAApB;;AAEAQ,OAAO,CAACC,iBAAR,GAA4B,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC5CC,EAAAA,aAAa,CAACC,OAAd,CAAsB;AAACC,IAAAA,OAAO,EAAG,CAAC;AAACC,MAAAA,KAAK,EAAGT,IAAT;AAAeU,MAAAA,UAAU,EAAG,CAAC,IAAD,EAAO,MAAP,EAAe,WAAf;AAA5B,KAAD;AAAX,GAAtB,EACCC,IADD,CACM,UAACC,cAAD,EAAoB;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,cAAZ;AACAR,IAAAA,GAAG,CAACW,IAAJ,CAAS;AAACH,MAAAA,cAAc,EAAGA;AAAlB,KAAT;AACH,GAJD,WAKI,UAAAI,GAAG;AAAA,WAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAAJ;AAAA,GALP;AAOH,CARD;;AAUAf,OAAO,CAACgB,gBAAR,GAA2B,UAACd,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC3C,MAAMa,eAAe,GAAGf,GAAG,CAACgB,MAAJ,CAAWC,EAAnC;AACAd,EAAAA,aAAa,CAACe,QAAd,CAAuBH,eAAvB,EACCP,IADD,CACM,UAACW,aAAD,EAAmB;AACrB,QAAG,CAACA,aAAJ,EAAmB;AACflB,MAAAA,GAAG,CAACmB,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB;AACjBS,QAAAA,QAAQ,EAAG;AADM,OAArB;AAGH;;AACDpB,IAAAA,GAAG,CAACW,IAAJ,CAAS;AAACO,MAAAA,aAAa,EAAGA;AAAjB,KAAT;AACH,GARD,WASI,UAAAN,GAAG;AAAA,WAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAAJ;AAAA,GATP;AAWH,CAbD;;AAeAf,OAAO,CAACwB,qBAAR,GAAgC,UAACtB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAChDF,EAAAA,GAAG,CAACuB,IAAJ,CAASxB,iBAAT,GAA6BS,IAA7B,CAAkC,UAACgB,cAAD,EAAoB;AAClDd,IAAAA,OAAO,CAACC,GAAR,CAAYa,cAAZ;AACAvB,IAAAA,GAAG,CAACW,IAAJ,CAAS;AAACY,MAAAA,cAAc,EAAGA;AAAlB,KAAT;AACH,GAHD,WAII,UAAAX,GAAG;AAAA,WAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAAJ;AAAA,GAJP;AAMH,CAPD;;AAUAf,OAAO,CAAC2B,mBAAR,GAA8B,UAACzB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC9C,MAAMwB,KAAK,GAAG,MAAM1B,GAAG,CAAC2B,KAAJ,CAAUD,KAAhB,GAAwB,GAAtC;AACA9B,EAAAA,aAAa,CAACQ,OAAd,CAAsB;AAACwB,IAAAA,KAAK,EAAG;AAACF,MAAAA,KAAK,sBAAKjC,EAAE,CAACoC,IAAR,EAAgBH,KAAhB;AAAN;AAAT,GAAtB,EACClB,IADD,CACM,UAACsB,KAAD,EAAW;AACbpB,IAAAA,OAAO,CAACC,GAAR,CAAYoB,eAAZ;AACA9B,IAAAA,GAAG,CAACW,IAAJ,CAAS;AAACH,MAAAA,cAAc,EAAGA;AAAlB,KAAT;AACH,GAJD,WAKI,UAAAI,GAAG;AAAA,WAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAAJ;AAAA,GALP;AAOH,CATD",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers",
      "sourcesContent": [
        "const { validationResult } = require('express-validator/check');\nconst Sequelize = require('sequelize');\nconst Op = Sequelize.Op;\nconst path = require('path');\nconst fs = require('fs');\n\nconst Artisticevent = require('../models/artisticevent');\nconst User = require('../models/user');\n\nexports.getArtisticevents = (req, res, next) => {\n    ArtisticEvent.findAll({include : [{model : User, attributes : ['id', 'name', 'updatedAt']}]})\n    .then((artisticevents) => {\n        console.log(artisticevents);\n        res.json({artisticevents : artisticevents});\n    }).catch(\n        err => console.log(err)\n    );\n};\n\nexports.getArtisticevent = (req, res, next) => {\n    const artisticeventId = req.params.id;\n    ArtisticEvent.findByPk(artisticeventId)\n    .then((artisticevent) => {\n        if(!artisticevent) {\n            res.status(404).json({\n                messages : 'Artistic Event Not Found',\n            });\n        }\n        res.json({artisticevent : artisticevent});\n    }).catch(\n        err => console.log(err)\n    );\n};\n\nexports.getArtisticeventsByMe = (req, res, next) => {\n    req.user.getArtisticevents().then((artisticEvents) => {\n        console.log(artisticEvents);\n        res.json({artisticEvents : artisticEvents});\n    }).catch(\n        err => console.log(err)\n    );\n};\n\n\nexports.searchArtisticevent = (req, res, next) => {\n    const title = '%' + req.query.title + '%';\n    Artisticevent.findAll({where : {title : {[Op.like] : title}}})\n    .then((posts) => {\n        console.log(artistic_events);\n        res.json({artisticevents : artisticevents});\n    }).catch(\n        err => console.log(err)\n    );\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1577124832063
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/models/artisticevent.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/models/artisticevent.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/firstAPI/models/artisticevent.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/models/artisticevent.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/models",
        "sourceFileName": "artisticevent.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar Sequelize = require('sequelize');\n\nvar sequelize = require('../utils/database');\n\nvar Artistic_Event = sequelize.define('artistic_event', {\n  id: {\n    type: Sequelize.INTEGER,\n    autoIncrement: true,\n    allowNull: false,\n    primaryKey: true\n  },\n  title: {\n    type: Sequelize.STRING,\n    allowNull: false\n  },\n  date: {\n    type: Sequelize.DATE,\n    allowNull: true\n  },\n  factsheet: {\n    //it must include the date\n    type: Sequelize.STRING,\n    allowNull: true\n  },\n  \"abstract\": {\n    type: Sequelize.STRING,\n    allowNull: true\n  },\n  image: {\n    //photo gallery\n    type: Sequelize.STRING,\n    allowNull: true\n  }\n});\nmodule.exports = Artistic_Event;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFydGlzdGljZXZlbnQuanMiXSwibmFtZXMiOlsiU2VxdWVsaXplIiwicmVxdWlyZSIsInNlcXVlbGl6ZSIsIkFydGlzdGljX0V2ZW50IiwiZGVmaW5lIiwiaWQiLCJ0eXBlIiwiSU5URUdFUiIsImF1dG9JbmNyZW1lbnQiLCJhbGxvd051bGwiLCJwcmltYXJ5S2V5IiwidGl0bGUiLCJTVFJJTkciLCJkYXRlIiwiREFURSIsImZhY3RzaGVldCIsImltYWdlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxTQUFTLEdBQUdDLE9BQU8sQ0FBQyxXQUFELENBQXpCOztBQUVBLElBQU1DLFNBQVMsR0FBR0QsT0FBTyxDQUFDLG1CQUFELENBQXpCOztBQUVBLElBQU1FLGNBQWMsR0FBR0QsU0FBUyxDQUFDRSxNQUFWLENBQWlCLGdCQUFqQixFQUFtQztBQUN0REMsRUFBQUEsRUFBRSxFQUFHO0FBQ0RDLElBQUFBLElBQUksRUFBR04sU0FBUyxDQUFDTyxPQURoQjtBQUVEQyxJQUFBQSxhQUFhLEVBQUcsSUFGZjtBQUdEQyxJQUFBQSxTQUFTLEVBQUcsS0FIWDtBQUlEQyxJQUFBQSxVQUFVLEVBQUc7QUFKWixHQURpRDtBQU90REMsRUFBQUEsS0FBSyxFQUFHO0FBQ0pMLElBQUFBLElBQUksRUFBR04sU0FBUyxDQUFDWSxNQURiO0FBRUpILElBQUFBLFNBQVMsRUFBRztBQUZSLEdBUDhDO0FBV3RESSxFQUFBQSxJQUFJLEVBQUc7QUFDSFAsSUFBQUEsSUFBSSxFQUFHTixTQUFTLENBQUNjLElBRGQ7QUFFSEwsSUFBQUEsU0FBUyxFQUFHO0FBRlQsR0FYK0M7QUFldERNLEVBQUFBLFNBQVMsRUFBRztBQUFFO0FBQ1ZULElBQUFBLElBQUksRUFBR04sU0FBUyxDQUFDWSxNQURUO0FBRVJILElBQUFBLFNBQVMsRUFBRztBQUZKLEdBZjBDO0FBbUJ0RCxjQUFXO0FBQ1BILElBQUFBLElBQUksRUFBR04sU0FBUyxDQUFDWSxNQURWO0FBRVBILElBQUFBLFNBQVMsRUFBRztBQUZMLEdBbkIyQztBQXVCdERPLEVBQUFBLEtBQUssRUFBRztBQUFFO0FBQ05WLElBQUFBLElBQUksRUFBR04sU0FBUyxDQUFDWSxNQURiO0FBRUpILElBQUFBLFNBQVMsRUFBRztBQUZSO0FBdkI4QyxDQUFuQyxDQUF2QjtBQTZCQVEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCZixjQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvQWxlc3NhbmRyb19NdXNvbGluby9EZXNrdG9wL2ZpcnN0QVBJL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFNlcXVlbGl6ZSA9IHJlcXVpcmUoJ3NlcXVlbGl6ZScpO1xuXG5jb25zdCBzZXF1ZWxpemUgPSByZXF1aXJlKCcuLi91dGlscy9kYXRhYmFzZScpO1xuXG5jb25zdCBBcnRpc3RpY19FdmVudCA9IHNlcXVlbGl6ZS5kZWZpbmUoJ2FydGlzdGljX2V2ZW50Jywge1xuICAgIGlkIDoge1xuICAgICAgICB0eXBlIDogU2VxdWVsaXplLklOVEVHRVIsXG4gICAgICAgIGF1dG9JbmNyZW1lbnQgOiB0cnVlLFxuICAgICAgICBhbGxvd051bGwgOiBmYWxzZSxcbiAgICAgICAgcHJpbWFyeUtleSA6IHRydWVcbiAgICB9LFxuICAgIHRpdGxlIDoge1xuICAgICAgICB0eXBlIDogU2VxdWVsaXplLlNUUklORyxcbiAgICAgICAgYWxsb3dOdWxsIDogZmFsc2UsXG4gICAgfSxcbiAgICBkYXRlIDoge1xuICAgICAgICB0eXBlIDogU2VxdWVsaXplLkRBVEUsXG4gICAgICAgIGFsbG93TnVsbCA6IHRydWUsXG4gICAgfSxcbiAgICBmYWN0c2hlZXQgOiB7IC8vaXQgbXVzdCBpbmNsdWRlIHRoZSBkYXRlXG4gICAgICAgIHR5cGUgOiBTZXF1ZWxpemUuU1RSSU5HLFxuICAgICAgICBhbGxvd051bGwgOiB0cnVlLFxuICAgIH0sXG4gICAgYWJzdHJhY3QgOiB7XG4gICAgICAgIHR5cGUgOiBTZXF1ZWxpemUuU1RSSU5HLFxuICAgICAgICBhbGxvd051bGwgOiB0cnVlLFxuICAgIH0sXG4gICAgaW1hZ2UgOiB7IC8vcGhvdG8gZ2FsbGVyeVxuICAgICAgICB0eXBlIDogU2VxdWVsaXplLlNUUklORyxcbiAgICAgICAgYWxsb3dOdWxsIDogdHJ1ZVxuICAgIH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEFydGlzdGljX0V2ZW50OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "artisticevent.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "sequelize",
        "Artistic_Event",
        "define",
        "id",
        "type",
        "INTEGER",
        "autoIncrement",
        "allowNull",
        "primaryKey",
        "title",
        "STRING",
        "date",
        "DATE",
        "factsheet",
        "image",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,IAAMC,SAAS,GAAGD,OAAO,CAAC,mBAAD,CAAzB;;AAEA,IAAME,cAAc,GAAGD,SAAS,CAACE,MAAV,CAAiB,gBAAjB,EAAmC;AACtDC,EAAAA,EAAE,EAAG;AACDC,IAAAA,IAAI,EAAGN,SAAS,CAACO,OADhB;AAEDC,IAAAA,aAAa,EAAG,IAFf;AAGDC,IAAAA,SAAS,EAAG,KAHX;AAIDC,IAAAA,UAAU,EAAG;AAJZ,GADiD;AAOtDC,EAAAA,KAAK,EAAG;AACJL,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADb;AAEJH,IAAAA,SAAS,EAAG;AAFR,GAP8C;AAWtDI,EAAAA,IAAI,EAAG;AACHP,IAAAA,IAAI,EAAGN,SAAS,CAACc,IADd;AAEHL,IAAAA,SAAS,EAAG;AAFT,GAX+C;AAetDM,EAAAA,SAAS,EAAG;AAAE;AACVT,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADT;AAERH,IAAAA,SAAS,EAAG;AAFJ,GAf0C;AAmBtD,cAAW;AACPH,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADV;AAEPH,IAAAA,SAAS,EAAG;AAFL,GAnB2C;AAuBtDO,EAAAA,KAAK,EAAG;AAAE;AACNV,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADb;AAEJH,IAAAA,SAAS,EAAG;AAFR;AAvB8C,CAAnC,CAAvB;AA6BAQ,MAAM,CAACC,OAAP,GAAiBf,cAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/models",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst Artistic_Event = sequelize.define('artistic_event', {\n    id : {\n        type : Sequelize.INTEGER,\n        autoIncrement : true,\n        allowNull : false,\n        primaryKey : true\n    },\n    title : {\n        type : Sequelize.STRING,\n        allowNull : false,\n    },\n    date : {\n        type : Sequelize.DATE,\n        allowNull : true,\n    },\n    factsheet : { //it must include the date\n        type : Sequelize.STRING,\n        allowNull : true,\n    },\n    abstract : {\n        type : Sequelize.STRING,\n        allowNull : true,\n    },\n    image : { //photo gallery\n        type : Sequelize.STRING,\n        allowNull : true\n    }\n});\n\nmodule.exports = Artistic_Event;"
      ]
    },
    "sourceType": "script",
    "mtime": 1577124669021
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/routes/performer.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes/performer.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes/performer.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes/performer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes",
        "sourceFileName": "performer.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar _require = require('express-validator/check'),\n    body = _require.body,\n    query = _require.query;\n\nvar router = express.Router();\n\nvar isAuth = require('../middleware/is-auth');\n\nvar performerController = require('../controllers/performer');\n\nvar path = require('path');\n\nvar multer = require('multer');\n\nvar uuidv4 = require('uuid/v4');\n\nvar storage = multer.diskStorage({\n  destination: function destination(req, file, callback) {\n    callback(null, 'public/images');\n  },\n  filename: function filename(req, file, callback) {\n    //callback(null, Date.now() + '-' + file.originalname);\n    callback(null, uuidv4() + path.extname(file.originalname));\n  }\n});\n\nvar fileFilter = function fileFilter(req, file, callback) {\n  if (file.mimetype == 'image/png' || file.mimetype == 'image/jpg' || file.mimetype == 'image/jpeg') {\n    callback(null, true);\n  } else {\n    req.fileValidationError = \"Estensione non consentita solo: 'image/jpg' | 'image/png' | 'image/jpeg'\";\n    callback(null, false);\n  }\n};\n\nvar upload = multer({\n  storage: storage,\n  fileFilter: fileFilter\n});\nvar cpUpload = upload.single('image');\nrouter.get('/performer', performerController.getPerformers);\nrouter.get('/performer/search', performerController.searchPerformer);\nrouter.get('/performer/:id', performerController.getPerformer);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBlcmZvcm1lci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImJvZHkiLCJxdWVyeSIsInJvdXRlciIsIlJvdXRlciIsImlzQXV0aCIsInBlcmZvcm1lckNvbnRyb2xsZXIiLCJwYXRoIiwibXVsdGVyIiwidXVpZHY0Iiwic3RvcmFnZSIsImRpc2tTdG9yYWdlIiwiZGVzdGluYXRpb24iLCJyZXEiLCJmaWxlIiwiY2FsbGJhY2siLCJmaWxlbmFtZSIsImV4dG5hbWUiLCJvcmlnaW5hbG5hbWUiLCJmaWxlRmlsdGVyIiwibWltZXR5cGUiLCJmaWxlVmFsaWRhdGlvbkVycm9yIiwidXBsb2FkIiwiY3BVcGxvYWQiLCJzaW5nbGUiLCJnZXQiLCJnZXRQZXJmb3JtZXJzIiwic2VhcmNoUGVyZm9ybWVyIiwiZ2V0UGVyZm9ybWVyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztlQUN3QkEsT0FBTyxDQUFDLHlCQUFELEM7SUFBdkJDLEksWUFBQUEsSTtJQUFNQyxLLFlBQUFBLEs7O0FBQ2QsSUFBTUMsTUFBTSxHQUFHSixPQUFPLENBQUNLLE1BQVIsRUFBZjs7QUFFQSxJQUFNQyxNQUFNLEdBQUdMLE9BQU8sQ0FBQyx1QkFBRCxDQUF0Qjs7QUFFQSxJQUFNTSxtQkFBbUIsR0FBR04sT0FBTyxDQUFDLDBCQUFELENBQW5DOztBQUVBLElBQU1PLElBQUksR0FBR1AsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTVEsTUFBTSxHQUFHUixPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFDQSxJQUFNUyxNQUFNLEdBQUdULE9BQU8sQ0FBQyxTQUFELENBQXRCOztBQUVBLElBQU1VLE9BQU8sR0FBR0YsTUFBTSxDQUFDRyxXQUFQLENBQW1CO0FBQy9CQyxFQUFBQSxXQUFXLEVBQUcscUJBQUNDLEdBQUQsRUFBTUMsSUFBTixFQUFZQyxRQUFaLEVBQXlCO0FBQ25DQSxJQUFBQSxRQUFRLENBQUMsSUFBRCxFQUFPLGVBQVAsQ0FBUjtBQUNILEdBSDhCO0FBSS9CQyxFQUFBQSxRQUFRLEVBQUcsa0JBQUNILEdBQUQsRUFBTUMsSUFBTixFQUFZQyxRQUFaLEVBQXlCO0FBQ2hDO0FBQ0FBLElBQUFBLFFBQVEsQ0FBQyxJQUFELEVBQU9OLE1BQU0sS0FBS0YsSUFBSSxDQUFDVSxPQUFMLENBQWFILElBQUksQ0FBQ0ksWUFBbEIsQ0FBbEIsQ0FBUjtBQUNIO0FBUDhCLENBQW5CLENBQWhCOztBQVVBLElBQU1DLFVBQVUsR0FBSSxTQUFkQSxVQUFjLENBQUNOLEdBQUQsRUFBTUMsSUFBTixFQUFZQyxRQUFaLEVBQXlCO0FBQ3pDLE1BQUdELElBQUksQ0FBQ00sUUFBTCxJQUFpQixXQUFqQixJQUFnQ04sSUFBSSxDQUFDTSxRQUFMLElBQWlCLFdBQWpELElBQWdFTixJQUFJLENBQUNNLFFBQUwsSUFBaUIsWUFBcEYsRUFBa0c7QUFDOUZMLElBQUFBLFFBQVEsQ0FBQyxJQUFELEVBQU8sSUFBUCxDQUFSO0FBQ0gsR0FGRCxNQUVPO0FBQ0hGLElBQUFBLEdBQUcsQ0FBQ1EsbUJBQUosR0FBMEIsMEVBQTFCO0FBQ0FOLElBQUFBLFFBQVEsQ0FBQyxJQUFELEVBQU8sS0FBUCxDQUFSO0FBQ0g7QUFDSixDQVBEOztBQVNBLElBQUlPLE1BQU0sR0FBR2QsTUFBTSxDQUFDO0FBQUVFLEVBQUFBLE9BQU8sRUFBR0EsT0FBWjtBQUFxQlMsRUFBQUEsVUFBVSxFQUFHQTtBQUFsQyxDQUFELENBQW5CO0FBRUEsSUFBSUksUUFBUSxHQUFHRCxNQUFNLENBQUNFLE1BQVAsQ0FBYyxPQUFkLENBQWY7QUFFQXJCLE1BQU0sQ0FBQ3NCLEdBQVAsQ0FBVyxZQUFYLEVBQXlCbkIsbUJBQW1CLENBQUNvQixhQUE3QztBQUNBdkIsTUFBTSxDQUFDc0IsR0FBUCxDQUFXLG1CQUFYLEVBQWdDbkIsbUJBQW1CLENBQUNxQixlQUFwRDtBQUNBeEIsTUFBTSxDQUFDc0IsR0FBUCxDQUFXLGdCQUFYLEVBQTZCbkIsbUJBQW1CLENBQUNzQixZQUFqRDtBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUIzQixNQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvQWxlc3NhbmRyb19NdXNvbGluby9EZXNrdG9wL2ZpcnN0QVBJL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG5jb25zdCB7IGJvZHksIHF1ZXJ5IH0gPSByZXF1aXJlKCdleHByZXNzLXZhbGlkYXRvci9jaGVjaycpO1xuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcblxuY29uc3QgaXNBdXRoID0gcmVxdWlyZSgnLi4vbWlkZGxld2FyZS9pcy1hdXRoJyk7XG5cbmNvbnN0IHBlcmZvcm1lckNvbnRyb2xsZXIgPSByZXF1aXJlKCcuLi9jb250cm9sbGVycy9wZXJmb3JtZXInKTtcblxuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbmNvbnN0IG11bHRlciA9IHJlcXVpcmUoJ211bHRlcicpO1xuY29uc3QgdXVpZHY0ID0gcmVxdWlyZSgndXVpZC92NCcpO1xuXG5jb25zdCBzdG9yYWdlID0gbXVsdGVyLmRpc2tTdG9yYWdlKHtcbiAgICBkZXN0aW5hdGlvbiA6IChyZXEsIGZpbGUsIGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIGNhbGxiYWNrKG51bGwsICdwdWJsaWMvaW1hZ2VzJyk7XG4gICAgfSxcbiAgICBmaWxlbmFtZSA6IChyZXEsIGZpbGUsIGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIC8vY2FsbGJhY2sobnVsbCwgRGF0ZS5ub3coKSArICctJyArIGZpbGUub3JpZ2luYWxuYW1lKTtcbiAgICAgICAgY2FsbGJhY2sobnVsbCwgdXVpZHY0KCkgKyBwYXRoLmV4dG5hbWUoZmlsZS5vcmlnaW5hbG5hbWUpKTtcbiAgICB9LFxufSk7XG5cbmNvbnN0IGZpbGVGaWx0ZXIgPSAoKHJlcSwgZmlsZSwgY2FsbGJhY2spID0+IHtcbiAgICBpZihmaWxlLm1pbWV0eXBlID09ICdpbWFnZS9wbmcnIHx8IGZpbGUubWltZXR5cGUgPT0gJ2ltYWdlL2pwZycgfHwgZmlsZS5taW1ldHlwZSA9PSAnaW1hZ2UvanBlZycpIHtcbiAgICAgICAgY2FsbGJhY2sobnVsbCwgdHJ1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmVxLmZpbGVWYWxpZGF0aW9uRXJyb3IgPSBcIkVzdGVuc2lvbmUgbm9uIGNvbnNlbnRpdGEgc29sbzogJ2ltYWdlL2pwZycgfCAnaW1hZ2UvcG5nJyB8ICdpbWFnZS9qcGVnJ1wiO1xuICAgICAgICBjYWxsYmFjayhudWxsLCBmYWxzZSk7XG4gICAgfVxufSk7XG5cbnZhciB1cGxvYWQgPSBtdWx0ZXIoeyBzdG9yYWdlIDogc3RvcmFnZSwgZmlsZUZpbHRlciA6IGZpbGVGaWx0ZXJ9KTtcblxudmFyIGNwVXBsb2FkID0gdXBsb2FkLnNpbmdsZSgnaW1hZ2UnKTtcblxucm91dGVyLmdldCgnL3BlcmZvcm1lcicsIHBlcmZvcm1lckNvbnRyb2xsZXIuZ2V0UGVyZm9ybWVycyk7XG5yb3V0ZXIuZ2V0KCcvcGVyZm9ybWVyL3NlYXJjaCcsIHBlcmZvcm1lckNvbnRyb2xsZXIuc2VhcmNoUGVyZm9ybWVyKTtcbnJvdXRlci5nZXQoJy9wZXJmb3JtZXIvOmlkJywgcGVyZm9ybWVyQ29udHJvbGxlci5nZXRQZXJmb3JtZXIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "performer.js"
      ],
      "names": [
        "express",
        "require",
        "body",
        "query",
        "router",
        "Router",
        "isAuth",
        "performerController",
        "path",
        "multer",
        "uuidv4",
        "storage",
        "diskStorage",
        "destination",
        "req",
        "file",
        "callback",
        "filename",
        "extname",
        "originalname",
        "fileFilter",
        "mimetype",
        "fileValidationError",
        "upload",
        "cpUpload",
        "single",
        "get",
        "getPerformers",
        "searchPerformer",
        "getPerformer",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;eACwBA,OAAO,CAAC,yBAAD,C;IAAvBC,I,YAAAA,I;IAAMC,K,YAAAA,K;;AACd,IAAMC,MAAM,GAAGJ,OAAO,CAACK,MAAR,EAAf;;AAEA,IAAMC,MAAM,GAAGL,OAAO,CAAC,uBAAD,CAAtB;;AAEA,IAAMM,mBAAmB,GAAGN,OAAO,CAAC,0BAAD,CAAnC;;AAEA,IAAMO,IAAI,GAAGP,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMQ,MAAM,GAAGR,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMS,MAAM,GAAGT,OAAO,CAAC,SAAD,CAAtB;;AAEA,IAAMU,OAAO,GAAGF,MAAM,CAACG,WAAP,CAAmB;AAC/BC,EAAAA,WAAW,EAAG,qBAACC,GAAD,EAAMC,IAAN,EAAYC,QAAZ,EAAyB;AACnCA,IAAAA,QAAQ,CAAC,IAAD,EAAO,eAAP,CAAR;AACH,GAH8B;AAI/BC,EAAAA,QAAQ,EAAG,kBAACH,GAAD,EAAMC,IAAN,EAAYC,QAAZ,EAAyB;AAChC;AACAA,IAAAA,QAAQ,CAAC,IAAD,EAAON,MAAM,KAAKF,IAAI,CAACU,OAAL,CAAaH,IAAI,CAACI,YAAlB,CAAlB,CAAR;AACH;AAP8B,CAAnB,CAAhB;;AAUA,IAAMC,UAAU,GAAI,SAAdA,UAAc,CAACN,GAAD,EAAMC,IAAN,EAAYC,QAAZ,EAAyB;AACzC,MAAGD,IAAI,CAACM,QAAL,IAAiB,WAAjB,IAAgCN,IAAI,CAACM,QAAL,IAAiB,WAAjD,IAAgEN,IAAI,CAACM,QAAL,IAAiB,YAApF,EAAkG;AAC9FL,IAAAA,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAR;AACH,GAFD,MAEO;AACHF,IAAAA,GAAG,CAACQ,mBAAJ,GAA0B,0EAA1B;AACAN,IAAAA,QAAQ,CAAC,IAAD,EAAO,KAAP,CAAR;AACH;AACJ,CAPD;;AASA,IAAIO,MAAM,GAAGd,MAAM,CAAC;AAAEE,EAAAA,OAAO,EAAGA,OAAZ;AAAqBS,EAAAA,UAAU,EAAGA;AAAlC,CAAD,CAAnB;AAEA,IAAII,QAAQ,GAAGD,MAAM,CAACE,MAAP,CAAc,OAAd,CAAf;AAEArB,MAAM,CAACsB,GAAP,CAAW,YAAX,EAAyBnB,mBAAmB,CAACoB,aAA7C;AACAvB,MAAM,CAACsB,GAAP,CAAW,mBAAX,EAAgCnB,mBAAmB,CAACqB,eAApD;AACAxB,MAAM,CAACsB,GAAP,CAAW,gBAAX,EAA6BnB,mBAAmB,CAACsB,YAAjD;AAEAC,MAAM,CAACC,OAAP,GAAiB3B,MAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes",
      "sourcesContent": [
        "const express = require('express');\nconst { body, query } = require('express-validator/check');\nconst router = express.Router();\n\nconst isAuth = require('../middleware/is-auth');\n\nconst performerController = require('../controllers/performer');\n\nconst path = require('path');\nconst multer = require('multer');\nconst uuidv4 = require('uuid/v4');\n\nconst storage = multer.diskStorage({\n    destination : (req, file, callback) => {\n        callback(null, 'public/images');\n    },\n    filename : (req, file, callback) => {\n        //callback(null, Date.now() + '-' + file.originalname);\n        callback(null, uuidv4() + path.extname(file.originalname));\n    },\n});\n\nconst fileFilter = ((req, file, callback) => {\n    if(file.mimetype == 'image/png' || file.mimetype == 'image/jpg' || file.mimetype == 'image/jpeg') {\n        callback(null, true);\n    } else {\n        req.fileValidationError = \"Estensione non consentita solo: 'image/jpg' | 'image/png' | 'image/jpeg'\";\n        callback(null, false);\n    }\n});\n\nvar upload = multer({ storage : storage, fileFilter : fileFilter});\n\nvar cpUpload = upload.single('image');\n\nrouter.get('/performer', performerController.getPerformers);\nrouter.get('/performer/search', performerController.searchPerformer);\nrouter.get('/performer/:id', performerController.getPerformer);\n\nmodule.exports = router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1577442367269
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/controllers/performer.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers/performer.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers/performer.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers/performer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers",
        "sourceFileName": "performer.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _require = require('express-validator/check'),\n    validationResult = _require.validationResult;\n\nvar Sequelize = require('sequelize');\n\nvar Op = Sequelize.Op;\n\nvar path = require('path');\n\nvar fs = require('fs');\n\nvar Performer = require('../models/performer');\n\nvar User = require('../models/user');\n\nexports.getPerformers = function (req, res, next) {\n  Performer.findAll({\n    include: [{\n      model: User,\n      attributes: ['id', 'name', 'updatedAt']\n    }]\n  }).then(function (performers) {\n    console.log(performers);\n    res.json({\n      performers: performers\n    });\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\n\nexports.getPerformer = function (req, res, next) {\n  var performerId = req.params.id;\n  Performer.findByPk(performerId).then(function (performer) {\n    if (!performer) {\n      res.status(404).json({\n        messages: 'Performer Not Found'\n      });\n    }\n\n    res.json({\n      performer: performer\n    });\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\n\nexports.searchPerformer = function (req, res, next) {\n  var title = '%' + req.query.title + '%';\n  Performer.findAll({\n    where: {\n      title: _defineProperty({}, Op.like, title)\n    }\n  }).then(function (performers) {\n    console.log(performers);\n    res.json({\n      performers: performers\n    });\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBlcmZvcm1lci5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwidmFsaWRhdGlvblJlc3VsdCIsIlNlcXVlbGl6ZSIsIk9wIiwicGF0aCIsImZzIiwiUGVyZm9ybWVyIiwiVXNlciIsImV4cG9ydHMiLCJnZXRQZXJmb3JtZXJzIiwicmVxIiwicmVzIiwibmV4dCIsImZpbmRBbGwiLCJpbmNsdWRlIiwibW9kZWwiLCJhdHRyaWJ1dGVzIiwidGhlbiIsInBlcmZvcm1lcnMiLCJjb25zb2xlIiwibG9nIiwianNvbiIsImVyciIsImdldFBlcmZvcm1lciIsInBlcmZvcm1lcklkIiwicGFyYW1zIiwiaWQiLCJmaW5kQnlQayIsInBlcmZvcm1lciIsInN0YXR1cyIsIm1lc3NhZ2VzIiwic2VhcmNoUGVyZm9ybWVyIiwidGl0bGUiLCJxdWVyeSIsIndoZXJlIiwibGlrZSJdLCJtYXBwaW5ncyI6Ijs7OztlQUE2QkEsT0FBTyxDQUFDLHlCQUFELEM7SUFBNUJDLGdCLFlBQUFBLGdCOztBQUNSLElBQU1DLFNBQVMsR0FBR0YsT0FBTyxDQUFDLFdBQUQsQ0FBekI7O0FBQ0EsSUFBTUcsRUFBRSxHQUFHRCxTQUFTLENBQUNDLEVBQXJCOztBQUNBLElBQU1DLElBQUksR0FBR0osT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTUssRUFBRSxHQUFHTCxPQUFPLENBQUMsSUFBRCxDQUFsQjs7QUFFQSxJQUFNTSxTQUFTLEdBQUdOLE9BQU8sQ0FBQyxxQkFBRCxDQUF6Qjs7QUFDQSxJQUFNTyxJQUFJLEdBQUdQLE9BQU8sQ0FBQyxnQkFBRCxDQUFwQjs7QUFFQVEsT0FBTyxDQUFDQyxhQUFSLEdBQXdCLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEVBQW9CO0FBQ3hDTixFQUFBQSxTQUFTLENBQUNPLE9BQVYsQ0FBa0I7QUFBQ0MsSUFBQUEsT0FBTyxFQUFHLENBQUM7QUFBQ0MsTUFBQUEsS0FBSyxFQUFHUixJQUFUO0FBQWVTLE1BQUFBLFVBQVUsRUFBRyxDQUFDLElBQUQsRUFBTyxNQUFQLEVBQWUsV0FBZjtBQUE1QixLQUFEO0FBQVgsR0FBbEIsRUFDQ0MsSUFERCxDQUNNLFVBQUNDLFVBQUQsRUFBZ0I7QUFDbEJDLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixVQUFaO0FBQ0FQLElBQUFBLEdBQUcsQ0FBQ1UsSUFBSixDQUFTO0FBQUNILE1BQUFBLFVBQVUsRUFBR0E7QUFBZCxLQUFUO0FBQ0gsR0FKRCxXQUtJLFVBQUFJLEdBQUc7QUFBQSxXQUFJSCxPQUFPLENBQUNDLEdBQVIsQ0FBWUUsR0FBWixDQUFKO0FBQUEsR0FMUDtBQU9ILENBUkQ7O0FBVUFkLE9BQU8sQ0FBQ2UsWUFBUixHQUF1QixVQUFDYixHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFvQjtBQUN2QyxNQUFNWSxXQUFXLEdBQUdkLEdBQUcsQ0FBQ2UsTUFBSixDQUFXQyxFQUEvQjtBQUNBcEIsRUFBQUEsU0FBUyxDQUFDcUIsUUFBVixDQUFtQkgsV0FBbkIsRUFDQ1AsSUFERCxDQUNNLFVBQUNXLFNBQUQsRUFBZTtBQUNqQixRQUFHLENBQUNBLFNBQUosRUFBZTtBQUNYakIsTUFBQUEsR0FBRyxDQUFDa0IsTUFBSixDQUFXLEdBQVgsRUFBZ0JSLElBQWhCLENBQXFCO0FBQ2pCUyxRQUFBQSxRQUFRLEVBQUc7QUFETSxPQUFyQjtBQUdIOztBQUNEbkIsSUFBQUEsR0FBRyxDQUFDVSxJQUFKLENBQVM7QUFBQ08sTUFBQUEsU0FBUyxFQUFHQTtBQUFiLEtBQVQ7QUFDSCxHQVJELFdBU0ksVUFBQU4sR0FBRztBQUFBLFdBQUlILE9BQU8sQ0FBQ0MsR0FBUixDQUFZRSxHQUFaLENBQUo7QUFBQSxHQVRQO0FBV0gsQ0FiRDs7QUFlQWQsT0FBTyxDQUFDdUIsZUFBUixHQUEwQixVQUFDckIsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsRUFBb0I7QUFDMUMsTUFBTW9CLEtBQUssR0FBRyxNQUFNdEIsR0FBRyxDQUFDdUIsS0FBSixDQUFVRCxLQUFoQixHQUF3QixHQUF0QztBQUNBMUIsRUFBQUEsU0FBUyxDQUFDTyxPQUFWLENBQWtCO0FBQUNxQixJQUFBQSxLQUFLLEVBQUc7QUFBQ0YsTUFBQUEsS0FBSyxzQkFBSzdCLEVBQUUsQ0FBQ2dDLElBQVIsRUFBZ0JILEtBQWhCO0FBQU47QUFBVCxHQUFsQixFQUNDZixJQURELENBQ00sVUFBQ0MsVUFBRCxFQUFnQjtBQUNsQkMsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlGLFVBQVo7QUFDQVAsSUFBQUEsR0FBRyxDQUFDVSxJQUFKLENBQVM7QUFBQ0gsTUFBQUEsVUFBVSxFQUFHQTtBQUFkLEtBQVQ7QUFDSCxHQUpELFdBS0ksVUFBQUksR0FBRztBQUFBLFdBQUlILE9BQU8sQ0FBQ0MsR0FBUixDQUFZRSxHQUFaLENBQUo7QUFBQSxHQUxQO0FBT0gsQ0FURCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvQWxlc3NhbmRyb19NdXNvbGluby9EZXNrdG9wL2ZpcnN0QVBJL2NvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyB2YWxpZGF0aW9uUmVzdWx0IH0gPSByZXF1aXJlKCdleHByZXNzLXZhbGlkYXRvci9jaGVjaycpO1xuY29uc3QgU2VxdWVsaXplID0gcmVxdWlyZSgnc2VxdWVsaXplJyk7XG5jb25zdCBPcCA9IFNlcXVlbGl6ZS5PcDtcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5jb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG5cbmNvbnN0IFBlcmZvcm1lciA9IHJlcXVpcmUoJy4uL21vZGVscy9wZXJmb3JtZXInKTtcbmNvbnN0IFVzZXIgPSByZXF1aXJlKCcuLi9tb2RlbHMvdXNlcicpO1xuXG5leHBvcnRzLmdldFBlcmZvcm1lcnMgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBQZXJmb3JtZXIuZmluZEFsbCh7aW5jbHVkZSA6IFt7bW9kZWwgOiBVc2VyLCBhdHRyaWJ1dGVzIDogWydpZCcsICduYW1lJywgJ3VwZGF0ZWRBdCddfV19KVxuICAgIC50aGVuKChwZXJmb3JtZXJzKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKHBlcmZvcm1lcnMpO1xuICAgICAgICByZXMuanNvbih7cGVyZm9ybWVycyA6IHBlcmZvcm1lcnN9KTtcbiAgICB9KS5jYXRjaChcbiAgICAgICAgZXJyID0+IGNvbnNvbGUubG9nKGVycilcbiAgICApO1xufTtcblxuZXhwb3J0cy5nZXRQZXJmb3JtZXIgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBjb25zdCBwZXJmb3JtZXJJZCA9IHJlcS5wYXJhbXMuaWQ7XG4gICAgUGVyZm9ybWVyLmZpbmRCeVBrKHBlcmZvcm1lcklkKVxuICAgIC50aGVuKChwZXJmb3JtZXIpID0+IHtcbiAgICAgICAgaWYoIXBlcmZvcm1lcikge1xuICAgICAgICAgICAgcmVzLnN0YXR1cyg0MDQpLmpzb24oe1xuICAgICAgICAgICAgICAgIG1lc3NhZ2VzIDogJ1BlcmZvcm1lciBOb3QgRm91bmQnLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmVzLmpzb24oe3BlcmZvcm1lciA6IHBlcmZvcm1lcn0pO1xuICAgIH0pLmNhdGNoKFxuICAgICAgICBlcnIgPT4gY29uc29sZS5sb2coZXJyKVxuICAgICk7XG59O1xuXG5leHBvcnRzLnNlYXJjaFBlcmZvcm1lciA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIGNvbnN0IHRpdGxlID0gJyUnICsgcmVxLnF1ZXJ5LnRpdGxlICsgJyUnO1xuICAgIFBlcmZvcm1lci5maW5kQWxsKHt3aGVyZSA6IHt0aXRsZSA6IHtbT3AubGlrZV0gOiB0aXRsZX19fSlcbiAgICAudGhlbigocGVyZm9ybWVycykgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhwZXJmb3JtZXJzKTtcbiAgICAgICAgcmVzLmpzb24oe3BlcmZvcm1lcnMgOiBwZXJmb3JtZXJzfSk7XG4gICAgfSkuY2F0Y2goXG4gICAgICAgIGVyciA9PiBjb25zb2xlLmxvZyhlcnIpXG4gICAgKTtcbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "performer.js"
      ],
      "names": [
        "require",
        "validationResult",
        "Sequelize",
        "Op",
        "path",
        "fs",
        "Performer",
        "User",
        "exports",
        "getPerformers",
        "req",
        "res",
        "next",
        "findAll",
        "include",
        "model",
        "attributes",
        "then",
        "performers",
        "console",
        "log",
        "json",
        "err",
        "getPerformer",
        "performerId",
        "params",
        "id",
        "findByPk",
        "performer",
        "status",
        "messages",
        "searchPerformer",
        "title",
        "query",
        "where",
        "like"
      ],
      "mappings": ";;;;eAA6BA,OAAO,CAAC,yBAAD,C;IAA5BC,gB,YAAAA,gB;;AACR,IAAMC,SAAS,GAAGF,OAAO,CAAC,WAAD,CAAzB;;AACA,IAAMG,EAAE,GAAGD,SAAS,CAACC,EAArB;;AACA,IAAMC,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMK,EAAE,GAAGL,OAAO,CAAC,IAAD,CAAlB;;AAEA,IAAMM,SAAS,GAAGN,OAAO,CAAC,qBAAD,CAAzB;;AACA,IAAMO,IAAI,GAAGP,OAAO,CAAC,gBAAD,CAApB;;AAEAQ,OAAO,CAACC,aAAR,GAAwB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxCN,EAAAA,SAAS,CAACO,OAAV,CAAkB;AAACC,IAAAA,OAAO,EAAG,CAAC;AAACC,MAAAA,KAAK,EAAGR,IAAT;AAAeS,MAAAA,UAAU,EAAG,CAAC,IAAD,EAAO,MAAP,EAAe,WAAf;AAA5B,KAAD;AAAX,GAAlB,EACCC,IADD,CACM,UAACC,UAAD,EAAgB;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACAP,IAAAA,GAAG,CAACU,IAAJ,CAAS;AAACH,MAAAA,UAAU,EAAGA;AAAd,KAAT;AACH,GAJD,WAKI,UAAAI,GAAG;AAAA,WAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAAJ;AAAA,GALP;AAOH,CARD;;AAUAd,OAAO,CAACe,YAAR,GAAuB,UAACb,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACvC,MAAMY,WAAW,GAAGd,GAAG,CAACe,MAAJ,CAAWC,EAA/B;AACApB,EAAAA,SAAS,CAACqB,QAAV,CAAmBH,WAAnB,EACCP,IADD,CACM,UAACW,SAAD,EAAe;AACjB,QAAG,CAACA,SAAJ,EAAe;AACXjB,MAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB;AACjBS,QAAAA,QAAQ,EAAG;AADM,OAArB;AAGH;;AACDnB,IAAAA,GAAG,CAACU,IAAJ,CAAS;AAACO,MAAAA,SAAS,EAAGA;AAAb,KAAT;AACH,GARD,WASI,UAAAN,GAAG;AAAA,WAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAAJ;AAAA,GATP;AAWH,CAbD;;AAeAd,OAAO,CAACuB,eAAR,GAA0B,UAACrB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1C,MAAMoB,KAAK,GAAG,MAAMtB,GAAG,CAACuB,KAAJ,CAAUD,KAAhB,GAAwB,GAAtC;AACA1B,EAAAA,SAAS,CAACO,OAAV,CAAkB;AAACqB,IAAAA,KAAK,EAAG;AAACF,MAAAA,KAAK,sBAAK7B,EAAE,CAACgC,IAAR,EAAgBH,KAAhB;AAAN;AAAT,GAAlB,EACCf,IADD,CACM,UAACC,UAAD,EAAgB;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACAP,IAAAA,GAAG,CAACU,IAAJ,CAAS;AAACH,MAAAA,UAAU,EAAGA;AAAd,KAAT;AACH,GAJD,WAKI,UAAAI,GAAG;AAAA,WAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAAJ;AAAA,GALP;AAOH,CATD",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers",
      "sourcesContent": [
        "const { validationResult } = require('express-validator/check');\nconst Sequelize = require('sequelize');\nconst Op = Sequelize.Op;\nconst path = require('path');\nconst fs = require('fs');\n\nconst Performer = require('../models/performer');\nconst User = require('../models/user');\n\nexports.getPerformers = (req, res, next) => {\n    Performer.findAll({include : [{model : User, attributes : ['id', 'name', 'updatedAt']}]})\n    .then((performers) => {\n        console.log(performers);\n        res.json({performers : performers});\n    }).catch(\n        err => console.log(err)\n    );\n};\n\nexports.getPerformer = (req, res, next) => {\n    const performerId = req.params.id;\n    Performer.findByPk(performerId)\n    .then((performer) => {\n        if(!performer) {\n            res.status(404).json({\n                messages : 'Performer Not Found',\n            });\n        }\n        res.json({performer : performer});\n    }).catch(\n        err => console.log(err)\n    );\n};\n\nexports.searchPerformer = (req, res, next) => {\n    const title = '%' + req.query.title + '%';\n    Performer.findAll({where : {title : {[Op.like] : title}}})\n    .then((performers) => {\n        console.log(performers);\n        res.json({performers : performers});\n    }).catch(\n        err => console.log(err)\n    );\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1577122669106
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/routes/seminary.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes/seminary.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes/seminary.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes/seminary.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes",
        "sourceFileName": "seminary.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar _require = require('express-validator/check'),\n    body = _require.body,\n    query = _require.query;\n\nvar router = express.Router();\n\nvar isAuth = require('../middleware/is-auth');\n\nvar seminaryController = require('../controllers/seminary');\n\nvar path = require('path');\n\nvar multer = require('multer');\n\nvar uuidv4 = require('uuid/v4');\n\nvar storage = multer.diskStorage({\n  destination: function destination(req, file, callback) {\n    callback(null, 'public/images');\n  },\n  filename: function filename(req, file, callback) {\n    //callback(null, Date.now() + '-' + file.originalname);\n    callback(null, uuidv4() + path.extname(file.originalname));\n  }\n});\n\nvar fileFilter = function fileFilter(req, file, callback) {\n  if (file.mimetype == 'image/png' || file.mimetype == 'image/jpg' || file.mimetype == 'image/jpeg') {\n    callback(null, true);\n  } else {\n    req.fileValidationError = \"Estensione non consentita solo: 'image/jpg' | 'image/png' | 'image/jpeg'\";\n    callback(null, false);\n  }\n};\n\nvar upload = multer({\n  storage: storage,\n  fileFilter: fileFilter\n});\nvar cpUpload = upload.single('image');\nrouter.get('/seminary', seminaryController.getSeminaries);\nrouter.get('/seminary/search', seminaryController.searchSeminary);\nrouter.get('/seminary/:id', seminaryController.getSeminary);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlbWluYXJ5LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwiYm9keSIsInF1ZXJ5Iiwicm91dGVyIiwiUm91dGVyIiwiaXNBdXRoIiwic2VtaW5hcnlDb250cm9sbGVyIiwicGF0aCIsIm11bHRlciIsInV1aWR2NCIsInN0b3JhZ2UiLCJkaXNrU3RvcmFnZSIsImRlc3RpbmF0aW9uIiwicmVxIiwiZmlsZSIsImNhbGxiYWNrIiwiZmlsZW5hbWUiLCJleHRuYW1lIiwib3JpZ2luYWxuYW1lIiwiZmlsZUZpbHRlciIsIm1pbWV0eXBlIiwiZmlsZVZhbGlkYXRpb25FcnJvciIsInVwbG9hZCIsImNwVXBsb2FkIiwic2luZ2xlIiwiZ2V0IiwiZ2V0U2VtaW5hcmllcyIsInNlYXJjaFNlbWluYXJ5IiwiZ2V0U2VtaW5hcnkiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O2VBQ3dCQSxPQUFPLENBQUMseUJBQUQsQztJQUF2QkMsSSxZQUFBQSxJO0lBQU1DLEssWUFBQUEsSzs7QUFDZCxJQUFNQyxNQUFNLEdBQUdKLE9BQU8sQ0FBQ0ssTUFBUixFQUFmOztBQUVBLElBQU1DLE1BQU0sR0FBR0wsT0FBTyxDQUFDLHVCQUFELENBQXRCOztBQUVBLElBQU1NLGtCQUFrQixHQUFHTixPQUFPLENBQUMseUJBQUQsQ0FBbEM7O0FBRUEsSUFBTU8sSUFBSSxHQUFHUCxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxJQUFNUSxNQUFNLEdBQUdSLE9BQU8sQ0FBQyxRQUFELENBQXRCOztBQUNBLElBQU1TLE1BQU0sR0FBR1QsT0FBTyxDQUFDLFNBQUQsQ0FBdEI7O0FBRUEsSUFBTVUsT0FBTyxHQUFHRixNQUFNLENBQUNHLFdBQVAsQ0FBbUI7QUFDL0JDLEVBQUFBLFdBQVcsRUFBRyxxQkFBQ0MsR0FBRCxFQUFNQyxJQUFOLEVBQVlDLFFBQVosRUFBeUI7QUFDbkNBLElBQUFBLFFBQVEsQ0FBQyxJQUFELEVBQU8sZUFBUCxDQUFSO0FBQ0gsR0FIOEI7QUFJL0JDLEVBQUFBLFFBQVEsRUFBRyxrQkFBQ0gsR0FBRCxFQUFNQyxJQUFOLEVBQVlDLFFBQVosRUFBeUI7QUFDaEM7QUFDQUEsSUFBQUEsUUFBUSxDQUFDLElBQUQsRUFBT04sTUFBTSxLQUFLRixJQUFJLENBQUNVLE9BQUwsQ0FBYUgsSUFBSSxDQUFDSSxZQUFsQixDQUFsQixDQUFSO0FBQ0g7QUFQOEIsQ0FBbkIsQ0FBaEI7O0FBVUEsSUFBTUMsVUFBVSxHQUFJLFNBQWRBLFVBQWMsQ0FBQ04sR0FBRCxFQUFNQyxJQUFOLEVBQVlDLFFBQVosRUFBeUI7QUFDekMsTUFBR0QsSUFBSSxDQUFDTSxRQUFMLElBQWlCLFdBQWpCLElBQWdDTixJQUFJLENBQUNNLFFBQUwsSUFBaUIsV0FBakQsSUFBZ0VOLElBQUksQ0FBQ00sUUFBTCxJQUFpQixZQUFwRixFQUFrRztBQUM5RkwsSUFBQUEsUUFBUSxDQUFDLElBQUQsRUFBTyxJQUFQLENBQVI7QUFDSCxHQUZELE1BRU87QUFDSEYsSUFBQUEsR0FBRyxDQUFDUSxtQkFBSixHQUEwQiwwRUFBMUI7QUFDQU4sSUFBQUEsUUFBUSxDQUFDLElBQUQsRUFBTyxLQUFQLENBQVI7QUFDSDtBQUNKLENBUEQ7O0FBU0EsSUFBSU8sTUFBTSxHQUFHZCxNQUFNLENBQUM7QUFBRUUsRUFBQUEsT0FBTyxFQUFHQSxPQUFaO0FBQXFCUyxFQUFBQSxVQUFVLEVBQUdBO0FBQWxDLENBQUQsQ0FBbkI7QUFFQSxJQUFJSSxRQUFRLEdBQUdELE1BQU0sQ0FBQ0UsTUFBUCxDQUFjLE9BQWQsQ0FBZjtBQUVBckIsTUFBTSxDQUFDc0IsR0FBUCxDQUFXLFdBQVgsRUFBd0JuQixrQkFBa0IsQ0FBQ29CLGFBQTNDO0FBQ0F2QixNQUFNLENBQUNzQixHQUFQLENBQVcsa0JBQVgsRUFBK0JuQixrQkFBa0IsQ0FBQ3FCLGNBQWxEO0FBQ0F4QixNQUFNLENBQUNzQixHQUFQLENBQVcsZUFBWCxFQUE0Qm5CLGtCQUFrQixDQUFDc0IsV0FBL0M7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCM0IsTUFBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL0FsZXNzYW5kcm9fTXVzb2xpbm8vRGVza3RvcC9maXJzdEFQSS9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xuY29uc3QgeyBib2R5LCBxdWVyeSB9ID0gcmVxdWlyZSgnZXhwcmVzcy12YWxpZGF0b3IvY2hlY2snKTtcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbmNvbnN0IGlzQXV0aCA9IHJlcXVpcmUoJy4uL21pZGRsZXdhcmUvaXMtYXV0aCcpO1xuXG5jb25zdCBzZW1pbmFyeUNvbnRyb2xsZXIgPSByZXF1aXJlKCcuLi9jb250cm9sbGVycy9zZW1pbmFyeScpO1xuXG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuY29uc3QgbXVsdGVyID0gcmVxdWlyZSgnbXVsdGVyJyk7XG5jb25zdCB1dWlkdjQgPSByZXF1aXJlKCd1dWlkL3Y0Jyk7XG5cbmNvbnN0IHN0b3JhZ2UgPSBtdWx0ZXIuZGlza1N0b3JhZ2Uoe1xuICAgIGRlc3RpbmF0aW9uIDogKHJlcSwgZmlsZSwgY2FsbGJhY2spID0+IHtcbiAgICAgICAgY2FsbGJhY2sobnVsbCwgJ3B1YmxpYy9pbWFnZXMnKTtcbiAgICB9LFxuICAgIGZpbGVuYW1lIDogKHJlcSwgZmlsZSwgY2FsbGJhY2spID0+IHtcbiAgICAgICAgLy9jYWxsYmFjayhudWxsLCBEYXRlLm5vdygpICsgJy0nICsgZmlsZS5vcmlnaW5hbG5hbWUpO1xuICAgICAgICBjYWxsYmFjayhudWxsLCB1dWlkdjQoKSArIHBhdGguZXh0bmFtZShmaWxlLm9yaWdpbmFsbmFtZSkpO1xuICAgIH0sXG59KTtcblxuY29uc3QgZmlsZUZpbHRlciA9ICgocmVxLCBmaWxlLCBjYWxsYmFjaykgPT4ge1xuICAgIGlmKGZpbGUubWltZXR5cGUgPT0gJ2ltYWdlL3BuZycgfHwgZmlsZS5taW1ldHlwZSA9PSAnaW1hZ2UvanBnJyB8fCBmaWxlLm1pbWV0eXBlID09ICdpbWFnZS9qcGVnJykge1xuICAgICAgICBjYWxsYmFjayhudWxsLCB0cnVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXEuZmlsZVZhbGlkYXRpb25FcnJvciA9IFwiRXN0ZW5zaW9uZSBub24gY29uc2VudGl0YSBzb2xvOiAnaW1hZ2UvanBnJyB8ICdpbWFnZS9wbmcnIHwgJ2ltYWdlL2pwZWcnXCI7XG4gICAgICAgIGNhbGxiYWNrKG51bGwsIGZhbHNlKTtcbiAgICB9XG59KTtcblxudmFyIHVwbG9hZCA9IG11bHRlcih7IHN0b3JhZ2UgOiBzdG9yYWdlLCBmaWxlRmlsdGVyIDogZmlsZUZpbHRlcn0pO1xuXG52YXIgY3BVcGxvYWQgPSB1cGxvYWQuc2luZ2xlKCdpbWFnZScpO1xuXG5yb3V0ZXIuZ2V0KCcvc2VtaW5hcnknLCBzZW1pbmFyeUNvbnRyb2xsZXIuZ2V0U2VtaW5hcmllcyk7XG5yb3V0ZXIuZ2V0KCcvc2VtaW5hcnkvc2VhcmNoJywgc2VtaW5hcnlDb250cm9sbGVyLnNlYXJjaFNlbWluYXJ5KTtcbnJvdXRlci5nZXQoJy9zZW1pbmFyeS86aWQnLCBzZW1pbmFyeUNvbnRyb2xsZXIuZ2V0U2VtaW5hcnkpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "seminary.js"
      ],
      "names": [
        "express",
        "require",
        "body",
        "query",
        "router",
        "Router",
        "isAuth",
        "seminaryController",
        "path",
        "multer",
        "uuidv4",
        "storage",
        "diskStorage",
        "destination",
        "req",
        "file",
        "callback",
        "filename",
        "extname",
        "originalname",
        "fileFilter",
        "mimetype",
        "fileValidationError",
        "upload",
        "cpUpload",
        "single",
        "get",
        "getSeminaries",
        "searchSeminary",
        "getSeminary",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;eACwBA,OAAO,CAAC,yBAAD,C;IAAvBC,I,YAAAA,I;IAAMC,K,YAAAA,K;;AACd,IAAMC,MAAM,GAAGJ,OAAO,CAACK,MAAR,EAAf;;AAEA,IAAMC,MAAM,GAAGL,OAAO,CAAC,uBAAD,CAAtB;;AAEA,IAAMM,kBAAkB,GAAGN,OAAO,CAAC,yBAAD,CAAlC;;AAEA,IAAMO,IAAI,GAAGP,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMQ,MAAM,GAAGR,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMS,MAAM,GAAGT,OAAO,CAAC,SAAD,CAAtB;;AAEA,IAAMU,OAAO,GAAGF,MAAM,CAACG,WAAP,CAAmB;AAC/BC,EAAAA,WAAW,EAAG,qBAACC,GAAD,EAAMC,IAAN,EAAYC,QAAZ,EAAyB;AACnCA,IAAAA,QAAQ,CAAC,IAAD,EAAO,eAAP,CAAR;AACH,GAH8B;AAI/BC,EAAAA,QAAQ,EAAG,kBAACH,GAAD,EAAMC,IAAN,EAAYC,QAAZ,EAAyB;AAChC;AACAA,IAAAA,QAAQ,CAAC,IAAD,EAAON,MAAM,KAAKF,IAAI,CAACU,OAAL,CAAaH,IAAI,CAACI,YAAlB,CAAlB,CAAR;AACH;AAP8B,CAAnB,CAAhB;;AAUA,IAAMC,UAAU,GAAI,SAAdA,UAAc,CAACN,GAAD,EAAMC,IAAN,EAAYC,QAAZ,EAAyB;AACzC,MAAGD,IAAI,CAACM,QAAL,IAAiB,WAAjB,IAAgCN,IAAI,CAACM,QAAL,IAAiB,WAAjD,IAAgEN,IAAI,CAACM,QAAL,IAAiB,YAApF,EAAkG;AAC9FL,IAAAA,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAR;AACH,GAFD,MAEO;AACHF,IAAAA,GAAG,CAACQ,mBAAJ,GAA0B,0EAA1B;AACAN,IAAAA,QAAQ,CAAC,IAAD,EAAO,KAAP,CAAR;AACH;AACJ,CAPD;;AASA,IAAIO,MAAM,GAAGd,MAAM,CAAC;AAAEE,EAAAA,OAAO,EAAGA,OAAZ;AAAqBS,EAAAA,UAAU,EAAGA;AAAlC,CAAD,CAAnB;AAEA,IAAII,QAAQ,GAAGD,MAAM,CAACE,MAAP,CAAc,OAAd,CAAf;AAEArB,MAAM,CAACsB,GAAP,CAAW,WAAX,EAAwBnB,kBAAkB,CAACoB,aAA3C;AACAvB,MAAM,CAACsB,GAAP,CAAW,kBAAX,EAA+BnB,kBAAkB,CAACqB,cAAlD;AACAxB,MAAM,CAACsB,GAAP,CAAW,eAAX,EAA4BnB,kBAAkB,CAACsB,WAA/C;AAEAC,MAAM,CAACC,OAAP,GAAiB3B,MAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes",
      "sourcesContent": [
        "const express = require('express');\nconst { body, query } = require('express-validator/check');\nconst router = express.Router();\n\nconst isAuth = require('../middleware/is-auth');\n\nconst seminaryController = require('../controllers/seminary');\n\nconst path = require('path');\nconst multer = require('multer');\nconst uuidv4 = require('uuid/v4');\n\nconst storage = multer.diskStorage({\n    destination : (req, file, callback) => {\n        callback(null, 'public/images');\n    },\n    filename : (req, file, callback) => {\n        //callback(null, Date.now() + '-' + file.originalname);\n        callback(null, uuidv4() + path.extname(file.originalname));\n    },\n});\n\nconst fileFilter = ((req, file, callback) => {\n    if(file.mimetype == 'image/png' || file.mimetype == 'image/jpg' || file.mimetype == 'image/jpeg') {\n        callback(null, true);\n    } else {\n        req.fileValidationError = \"Estensione non consentita solo: 'image/jpg' | 'image/png' | 'image/jpeg'\";\n        callback(null, false);\n    }\n});\n\nvar upload = multer({ storage : storage, fileFilter : fileFilter});\n\nvar cpUpload = upload.single('image');\n\nrouter.get('/seminary', seminaryController.getSeminaries);\nrouter.get('/seminary/search', seminaryController.searchSeminary);\nrouter.get('/seminary/:id', seminaryController.getSeminary);\n\nmodule.exports = router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1577442390794
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/controllers/seminary.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers/seminary.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers/seminary.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers/seminary.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers",
        "sourceFileName": "seminary.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _require = require('express-validator/check'),\n    validationResult = _require.validationResult;\n\nvar Sequelize = require('sequelize');\n\nvar Op = Sequelize.Op;\n\nvar path = require('path');\n\nvar fs = require('fs');\n\nvar Seminary = require('../models/seminary');\n\nvar User = require('../models/user');\n\nexports.getSeminaries = function (req, res, next) {\n  Seminary.findAll({\n    include: [{\n      model: User,\n      attributes: ['id', 'name', 'updatedAt']\n    }]\n  }).then(function (seminaries) {\n    console.log(seminaries);\n    res.json({\n      seminaries: seminaries\n    });\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\n\nexports.getSeminary = function (req, res, next) {\n  var seminaryId = req.params.id;\n  Seminary.findByPk(seminaryId).then(function (seminary) {\n    if (!seminary) {\n      res.status(404).json({\n        messages: 'Seminary Not Found'\n      });\n    }\n\n    res.json({\n      seminary: seminary\n    });\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\n\nexports.searchSeminary = function (req, res, next) {\n  var title = '%' + req.query.title + '%';\n  Seminary.findAll({\n    where: {\n      title: _defineProperty({}, Op.like, title)\n    }\n  }).then(function (seminaries) {\n    console.log(seminaries);\n    res.json({\n      seminaries: seminaries\n    });\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlbWluYXJ5LmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJ2YWxpZGF0aW9uUmVzdWx0IiwiU2VxdWVsaXplIiwiT3AiLCJwYXRoIiwiZnMiLCJTZW1pbmFyeSIsIlVzZXIiLCJleHBvcnRzIiwiZ2V0U2VtaW5hcmllcyIsInJlcSIsInJlcyIsIm5leHQiLCJmaW5kQWxsIiwiaW5jbHVkZSIsIm1vZGVsIiwiYXR0cmlidXRlcyIsInRoZW4iLCJzZW1pbmFyaWVzIiwiY29uc29sZSIsImxvZyIsImpzb24iLCJlcnIiLCJnZXRTZW1pbmFyeSIsInNlbWluYXJ5SWQiLCJwYXJhbXMiLCJpZCIsImZpbmRCeVBrIiwic2VtaW5hcnkiLCJzdGF0dXMiLCJtZXNzYWdlcyIsInNlYXJjaFNlbWluYXJ5IiwidGl0bGUiLCJxdWVyeSIsIndoZXJlIiwibGlrZSJdLCJtYXBwaW5ncyI6Ijs7OztlQUE2QkEsT0FBTyxDQUFDLHlCQUFELEM7SUFBNUJDLGdCLFlBQUFBLGdCOztBQUNSLElBQU1DLFNBQVMsR0FBR0YsT0FBTyxDQUFDLFdBQUQsQ0FBekI7O0FBQ0EsSUFBTUcsRUFBRSxHQUFHRCxTQUFTLENBQUNDLEVBQXJCOztBQUNBLElBQU1DLElBQUksR0FBR0osT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTUssRUFBRSxHQUFHTCxPQUFPLENBQUMsSUFBRCxDQUFsQjs7QUFFQSxJQUFNTSxRQUFRLEdBQUdOLE9BQU8sQ0FBQyxvQkFBRCxDQUF4Qjs7QUFDQSxJQUFNTyxJQUFJLEdBQUdQLE9BQU8sQ0FBQyxnQkFBRCxDQUFwQjs7QUFFQVEsT0FBTyxDQUFDQyxhQUFSLEdBQXdCLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEVBQW9CO0FBQ3hDTixFQUFBQSxRQUFRLENBQUNPLE9BQVQsQ0FBaUI7QUFBQ0MsSUFBQUEsT0FBTyxFQUFHLENBQUM7QUFBQ0MsTUFBQUEsS0FBSyxFQUFHUixJQUFUO0FBQWVTLE1BQUFBLFVBQVUsRUFBRyxDQUFDLElBQUQsRUFBTyxNQUFQLEVBQWUsV0FBZjtBQUE1QixLQUFEO0FBQVgsR0FBakIsRUFDQ0MsSUFERCxDQUNNLFVBQUNDLFVBQUQsRUFBZ0I7QUFDbEJDLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixVQUFaO0FBQ0FQLElBQUFBLEdBQUcsQ0FBQ1UsSUFBSixDQUFTO0FBQUNILE1BQUFBLFVBQVUsRUFBR0E7QUFBZCxLQUFUO0FBQ0gsR0FKRCxXQUtJLFVBQUFJLEdBQUc7QUFBQSxXQUFJSCxPQUFPLENBQUNDLEdBQVIsQ0FBWUUsR0FBWixDQUFKO0FBQUEsR0FMUDtBQU9ILENBUkQ7O0FBVUFkLE9BQU8sQ0FBQ2UsV0FBUixHQUFzQixVQUFDYixHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFvQjtBQUN0QyxNQUFNWSxVQUFVLEdBQUdkLEdBQUcsQ0FBQ2UsTUFBSixDQUFXQyxFQUE5QjtBQUNBcEIsRUFBQUEsUUFBUSxDQUFDcUIsUUFBVCxDQUFrQkgsVUFBbEIsRUFDQ1AsSUFERCxDQUNNLFVBQUNXLFFBQUQsRUFBYztBQUNoQixRQUFHLENBQUNBLFFBQUosRUFBYztBQUNWakIsTUFBQUEsR0FBRyxDQUFDa0IsTUFBSixDQUFXLEdBQVgsRUFBZ0JSLElBQWhCLENBQXFCO0FBQ2pCUyxRQUFBQSxRQUFRLEVBQUc7QUFETSxPQUFyQjtBQUdIOztBQUNEbkIsSUFBQUEsR0FBRyxDQUFDVSxJQUFKLENBQVM7QUFBQ08sTUFBQUEsUUFBUSxFQUFHQTtBQUFaLEtBQVQ7QUFDSCxHQVJELFdBU0ksVUFBQU4sR0FBRztBQUFBLFdBQUlILE9BQU8sQ0FBQ0MsR0FBUixDQUFZRSxHQUFaLENBQUo7QUFBQSxHQVRQO0FBV0gsQ0FiRDs7QUFlQWQsT0FBTyxDQUFDdUIsY0FBUixHQUF5QixVQUFDckIsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsRUFBb0I7QUFDekMsTUFBTW9CLEtBQUssR0FBRyxNQUFNdEIsR0FBRyxDQUFDdUIsS0FBSixDQUFVRCxLQUFoQixHQUF3QixHQUF0QztBQUNBMUIsRUFBQUEsUUFBUSxDQUFDTyxPQUFULENBQWlCO0FBQUNxQixJQUFBQSxLQUFLLEVBQUc7QUFBQ0YsTUFBQUEsS0FBSyxzQkFBSzdCLEVBQUUsQ0FBQ2dDLElBQVIsRUFBZ0JILEtBQWhCO0FBQU47QUFBVCxHQUFqQixFQUNDZixJQURELENBQ00sVUFBQ0MsVUFBRCxFQUFnQjtBQUNsQkMsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlGLFVBQVo7QUFDQVAsSUFBQUEsR0FBRyxDQUFDVSxJQUFKLENBQVM7QUFBQ0gsTUFBQUEsVUFBVSxFQUFHQTtBQUFkLEtBQVQ7QUFDSCxHQUpELFdBS0ksVUFBQUksR0FBRztBQUFBLFdBQUlILE9BQU8sQ0FBQ0MsR0FBUixDQUFZRSxHQUFaLENBQUo7QUFBQSxHQUxQO0FBT0gsQ0FURCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvQWxlc3NhbmRyb19NdXNvbGluby9EZXNrdG9wL2ZpcnN0QVBJL2NvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyB2YWxpZGF0aW9uUmVzdWx0IH0gPSByZXF1aXJlKCdleHByZXNzLXZhbGlkYXRvci9jaGVjaycpO1xuY29uc3QgU2VxdWVsaXplID0gcmVxdWlyZSgnc2VxdWVsaXplJyk7XG5jb25zdCBPcCA9IFNlcXVlbGl6ZS5PcDtcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5jb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG5cbmNvbnN0IFNlbWluYXJ5ID0gcmVxdWlyZSgnLi4vbW9kZWxzL3NlbWluYXJ5Jyk7XG5jb25zdCBVc2VyID0gcmVxdWlyZSgnLi4vbW9kZWxzL3VzZXInKTtcblxuZXhwb3J0cy5nZXRTZW1pbmFyaWVzID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgU2VtaW5hcnkuZmluZEFsbCh7aW5jbHVkZSA6IFt7bW9kZWwgOiBVc2VyLCBhdHRyaWJ1dGVzIDogWydpZCcsICduYW1lJywgJ3VwZGF0ZWRBdCddfV19KVxuICAgIC50aGVuKChzZW1pbmFyaWVzKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKHNlbWluYXJpZXMpO1xuICAgICAgICByZXMuanNvbih7c2VtaW5hcmllcyA6IHNlbWluYXJpZXN9KTtcbiAgICB9KS5jYXRjaChcbiAgICAgICAgZXJyID0+IGNvbnNvbGUubG9nKGVycilcbiAgICApO1xufTtcblxuZXhwb3J0cy5nZXRTZW1pbmFyeSA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIGNvbnN0IHNlbWluYXJ5SWQgPSByZXEucGFyYW1zLmlkO1xuICAgIFNlbWluYXJ5LmZpbmRCeVBrKHNlbWluYXJ5SWQpXG4gICAgLnRoZW4oKHNlbWluYXJ5KSA9PiB7XG4gICAgICAgIGlmKCFzZW1pbmFyeSkge1xuICAgICAgICAgICAgcmVzLnN0YXR1cyg0MDQpLmpzb24oe1xuICAgICAgICAgICAgICAgIG1lc3NhZ2VzIDogJ1NlbWluYXJ5IE5vdCBGb3VuZCcsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXMuanNvbih7c2VtaW5hcnkgOiBzZW1pbmFyeX0pO1xuICAgIH0pLmNhdGNoKFxuICAgICAgICBlcnIgPT4gY29uc29sZS5sb2coZXJyKVxuICAgICk7XG59O1xuXG5leHBvcnRzLnNlYXJjaFNlbWluYXJ5ID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgY29uc3QgdGl0bGUgPSAnJScgKyByZXEucXVlcnkudGl0bGUgKyAnJSc7XG4gICAgU2VtaW5hcnkuZmluZEFsbCh7d2hlcmUgOiB7dGl0bGUgOiB7W09wLmxpa2VdIDogdGl0bGV9fX0pXG4gICAgLnRoZW4oKHNlbWluYXJpZXMpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coc2VtaW5hcmllcyk7XG4gICAgICAgIHJlcy5qc29uKHtzZW1pbmFyaWVzIDogc2VtaW5hcmllc30pO1xuICAgIH0pLmNhdGNoKFxuICAgICAgICBlcnIgPT4gY29uc29sZS5sb2coZXJyKVxuICAgICk7XG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "seminary.js"
      ],
      "names": [
        "require",
        "validationResult",
        "Sequelize",
        "Op",
        "path",
        "fs",
        "Seminary",
        "User",
        "exports",
        "getSeminaries",
        "req",
        "res",
        "next",
        "findAll",
        "include",
        "model",
        "attributes",
        "then",
        "seminaries",
        "console",
        "log",
        "json",
        "err",
        "getSeminary",
        "seminaryId",
        "params",
        "id",
        "findByPk",
        "seminary",
        "status",
        "messages",
        "searchSeminary",
        "title",
        "query",
        "where",
        "like"
      ],
      "mappings": ";;;;eAA6BA,OAAO,CAAC,yBAAD,C;IAA5BC,gB,YAAAA,gB;;AACR,IAAMC,SAAS,GAAGF,OAAO,CAAC,WAAD,CAAzB;;AACA,IAAMG,EAAE,GAAGD,SAAS,CAACC,EAArB;;AACA,IAAMC,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMK,EAAE,GAAGL,OAAO,CAAC,IAAD,CAAlB;;AAEA,IAAMM,QAAQ,GAAGN,OAAO,CAAC,oBAAD,CAAxB;;AACA,IAAMO,IAAI,GAAGP,OAAO,CAAC,gBAAD,CAApB;;AAEAQ,OAAO,CAACC,aAAR,GAAwB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxCN,EAAAA,QAAQ,CAACO,OAAT,CAAiB;AAACC,IAAAA,OAAO,EAAG,CAAC;AAACC,MAAAA,KAAK,EAAGR,IAAT;AAAeS,MAAAA,UAAU,EAAG,CAAC,IAAD,EAAO,MAAP,EAAe,WAAf;AAA5B,KAAD;AAAX,GAAjB,EACCC,IADD,CACM,UAACC,UAAD,EAAgB;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACAP,IAAAA,GAAG,CAACU,IAAJ,CAAS;AAACH,MAAAA,UAAU,EAAGA;AAAd,KAAT;AACH,GAJD,WAKI,UAAAI,GAAG;AAAA,WAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAAJ;AAAA,GALP;AAOH,CARD;;AAUAd,OAAO,CAACe,WAAR,GAAsB,UAACb,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACtC,MAAMY,UAAU,GAAGd,GAAG,CAACe,MAAJ,CAAWC,EAA9B;AACApB,EAAAA,QAAQ,CAACqB,QAAT,CAAkBH,UAAlB,EACCP,IADD,CACM,UAACW,QAAD,EAAc;AAChB,QAAG,CAACA,QAAJ,EAAc;AACVjB,MAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB;AACjBS,QAAAA,QAAQ,EAAG;AADM,OAArB;AAGH;;AACDnB,IAAAA,GAAG,CAACU,IAAJ,CAAS;AAACO,MAAAA,QAAQ,EAAGA;AAAZ,KAAT;AACH,GARD,WASI,UAAAN,GAAG;AAAA,WAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAAJ;AAAA,GATP;AAWH,CAbD;;AAeAd,OAAO,CAACuB,cAAR,GAAyB,UAACrB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACzC,MAAMoB,KAAK,GAAG,MAAMtB,GAAG,CAACuB,KAAJ,CAAUD,KAAhB,GAAwB,GAAtC;AACA1B,EAAAA,QAAQ,CAACO,OAAT,CAAiB;AAACqB,IAAAA,KAAK,EAAG;AAACF,MAAAA,KAAK,sBAAK7B,EAAE,CAACgC,IAAR,EAAgBH,KAAhB;AAAN;AAAT,GAAjB,EACCf,IADD,CACM,UAACC,UAAD,EAAgB;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACAP,IAAAA,GAAG,CAACU,IAAJ,CAAS;AAACH,MAAAA,UAAU,EAAGA;AAAd,KAAT;AACH,GAJD,WAKI,UAAAI,GAAG;AAAA,WAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAAJ;AAAA,GALP;AAOH,CATD",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers",
      "sourcesContent": [
        "const { validationResult } = require('express-validator/check');\nconst Sequelize = require('sequelize');\nconst Op = Sequelize.Op;\nconst path = require('path');\nconst fs = require('fs');\n\nconst Seminary = require('../models/seminary');\nconst User = require('../models/user');\n\nexports.getSeminaries = (req, res, next) => {\n    Seminary.findAll({include : [{model : User, attributes : ['id', 'name', 'updatedAt']}]})\n    .then((seminaries) => {\n        console.log(seminaries);\n        res.json({seminaries : seminaries});\n    }).catch(\n        err => console.log(err)\n    );\n};\n\nexports.getSeminary = (req, res, next) => {\n    const seminaryId = req.params.id;\n    Seminary.findByPk(seminaryId)\n    .then((seminary) => {\n        if(!seminary) {\n            res.status(404).json({\n                messages : 'Seminary Not Found',\n            });\n        }\n        res.json({seminary : seminary});\n    }).catch(\n        err => console.log(err)\n    );\n};\n\nexports.searchSeminary = (req, res, next) => {\n    const title = '%' + req.query.title + '%';\n    Seminary.findAll({where : {title : {[Op.like] : title}}})\n    .then((seminaries) => {\n        console.log(seminaries);\n        res.json({seminaries : seminaries});\n    }).catch(\n        err => console.log(err)\n    );\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1577442427370
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/models/ticket.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/models/ticket.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/firstAPI/models/ticket.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/models/ticket.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/models",
        "sourceFileName": "ticket.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar Sequelize = require('sequelize');\n\nvar sequelize = require('../utils/database');\n\nvar Ticket = sequelize.define('ticket', {\n  id: {\n    type: Sequelize.INTEGER,\n    autoIncrement: true,\n    allowNull: false,\n    primaryKey: true\n  },\n  title: {\n    type: Sequelize.STRING,\n    allowNull: false\n  },\n  date: {\n    type: Sequelize.STRING,\n    allowNull: true\n  },\n  name: {\n    type: Sequelize.STRING,\n    allowNull: false\n  }\n});\nmodule.exports = Ticket;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRpY2tldC5qcyJdLCJuYW1lcyI6WyJTZXF1ZWxpemUiLCJyZXF1aXJlIiwic2VxdWVsaXplIiwiVGlja2V0IiwiZGVmaW5lIiwiaWQiLCJ0eXBlIiwiSU5URUdFUiIsImF1dG9JbmNyZW1lbnQiLCJhbGxvd051bGwiLCJwcmltYXJ5S2V5IiwidGl0bGUiLCJTVFJJTkciLCJkYXRlIiwibmFtZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsU0FBUyxHQUFHQyxPQUFPLENBQUMsV0FBRCxDQUF6Qjs7QUFFQSxJQUFNQyxTQUFTLEdBQUdELE9BQU8sQ0FBQyxtQkFBRCxDQUF6Qjs7QUFFQSxJQUFNRSxNQUFNLEdBQUdELFNBQVMsQ0FBQ0UsTUFBVixDQUFpQixRQUFqQixFQUEyQjtBQUN0Q0MsRUFBQUEsRUFBRSxFQUFHO0FBQ0RDLElBQUFBLElBQUksRUFBR04sU0FBUyxDQUFDTyxPQURoQjtBQUVEQyxJQUFBQSxhQUFhLEVBQUcsSUFGZjtBQUdEQyxJQUFBQSxTQUFTLEVBQUcsS0FIWDtBQUlEQyxJQUFBQSxVQUFVLEVBQUc7QUFKWixHQURpQztBQU90Q0MsRUFBQUEsS0FBSyxFQUFHO0FBQ0pMLElBQUFBLElBQUksRUFBR04sU0FBUyxDQUFDWSxNQURiO0FBRUpILElBQUFBLFNBQVMsRUFBRztBQUZSLEdBUDhCO0FBV3RDSSxFQUFBQSxJQUFJLEVBQUc7QUFDSFAsSUFBQUEsSUFBSSxFQUFHTixTQUFTLENBQUNZLE1BRGQ7QUFFSEgsSUFBQUEsU0FBUyxFQUFHO0FBRlQsR0FYK0I7QUFldENLLEVBQUFBLElBQUksRUFBRztBQUNIUixJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ1ksTUFEZDtBQUVISCxJQUFBQSxTQUFTLEVBQUc7QUFGVDtBQWYrQixDQUEzQixDQUFmO0FBcUJBTSxNQUFNLENBQUNDLE9BQVAsR0FBaUJiLE1BQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9BbGVzc2FuZHJvX011c29saW5vL0Rlc2t0b3AvZmlyc3RBUEkvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU2VxdWVsaXplID0gcmVxdWlyZSgnc2VxdWVsaXplJyk7XG5cbmNvbnN0IHNlcXVlbGl6ZSA9IHJlcXVpcmUoJy4uL3V0aWxzL2RhdGFiYXNlJyk7XG5cbmNvbnN0IFRpY2tldCA9IHNlcXVlbGl6ZS5kZWZpbmUoJ3RpY2tldCcsIHtcbiAgICBpZCA6IHtcbiAgICAgICAgdHlwZSA6IFNlcXVlbGl6ZS5JTlRFR0VSLFxuICAgICAgICBhdXRvSW5jcmVtZW50IDogdHJ1ZSxcbiAgICAgICAgYWxsb3dOdWxsIDogZmFsc2UsXG4gICAgICAgIHByaW1hcnlLZXkgOiB0cnVlXG4gICAgfSxcbiAgICB0aXRsZSA6IHtcbiAgICAgICAgdHlwZSA6IFNlcXVlbGl6ZS5TVFJJTkcsXG4gICAgICAgIGFsbG93TnVsbCA6IGZhbHNlLFxuICAgIH0sXG4gICAgZGF0ZSA6IHtcbiAgICAgICAgdHlwZSA6IFNlcXVlbGl6ZS5TVFJJTkcsXG4gICAgICAgIGFsbG93TnVsbCA6IHRydWUsXG4gICAgfSxcbiAgICBuYW1lIDoge1xuICAgICAgICB0eXBlIDogU2VxdWVsaXplLlNUUklORyxcbiAgICAgICAgYWxsb3dOdWxsIDogZmFsc2UsXG4gICAgfVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gVGlja2V0OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "ticket.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "sequelize",
        "Ticket",
        "define",
        "id",
        "type",
        "INTEGER",
        "autoIncrement",
        "allowNull",
        "primaryKey",
        "title",
        "STRING",
        "date",
        "name",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,IAAMC,SAAS,GAAGD,OAAO,CAAC,mBAAD,CAAzB;;AAEA,IAAME,MAAM,GAAGD,SAAS,CAACE,MAAV,CAAiB,QAAjB,EAA2B;AACtCC,EAAAA,EAAE,EAAG;AACDC,IAAAA,IAAI,EAAGN,SAAS,CAACO,OADhB;AAEDC,IAAAA,aAAa,EAAG,IAFf;AAGDC,IAAAA,SAAS,EAAG,KAHX;AAIDC,IAAAA,UAAU,EAAG;AAJZ,GADiC;AAOtCC,EAAAA,KAAK,EAAG;AACJL,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADb;AAEJH,IAAAA,SAAS,EAAG;AAFR,GAP8B;AAWtCI,EAAAA,IAAI,EAAG;AACHP,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADd;AAEHH,IAAAA,SAAS,EAAG;AAFT,GAX+B;AAetCK,EAAAA,IAAI,EAAG;AACHR,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADd;AAEHH,IAAAA,SAAS,EAAG;AAFT;AAf+B,CAA3B,CAAf;AAqBAM,MAAM,CAACC,OAAP,GAAiBb,MAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/models",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst Ticket = sequelize.define('ticket', {\n    id : {\n        type : Sequelize.INTEGER,\n        autoIncrement : true,\n        allowNull : false,\n        primaryKey : true\n    },\n    title : {\n        type : Sequelize.STRING,\n        allowNull : false,\n    },\n    date : {\n        type : Sequelize.STRING,\n        allowNull : true,\n    },\n    name : {\n        type : Sequelize.STRING,\n        allowNull : false,\n    }\n});\n\nmodule.exports = Ticket;"
      ]
    },
    "sourceType": "script",
    "mtime": 1577444667360
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/routes/reservation.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes/reservation.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes/reservation.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes/reservation.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes",
        "sourceFileName": "reservation.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar _require = require('express-validator/check'),\n    body = _require.body,\n    query = _require.query;\n\nvar router = express.Router();\n\nvar isAuth = require('../middleware/is-auth');\n\nvar reservationController = require('../controllers/reservation');\n\nvar path = require('path');\n\nvar multer = require('multer');\n\nvar uuidv4 = require('uuid/v4');\n\nvar storage = multer.diskStorage({\n  destination: function destination(req, file, callback) {\n    callback(null, 'public/images');\n  },\n  filename: function filename(req, file, callback) {\n    //callback(null, Date.now() + '-' + file.originalname);\n    callback(null, uuidv4() + path.extname(file.originalname));\n  }\n});\n\nvar fileFilter = function fileFilter(req, file, callback) {\n  if (file.mimetype == 'image/png' || file.mimetype == 'image/jpg' || file.mimetype == 'image/jpeg') {\n    callback(null, true);\n  } else {\n    req.fileValidationError = \"Estensione non consentita solo: 'image/jpg' | 'image/png' | 'image/jpeg'\";\n    callback(null, false);\n  }\n};\n\nvar upload = multer({\n  storage: storage,\n  fileFilter: fileFilter\n});\nvar cpUpload = upload.single('image');\nrouter.post('/ticket', [isAuth, cpUpload], [body('title').trim().isLowercase().withMessage('Titolo LowerCase').isLength({\n  min: 3\n}).withMessage('Titolo Maggiore di 3 Caratteri')], reservationController.createTicket);\nrouter.get('/ticket/user/me', isAuth, reservationController.getTicketsByMe);\nrouter.get('/ticket/search', reservationController.searchTicket);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc2VydmF0aW9uLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwiYm9keSIsInF1ZXJ5Iiwicm91dGVyIiwiUm91dGVyIiwiaXNBdXRoIiwicmVzZXJ2YXRpb25Db250cm9sbGVyIiwicGF0aCIsIm11bHRlciIsInV1aWR2NCIsInN0b3JhZ2UiLCJkaXNrU3RvcmFnZSIsImRlc3RpbmF0aW9uIiwicmVxIiwiZmlsZSIsImNhbGxiYWNrIiwiZmlsZW5hbWUiLCJleHRuYW1lIiwib3JpZ2luYWxuYW1lIiwiZmlsZUZpbHRlciIsIm1pbWV0eXBlIiwiZmlsZVZhbGlkYXRpb25FcnJvciIsInVwbG9hZCIsImNwVXBsb2FkIiwic2luZ2xlIiwicG9zdCIsInRyaW0iLCJpc0xvd2VyY2FzZSIsIndpdGhNZXNzYWdlIiwiaXNMZW5ndGgiLCJtaW4iLCJjcmVhdGVUaWNrZXQiLCJnZXQiLCJnZXRUaWNrZXRzQnlNZSIsInNlYXJjaFRpY2tldCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7ZUFDd0JBLE9BQU8sQ0FBQyx5QkFBRCxDO0lBQXZCQyxJLFlBQUFBLEk7SUFBTUMsSyxZQUFBQSxLOztBQUNkLElBQU1DLE1BQU0sR0FBR0osT0FBTyxDQUFDSyxNQUFSLEVBQWY7O0FBRUEsSUFBTUMsTUFBTSxHQUFHTCxPQUFPLENBQUMsdUJBQUQsQ0FBdEI7O0FBRUEsSUFBTU0scUJBQXFCLEdBQUdOLE9BQU8sQ0FBQyw0QkFBRCxDQUFyQzs7QUFFQSxJQUFNTyxJQUFJLEdBQUdQLE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUNBLElBQU1RLE1BQU0sR0FBR1IsT0FBTyxDQUFDLFFBQUQsQ0FBdEI7O0FBQ0EsSUFBTVMsTUFBTSxHQUFHVCxPQUFPLENBQUMsU0FBRCxDQUF0Qjs7QUFFQSxJQUFNVSxPQUFPLEdBQUdGLE1BQU0sQ0FBQ0csV0FBUCxDQUFtQjtBQUMvQkMsRUFBQUEsV0FBVyxFQUFHLHFCQUFDQyxHQUFELEVBQU1DLElBQU4sRUFBWUMsUUFBWixFQUF5QjtBQUNuQ0EsSUFBQUEsUUFBUSxDQUFDLElBQUQsRUFBTyxlQUFQLENBQVI7QUFDSCxHQUg4QjtBQUkvQkMsRUFBQUEsUUFBUSxFQUFHLGtCQUFDSCxHQUFELEVBQU1DLElBQU4sRUFBWUMsUUFBWixFQUF5QjtBQUNoQztBQUNBQSxJQUFBQSxRQUFRLENBQUMsSUFBRCxFQUFPTixNQUFNLEtBQUtGLElBQUksQ0FBQ1UsT0FBTCxDQUFhSCxJQUFJLENBQUNJLFlBQWxCLENBQWxCLENBQVI7QUFDSDtBQVA4QixDQUFuQixDQUFoQjs7QUFVQSxJQUFNQyxVQUFVLEdBQUksU0FBZEEsVUFBYyxDQUFDTixHQUFELEVBQU1DLElBQU4sRUFBWUMsUUFBWixFQUF5QjtBQUN6QyxNQUFHRCxJQUFJLENBQUNNLFFBQUwsSUFBaUIsV0FBakIsSUFBZ0NOLElBQUksQ0FBQ00sUUFBTCxJQUFpQixXQUFqRCxJQUFnRU4sSUFBSSxDQUFDTSxRQUFMLElBQWlCLFlBQXBGLEVBQWtHO0FBQzlGTCxJQUFBQSxRQUFRLENBQUMsSUFBRCxFQUFPLElBQVAsQ0FBUjtBQUNILEdBRkQsTUFFTztBQUNIRixJQUFBQSxHQUFHLENBQUNRLG1CQUFKLEdBQTBCLDBFQUExQjtBQUNBTixJQUFBQSxRQUFRLENBQUMsSUFBRCxFQUFPLEtBQVAsQ0FBUjtBQUNIO0FBQ0osQ0FQRDs7QUFTQSxJQUFJTyxNQUFNLEdBQUdkLE1BQU0sQ0FBQztBQUFFRSxFQUFBQSxPQUFPLEVBQUdBLE9BQVo7QUFBcUJTLEVBQUFBLFVBQVUsRUFBR0E7QUFBbEMsQ0FBRCxDQUFuQjtBQUVBLElBQUlJLFFBQVEsR0FBR0QsTUFBTSxDQUFDRSxNQUFQLENBQWMsT0FBZCxDQUFmO0FBRUFyQixNQUFNLENBQUNzQixJQUFQLENBQVksU0FBWixFQUF1QixDQUFDcEIsTUFBRCxFQUFTa0IsUUFBVCxDQUF2QixFQUNJLENBQ0l0QixJQUFJLENBQUMsT0FBRCxDQUFKLENBQWN5QixJQUFkLEdBQ0NDLFdBREQsR0FDZUMsV0FEZixDQUMyQixrQkFEM0IsRUFFQ0MsUUFGRCxDQUVVO0FBQUNDLEVBQUFBLEdBQUcsRUFBRztBQUFQLENBRlYsRUFFcUJGLFdBRnJCLENBRWlDLGdDQUZqQyxDQURKLENBREosRUFNQ3RCLHFCQUFxQixDQUFDeUIsWUFOdkI7QUFPQTVCLE1BQU0sQ0FBQzZCLEdBQVAsQ0FBVyxpQkFBWCxFQUE4QjNCLE1BQTlCLEVBQXFDQyxxQkFBcUIsQ0FBQzJCLGNBQTNEO0FBQ0E5QixNQUFNLENBQUM2QixHQUFQLENBQVcsZ0JBQVgsRUFBNkIxQixxQkFBcUIsQ0FBQzRCLFlBQW5EO0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmpDLE1BQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9BbGVzc2FuZHJvX011c29saW5vL0Rlc2t0b3AvZmlyc3RBUEkvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbmNvbnN0IHsgYm9keSwgcXVlcnkgfSA9IHJlcXVpcmUoJ2V4cHJlc3MtdmFsaWRhdG9yL2NoZWNrJyk7XG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuXG5jb25zdCBpc0F1dGggPSByZXF1aXJlKCcuLi9taWRkbGV3YXJlL2lzLWF1dGgnKTtcblxuY29uc3QgcmVzZXJ2YXRpb25Db250cm9sbGVyID0gcmVxdWlyZSgnLi4vY29udHJvbGxlcnMvcmVzZXJ2YXRpb24nKTtcblxuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbmNvbnN0IG11bHRlciA9IHJlcXVpcmUoJ211bHRlcicpO1xuY29uc3QgdXVpZHY0ID0gcmVxdWlyZSgndXVpZC92NCcpO1xuXG5jb25zdCBzdG9yYWdlID0gbXVsdGVyLmRpc2tTdG9yYWdlKHtcbiAgICBkZXN0aW5hdGlvbiA6IChyZXEsIGZpbGUsIGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIGNhbGxiYWNrKG51bGwsICdwdWJsaWMvaW1hZ2VzJyk7XG4gICAgfSxcbiAgICBmaWxlbmFtZSA6IChyZXEsIGZpbGUsIGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIC8vY2FsbGJhY2sobnVsbCwgRGF0ZS5ub3coKSArICctJyArIGZpbGUub3JpZ2luYWxuYW1lKTtcbiAgICAgICAgY2FsbGJhY2sobnVsbCwgdXVpZHY0KCkgKyBwYXRoLmV4dG5hbWUoZmlsZS5vcmlnaW5hbG5hbWUpKTtcbiAgICB9LFxufSk7XG5cbmNvbnN0IGZpbGVGaWx0ZXIgPSAoKHJlcSwgZmlsZSwgY2FsbGJhY2spID0+IHtcbiAgICBpZihmaWxlLm1pbWV0eXBlID09ICdpbWFnZS9wbmcnIHx8IGZpbGUubWltZXR5cGUgPT0gJ2ltYWdlL2pwZycgfHwgZmlsZS5taW1ldHlwZSA9PSAnaW1hZ2UvanBlZycpIHtcbiAgICAgICAgY2FsbGJhY2sobnVsbCwgdHJ1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmVxLmZpbGVWYWxpZGF0aW9uRXJyb3IgPSBcIkVzdGVuc2lvbmUgbm9uIGNvbnNlbnRpdGEgc29sbzogJ2ltYWdlL2pwZycgfCAnaW1hZ2UvcG5nJyB8ICdpbWFnZS9qcGVnJ1wiO1xuICAgICAgICBjYWxsYmFjayhudWxsLCBmYWxzZSk7XG4gICAgfVxufSk7XG5cbnZhciB1cGxvYWQgPSBtdWx0ZXIoeyBzdG9yYWdlIDogc3RvcmFnZSwgZmlsZUZpbHRlciA6IGZpbGVGaWx0ZXJ9KTtcblxudmFyIGNwVXBsb2FkID0gdXBsb2FkLnNpbmdsZSgnaW1hZ2UnKTtcblxucm91dGVyLnBvc3QoJy90aWNrZXQnLCBbaXNBdXRoLCBjcFVwbG9hZF0sXG4gICAgW1xuICAgICAgICBib2R5KCd0aXRsZScpLnRyaW0oKVxuICAgICAgICAuaXNMb3dlcmNhc2UoKS53aXRoTWVzc2FnZSgnVGl0b2xvIExvd2VyQ2FzZScpXG4gICAgICAgIC5pc0xlbmd0aCh7bWluIDogM30pLndpdGhNZXNzYWdlKCdUaXRvbG8gTWFnZ2lvcmUgZGkgMyBDYXJhdHRlcmknKSxcbiAgICBdXG4scmVzZXJ2YXRpb25Db250cm9sbGVyLmNyZWF0ZVRpY2tldCk7XG5yb3V0ZXIuZ2V0KCcvdGlja2V0L3VzZXIvbWUnLCBpc0F1dGgscmVzZXJ2YXRpb25Db250cm9sbGVyLmdldFRpY2tldHNCeU1lKTtcbnJvdXRlci5nZXQoJy90aWNrZXQvc2VhcmNoJywgcmVzZXJ2YXRpb25Db250cm9sbGVyLnNlYXJjaFRpY2tldCk7XG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "reservation.js"
      ],
      "names": [
        "express",
        "require",
        "body",
        "query",
        "router",
        "Router",
        "isAuth",
        "reservationController",
        "path",
        "multer",
        "uuidv4",
        "storage",
        "diskStorage",
        "destination",
        "req",
        "file",
        "callback",
        "filename",
        "extname",
        "originalname",
        "fileFilter",
        "mimetype",
        "fileValidationError",
        "upload",
        "cpUpload",
        "single",
        "post",
        "trim",
        "isLowercase",
        "withMessage",
        "isLength",
        "min",
        "createTicket",
        "get",
        "getTicketsByMe",
        "searchTicket",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;eACwBA,OAAO,CAAC,yBAAD,C;IAAvBC,I,YAAAA,I;IAAMC,K,YAAAA,K;;AACd,IAAMC,MAAM,GAAGJ,OAAO,CAACK,MAAR,EAAf;;AAEA,IAAMC,MAAM,GAAGL,OAAO,CAAC,uBAAD,CAAtB;;AAEA,IAAMM,qBAAqB,GAAGN,OAAO,CAAC,4BAAD,CAArC;;AAEA,IAAMO,IAAI,GAAGP,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMQ,MAAM,GAAGR,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMS,MAAM,GAAGT,OAAO,CAAC,SAAD,CAAtB;;AAEA,IAAMU,OAAO,GAAGF,MAAM,CAACG,WAAP,CAAmB;AAC/BC,EAAAA,WAAW,EAAG,qBAACC,GAAD,EAAMC,IAAN,EAAYC,QAAZ,EAAyB;AACnCA,IAAAA,QAAQ,CAAC,IAAD,EAAO,eAAP,CAAR;AACH,GAH8B;AAI/BC,EAAAA,QAAQ,EAAG,kBAACH,GAAD,EAAMC,IAAN,EAAYC,QAAZ,EAAyB;AAChC;AACAA,IAAAA,QAAQ,CAAC,IAAD,EAAON,MAAM,KAAKF,IAAI,CAACU,OAAL,CAAaH,IAAI,CAACI,YAAlB,CAAlB,CAAR;AACH;AAP8B,CAAnB,CAAhB;;AAUA,IAAMC,UAAU,GAAI,SAAdA,UAAc,CAACN,GAAD,EAAMC,IAAN,EAAYC,QAAZ,EAAyB;AACzC,MAAGD,IAAI,CAACM,QAAL,IAAiB,WAAjB,IAAgCN,IAAI,CAACM,QAAL,IAAiB,WAAjD,IAAgEN,IAAI,CAACM,QAAL,IAAiB,YAApF,EAAkG;AAC9FL,IAAAA,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAR;AACH,GAFD,MAEO;AACHF,IAAAA,GAAG,CAACQ,mBAAJ,GAA0B,0EAA1B;AACAN,IAAAA,QAAQ,CAAC,IAAD,EAAO,KAAP,CAAR;AACH;AACJ,CAPD;;AASA,IAAIO,MAAM,GAAGd,MAAM,CAAC;AAAEE,EAAAA,OAAO,EAAGA,OAAZ;AAAqBS,EAAAA,UAAU,EAAGA;AAAlC,CAAD,CAAnB;AAEA,IAAII,QAAQ,GAAGD,MAAM,CAACE,MAAP,CAAc,OAAd,CAAf;AAEArB,MAAM,CAACsB,IAAP,CAAY,SAAZ,EAAuB,CAACpB,MAAD,EAASkB,QAAT,CAAvB,EACI,CACItB,IAAI,CAAC,OAAD,CAAJ,CAAcyB,IAAd,GACCC,WADD,GACeC,WADf,CAC2B,kBAD3B,EAECC,QAFD,CAEU;AAACC,EAAAA,GAAG,EAAG;AAAP,CAFV,EAEqBF,WAFrB,CAEiC,gCAFjC,CADJ,CADJ,EAMCtB,qBAAqB,CAACyB,YANvB;AAOA5B,MAAM,CAAC6B,GAAP,CAAW,iBAAX,EAA8B3B,MAA9B,EAAqCC,qBAAqB,CAAC2B,cAA3D;AACA9B,MAAM,CAAC6B,GAAP,CAAW,gBAAX,EAA6B1B,qBAAqB,CAAC4B,YAAnD;AAEAC,MAAM,CAACC,OAAP,GAAiBjC,MAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/routes",
      "sourcesContent": [
        "const express = require('express');\nconst { body, query } = require('express-validator/check');\nconst router = express.Router();\n\nconst isAuth = require('../middleware/is-auth');\n\nconst reservationController = require('../controllers/reservation');\n\nconst path = require('path');\nconst multer = require('multer');\nconst uuidv4 = require('uuid/v4');\n\nconst storage = multer.diskStorage({\n    destination : (req, file, callback) => {\n        callback(null, 'public/images');\n    },\n    filename : (req, file, callback) => {\n        //callback(null, Date.now() + '-' + file.originalname);\n        callback(null, uuidv4() + path.extname(file.originalname));\n    },\n});\n\nconst fileFilter = ((req, file, callback) => {\n    if(file.mimetype == 'image/png' || file.mimetype == 'image/jpg' || file.mimetype == 'image/jpeg') {\n        callback(null, true);\n    } else {\n        req.fileValidationError = \"Estensione non consentita solo: 'image/jpg' | 'image/png' | 'image/jpeg'\";\n        callback(null, false);\n    }\n});\n\nvar upload = multer({ storage : storage, fileFilter : fileFilter});\n\nvar cpUpload = upload.single('image');\n\nrouter.post('/ticket', [isAuth, cpUpload],\n    [\n        body('title').trim()\n        .isLowercase().withMessage('Titolo LowerCase')\n        .isLength({min : 3}).withMessage('Titolo Maggiore di 3 Caratteri'),\n    ]\n,reservationController.createTicket);\nrouter.get('/ticket/user/me', isAuth,reservationController.getTicketsByMe);\nrouter.get('/ticket/search', reservationController.searchTicket);\n\nmodule.exports = router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1577444949718
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/firstAPI/controllers/reservation.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/firstAPI\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers/reservation.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/firstAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers/reservation.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers/reservation.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers",
        "sourceFileName": "reservation.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _require = require('express-validator/check'),\n    validationResult = _require.validationResult;\n\nvar Sequelize = require('sequelize');\n\nvar Op = Sequelize.Op;\n\nvar path = require('path');\n\nvar fs = require('fs');\n\nvar Ticket = require('../models/ticket');\n\nvar User = require('../models/user');\n\nexports.getTicketsByMe = function (req, res, next) {\n  req.user.getTickets().then(function (tickets) {\n    console.log(tickets);\n    res.json({\n      tickets: tickets\n    });\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\n\nexports.searchTicket = function (req, res, next) {\n  var title = '%' + req.query.title + '%';\n  Post.findAll({\n    where: {\n      title: _defineProperty({}, Op.like, title)\n    }\n  }).then(function (tickets) {\n    console.log(tickets);\n    res.json({\n      tickets: tickets\n    });\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\n\nexports.createTicket = function (req, res, next) {\n  var errors = validationResult(req);\n\n  if (!errors.isEmpty()) {\n    return res.status(422).json({\n      message: 'Errore input parametri',\n      error: errors.array()\n    });\n  }\n\n  var title = req.body.title;\n  var date = req.body.date;\n  var name = req.body.name; //INSERT NEL DATABASE  \n\n  req.user.createTicket({\n    title: title,\n    date: date,\n    name: name\n  }).then(function (ticket) {\n    res.status(201).json({\n      messages: 'Success Operation',\n      ticket: ticket\n    });\n  })[\"catch\"](function (err) {\n    return res.status(422).json({\n      message: 'Error nel Salvataggio'\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc2VydmF0aW9uLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJ2YWxpZGF0aW9uUmVzdWx0IiwiU2VxdWVsaXplIiwiT3AiLCJwYXRoIiwiZnMiLCJUaWNrZXQiLCJVc2VyIiwiZXhwb3J0cyIsImdldFRpY2tldHNCeU1lIiwicmVxIiwicmVzIiwibmV4dCIsInVzZXIiLCJnZXRUaWNrZXRzIiwidGhlbiIsInRpY2tldHMiLCJjb25zb2xlIiwibG9nIiwianNvbiIsImVyciIsInNlYXJjaFRpY2tldCIsInRpdGxlIiwicXVlcnkiLCJQb3N0IiwiZmluZEFsbCIsIndoZXJlIiwibGlrZSIsImNyZWF0ZVRpY2tldCIsImVycm9ycyIsImlzRW1wdHkiLCJzdGF0dXMiLCJtZXNzYWdlIiwiZXJyb3IiLCJhcnJheSIsImJvZHkiLCJkYXRlIiwibmFtZSIsInRpY2tldCIsIm1lc3NhZ2VzIl0sIm1hcHBpbmdzIjoiOzs7O2VBQTZCQSxPQUFPLENBQUMseUJBQUQsQztJQUE1QkMsZ0IsWUFBQUEsZ0I7O0FBQ1IsSUFBTUMsU0FBUyxHQUFHRixPQUFPLENBQUMsV0FBRCxDQUF6Qjs7QUFDQSxJQUFNRyxFQUFFLEdBQUdELFNBQVMsQ0FBQ0MsRUFBckI7O0FBQ0EsSUFBTUMsSUFBSSxHQUFHSixPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxJQUFNSyxFQUFFLEdBQUdMLE9BQU8sQ0FBQyxJQUFELENBQWxCOztBQUVBLElBQU1NLE1BQU0sR0FBR04sT0FBTyxDQUFDLGtCQUFELENBQXRCOztBQUNBLElBQU1PLElBQUksR0FBR1AsT0FBTyxDQUFDLGdCQUFELENBQXBCOztBQUVBUSxPQUFPLENBQUNDLGNBQVIsR0FBeUIsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsRUFBb0I7QUFDekNGLEVBQUFBLEdBQUcsQ0FBQ0csSUFBSixDQUFTQyxVQUFULEdBQXNCQyxJQUF0QixDQUEyQixVQUFDQyxPQUFELEVBQWE7QUFDcENDLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixPQUFaO0FBQ0FMLElBQUFBLEdBQUcsQ0FBQ1EsSUFBSixDQUFTO0FBQUNILE1BQUFBLE9BQU8sRUFBR0E7QUFBWCxLQUFUO0FBQ0gsR0FIRCxXQUlJLFVBQUFJLEdBQUc7QUFBQSxXQUFJSCxPQUFPLENBQUNDLEdBQVIsQ0FBWUUsR0FBWixDQUFKO0FBQUEsR0FKUDtBQU1ILENBUEQ7O0FBU0FaLE9BQU8sQ0FBQ2EsWUFBUixHQUF1QixVQUFDWCxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFvQjtBQUN2QyxNQUFNVSxLQUFLLEdBQUcsTUFBTVosR0FBRyxDQUFDYSxLQUFKLENBQVVELEtBQWhCLEdBQXdCLEdBQXRDO0FBQ0FFLEVBQUFBLElBQUksQ0FBQ0MsT0FBTCxDQUFhO0FBQUNDLElBQUFBLEtBQUssRUFBRztBQUFDSixNQUFBQSxLQUFLLHNCQUFLbkIsRUFBRSxDQUFDd0IsSUFBUixFQUFnQkwsS0FBaEI7QUFBTjtBQUFULEdBQWIsRUFDQ1AsSUFERCxDQUNNLFVBQUNDLE9BQUQsRUFBYTtBQUNmQyxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsT0FBWjtBQUNBTCxJQUFBQSxHQUFHLENBQUNRLElBQUosQ0FBUztBQUFDSCxNQUFBQSxPQUFPLEVBQUdBO0FBQVgsS0FBVDtBQUNILEdBSkQsV0FLSSxVQUFBSSxHQUFHO0FBQUEsV0FBSUgsT0FBTyxDQUFDQyxHQUFSLENBQVlFLEdBQVosQ0FBSjtBQUFBLEdBTFA7QUFPSCxDQVREOztBQVdBWixPQUFPLENBQUNvQixZQUFSLEdBQXVCLFVBQUNsQixHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFvQjtBQUN2QyxNQUFNaUIsTUFBTSxHQUFHNUIsZ0JBQWdCLENBQUNTLEdBQUQsQ0FBL0I7O0FBRUEsTUFBRyxDQUFDbUIsTUFBTSxDQUFDQyxPQUFQLEVBQUosRUFBc0I7QUFDbEIsV0FBT25CLEdBQUcsQ0FBQ29CLE1BQUosQ0FBVyxHQUFYLEVBQWdCWixJQUFoQixDQUFxQjtBQUN4QmEsTUFBQUEsT0FBTyxFQUFHLHdCQURjO0FBRXhCQyxNQUFBQSxLQUFLLEVBQUdKLE1BQU0sQ0FBQ0ssS0FBUDtBQUZnQixLQUFyQixDQUFQO0FBSUg7O0FBRUQsTUFBTVosS0FBSyxHQUFHWixHQUFHLENBQUN5QixJQUFKLENBQVNiLEtBQXZCO0FBQ0EsTUFBTWMsSUFBSSxHQUFHMUIsR0FBRyxDQUFDeUIsSUFBSixDQUFTQyxJQUF0QjtBQUNBLE1BQU1DLElBQUksR0FBRzNCLEdBQUcsQ0FBQ3lCLElBQUosQ0FBU0UsSUFBdEIsQ0FadUMsQ0FhdkM7O0FBQ0EzQixFQUFBQSxHQUFHLENBQUNHLElBQUosQ0FBU2UsWUFBVCxDQUFzQjtBQUNsQk4sSUFBQUEsS0FBSyxFQUFHQSxLQURVO0FBRWxCYyxJQUFBQSxJQUFJLEVBQUdBLElBRlc7QUFHbEJDLElBQUFBLElBQUksRUFBR0E7QUFIVyxHQUF0QixFQUlHdEIsSUFKSCxDQUlRLFVBQUN1QixNQUFELEVBQVk7QUFDaEIzQixJQUFBQSxHQUFHLENBQUNvQixNQUFKLENBQVcsR0FBWCxFQUFnQlosSUFBaEIsQ0FBcUI7QUFDakJvQixNQUFBQSxRQUFRLEVBQUcsbUJBRE07QUFFakJELE1BQUFBLE1BQU0sRUFBR0E7QUFGUSxLQUFyQjtBQUlILEdBVEQsV0FTVSxVQUFBbEIsR0FBRyxFQUFJO0FBQ2QsV0FBT1QsR0FBRyxDQUFDb0IsTUFBSixDQUFXLEdBQVgsRUFBZ0JaLElBQWhCLENBQXFCO0FBQ3hCYSxNQUFBQSxPQUFPLEVBQUc7QUFEYyxLQUFyQixDQUFQO0FBR0YsR0FiRDtBQWNILENBNUJEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9BbGVzc2FuZHJvX011c29saW5vL0Rlc2t0b3AvZmlyc3RBUEkvY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IHZhbGlkYXRpb25SZXN1bHQgfSA9IHJlcXVpcmUoJ2V4cHJlc3MtdmFsaWRhdG9yL2NoZWNrJyk7XG5jb25zdCBTZXF1ZWxpemUgPSByZXF1aXJlKCdzZXF1ZWxpemUnKTtcbmNvbnN0IE9wID0gU2VxdWVsaXplLk9wO1xuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKTtcblxuY29uc3QgVGlja2V0ID0gcmVxdWlyZSgnLi4vbW9kZWxzL3RpY2tldCcpO1xuY29uc3QgVXNlciA9IHJlcXVpcmUoJy4uL21vZGVscy91c2VyJyk7XG5cbmV4cG9ydHMuZ2V0VGlja2V0c0J5TWUgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICByZXEudXNlci5nZXRUaWNrZXRzKCkudGhlbigodGlja2V0cykgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyh0aWNrZXRzKTtcbiAgICAgICAgcmVzLmpzb24oe3RpY2tldHMgOiB0aWNrZXRzfSk7XG4gICAgfSkuY2F0Y2goXG4gICAgICAgIGVyciA9PiBjb25zb2xlLmxvZyhlcnIpXG4gICAgKTtcbn07XG5cbmV4cG9ydHMuc2VhcmNoVGlja2V0ID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgY29uc3QgdGl0bGUgPSAnJScgKyByZXEucXVlcnkudGl0bGUgKyAnJSc7XG4gICAgUG9zdC5maW5kQWxsKHt3aGVyZSA6IHt0aXRsZSA6IHtbT3AubGlrZV0gOiB0aXRsZX19fSlcbiAgICAudGhlbigodGlja2V0cykgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyh0aWNrZXRzKTtcbiAgICAgICAgcmVzLmpzb24oe3RpY2tldHMgOiB0aWNrZXRzfSk7XG4gICAgfSkuY2F0Y2goXG4gICAgICAgIGVyciA9PiBjb25zb2xlLmxvZyhlcnIpXG4gICAgKTtcbn07XG5cbmV4cG9ydHMuY3JlYXRlVGlja2V0ID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgY29uc3QgZXJyb3JzID0gdmFsaWRhdGlvblJlc3VsdChyZXEpO1xuICAgIFxuICAgIGlmKCFlcnJvcnMuaXNFbXB0eSgpKSB7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQyMikuanNvbih7XG4gICAgICAgICAgICBtZXNzYWdlIDogJ0Vycm9yZSBpbnB1dCBwYXJhbWV0cmknLFxuICAgICAgICAgICAgZXJyb3IgOiBlcnJvcnMuYXJyYXkoKVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBjb25zdCB0aXRsZSA9IHJlcS5ib2R5LnRpdGxlO1xuICAgIGNvbnN0IGRhdGUgPSByZXEuYm9keS5kYXRlO1xuICAgIGNvbnN0IG5hbWUgPSByZXEuYm9keS5uYW1lO1xuICAgIC8vSU5TRVJUIE5FTCBEQVRBQkFTRSAgXG4gICAgcmVxLnVzZXIuY3JlYXRlVGlja2V0KHtcbiAgICAgICAgdGl0bGUgOiB0aXRsZSxcbiAgICAgICAgZGF0ZSA6IGRhdGUsXG4gICAgICAgIG5hbWUgOiBuYW1lXG4gICAgfSkudGhlbigodGlja2V0KSA9PiB7XG4gICAgICAgIHJlcy5zdGF0dXMoMjAxKS5qc29uKHtcbiAgICAgICAgICAgIG1lc3NhZ2VzIDogJ1N1Y2Nlc3MgT3BlcmF0aW9uJyxcbiAgICAgICAgICAgIHRpY2tldCA6IHRpY2tldFxuICAgICAgICB9KTtcbiAgICB9KS5jYXRjaCggZXJyID0+IHtcbiAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MjIpLmpzb24oe1xuICAgICAgICAgICBtZXNzYWdlIDogJ0Vycm9yIG5lbCBTYWx2YXRhZ2dpbydcbiAgICAgICB9KVxuICAgIH0pO1xufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "reservation.js"
      ],
      "names": [
        "require",
        "validationResult",
        "Sequelize",
        "Op",
        "path",
        "fs",
        "Ticket",
        "User",
        "exports",
        "getTicketsByMe",
        "req",
        "res",
        "next",
        "user",
        "getTickets",
        "then",
        "tickets",
        "console",
        "log",
        "json",
        "err",
        "searchTicket",
        "title",
        "query",
        "Post",
        "findAll",
        "where",
        "like",
        "createTicket",
        "errors",
        "isEmpty",
        "status",
        "message",
        "error",
        "array",
        "body",
        "date",
        "name",
        "ticket",
        "messages"
      ],
      "mappings": ";;;;eAA6BA,OAAO,CAAC,yBAAD,C;IAA5BC,gB,YAAAA,gB;;AACR,IAAMC,SAAS,GAAGF,OAAO,CAAC,WAAD,CAAzB;;AACA,IAAMG,EAAE,GAAGD,SAAS,CAACC,EAArB;;AACA,IAAMC,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMK,EAAE,GAAGL,OAAO,CAAC,IAAD,CAAlB;;AAEA,IAAMM,MAAM,GAAGN,OAAO,CAAC,kBAAD,CAAtB;;AACA,IAAMO,IAAI,GAAGP,OAAO,CAAC,gBAAD,CAApB;;AAEAQ,OAAO,CAACC,cAAR,GAAyB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACzCF,EAAAA,GAAG,CAACG,IAAJ,CAASC,UAAT,GAAsBC,IAAtB,CAA2B,UAACC,OAAD,EAAa;AACpCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAL,IAAAA,GAAG,CAACQ,IAAJ,CAAS;AAACH,MAAAA,OAAO,EAAGA;AAAX,KAAT;AACH,GAHD,WAII,UAAAI,GAAG;AAAA,WAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAAJ;AAAA,GAJP;AAMH,CAPD;;AASAZ,OAAO,CAACa,YAAR,GAAuB,UAACX,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACvC,MAAMU,KAAK,GAAG,MAAMZ,GAAG,CAACa,KAAJ,CAAUD,KAAhB,GAAwB,GAAtC;AACAE,EAAAA,IAAI,CAACC,OAAL,CAAa;AAACC,IAAAA,KAAK,EAAG;AAACJ,MAAAA,KAAK,sBAAKnB,EAAE,CAACwB,IAAR,EAAgBL,KAAhB;AAAN;AAAT,GAAb,EACCP,IADD,CACM,UAACC,OAAD,EAAa;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAL,IAAAA,GAAG,CAACQ,IAAJ,CAAS;AAACH,MAAAA,OAAO,EAAGA;AAAX,KAAT;AACH,GAJD,WAKI,UAAAI,GAAG;AAAA,WAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAAJ;AAAA,GALP;AAOH,CATD;;AAWAZ,OAAO,CAACoB,YAAR,GAAuB,UAAClB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACvC,MAAMiB,MAAM,GAAG5B,gBAAgB,CAACS,GAAD,CAA/B;;AAEA,MAAG,CAACmB,MAAM,CAACC,OAAP,EAAJ,EAAsB;AAClB,WAAOnB,GAAG,CAACoB,MAAJ,CAAW,GAAX,EAAgBZ,IAAhB,CAAqB;AACxBa,MAAAA,OAAO,EAAG,wBADc;AAExBC,MAAAA,KAAK,EAAGJ,MAAM,CAACK,KAAP;AAFgB,KAArB,CAAP;AAIH;;AAED,MAAMZ,KAAK,GAAGZ,GAAG,CAACyB,IAAJ,CAASb,KAAvB;AACA,MAAMc,IAAI,GAAG1B,GAAG,CAACyB,IAAJ,CAASC,IAAtB;AACA,MAAMC,IAAI,GAAG3B,GAAG,CAACyB,IAAJ,CAASE,IAAtB,CAZuC,CAavC;;AACA3B,EAAAA,GAAG,CAACG,IAAJ,CAASe,YAAT,CAAsB;AAClBN,IAAAA,KAAK,EAAGA,KADU;AAElBc,IAAAA,IAAI,EAAGA,IAFW;AAGlBC,IAAAA,IAAI,EAAGA;AAHW,GAAtB,EAIGtB,IAJH,CAIQ,UAACuB,MAAD,EAAY;AAChB3B,IAAAA,GAAG,CAACoB,MAAJ,CAAW,GAAX,EAAgBZ,IAAhB,CAAqB;AACjBoB,MAAAA,QAAQ,EAAG,mBADM;AAEjBD,MAAAA,MAAM,EAAGA;AAFQ,KAArB;AAIH,GATD,WASU,UAAAlB,GAAG,EAAI;AACd,WAAOT,GAAG,CAACoB,MAAJ,CAAW,GAAX,EAAgBZ,IAAhB,CAAqB;AACxBa,MAAAA,OAAO,EAAG;AADc,KAArB,CAAP;AAGF,GAbD;AAcH,CA5BD",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/firstAPI/controllers",
      "sourcesContent": [
        "const { validationResult } = require('express-validator/check');\nconst Sequelize = require('sequelize');\nconst Op = Sequelize.Op;\nconst path = require('path');\nconst fs = require('fs');\n\nconst Ticket = require('../models/ticket');\nconst User = require('../models/user');\n\nexports.getTicketsByMe = (req, res, next) => {\n    req.user.getTickets().then((tickets) => {\n        console.log(tickets);\n        res.json({tickets : tickets});\n    }).catch(\n        err => console.log(err)\n    );\n};\n\nexports.searchTicket = (req, res, next) => {\n    const title = '%' + req.query.title + '%';\n    Post.findAll({where : {title : {[Op.like] : title}}})\n    .then((tickets) => {\n        console.log(tickets);\n        res.json({tickets : tickets});\n    }).catch(\n        err => console.log(err)\n    );\n};\n\nexports.createTicket = (req, res, next) => {\n    const errors = validationResult(req);\n    \n    if(!errors.isEmpty()) {\n        return res.status(422).json({\n            message : 'Errore input parametri',\n            error : errors.array()\n        });\n    }\n\n    const title = req.body.title;\n    const date = req.body.date;\n    const name = req.body.name;\n    //INSERT NEL DATABASE  \n    req.user.createTicket({\n        title : title,\n        date : date,\n        name : name\n    }).then((ticket) => {\n        res.status(201).json({\n            messages : 'Success Operation',\n            ticket : ticket\n        });\n    }).catch( err => {\n       return res.status(422).json({\n           message : 'Error nel Salvataggio'\n       })\n    });\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1577445020023
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/app.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar router = express.Router();\n\nvar path = require('path');\n\nvar uuidv4 = require('uuid/v4');\n\nvar bodyParser = require('body-parser');\n\nvar reservationRoutes = require('./routes/reservation');\n\nvar fs = require('fs');\n\nvar helmet = require('helmet');\n\nvar morgan = require('morgan');\n\nvar sequelize = require('./utils/database');\n\nvar app = express();\napp.use(helmet());\nvar logStream = fs.createWriteStream(path.join(__dirname, 'access.log'), {\n  flags: 'a'\n});\napp.use(morgan('combined', {\n  stream: logStream\n}));\napp.use(bodyParser.json());\napp.use(function (req, res, next) {\n  res.setHeader('Access-Control-Allow-Origin', '*');\n  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, PATCH, DELETE');\n  res.setHeader('Access-Control-Allow-Headers', 'Content-Type, Authorization');\n  next();\n});\napp.use(express[\"static\"]('public'));\nrouter.get('/', function (req, res) {\n  res.sendFile(path.join(__dirname + '/index.html'));\n}); //Routing\n\napp.use('/', router);\n\nrequire(\"./routes\")(app);\n\nvar User = require('./models/user');\n\nvar Ticket = require('./models/ticket');\n\nvar Artistic_Event = require('./models/artisticevent');\n\nvar Performer = require('./models/performer');\n\nvar Seminary = require('./models/seminary');\n\nvar Type = require('./models/type');\n\nvar Similarity = require('./models/similarity');\n\nvar Performance = require('./models/performance');\n\nvar Typologyae = require('./models/typologyae');\n\nvar Typologyse = require('./models/typologyse'); //user and ticket\n\n\nUser.hasMany(Ticket);\nTicket.belongsTo(User, {\n  constraints: true,\n  onDelete: 'CASCADE'\n}); //artistic event and performer\n\nArtistic_Event.belongsToMany(Performer, {\n  through: Performance\n});\nPerformer.belongsToMany(Artistic_Event, {\n  through: Performance\n}); //artistic event and seminary\n\nSeminary.hasMany(Artistic_Event);\nArtistic_Event.belongsTo(Seminary); //artistic event and similar\n\nArtistic_Event.belongsToMany(Artistic_Event, {\n  as: 'similar',\n  through: Similarity\n}); //artistic event and type\n\nArtistic_Event.belongsToMany(Type, {\n  through: Typologyae\n});\nType.belongsToMany(Artistic_Event, {\n  through: Typologyae\n}); //seminary and type\n\nSeminary.belongsToMany(Type, {\n  through: Typologyse\n});\nType.belongsToMany(Seminary, {\n  through: Typologyse\n});\nconsole.log(process.env.NODE_ENV || 'develop');\nsequelize.authenticate().then(function (rec) {\n  console.log('Connessione Stabilita con Successo'); //sequelize.sync({force:true})\n\n  sequelize.sync().then(function (user) {\n    console.log('Sync al DB con Successo');\n  })[\"catch\"](function (err) {\n    console.log('Sync al DB Error:', err);\n  });\n})[\"catch\"](function (err) {\n  console.log('Connession al DB Error:', err);\n});\napp.listen(process.env.PORT || 8081);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "path",
        "uuidv4",
        "bodyParser",
        "reservationRoutes",
        "fs",
        "helmet",
        "morgan",
        "sequelize",
        "app",
        "use",
        "logStream",
        "createWriteStream",
        "join",
        "__dirname",
        "flags",
        "stream",
        "json",
        "req",
        "res",
        "next",
        "setHeader",
        "get",
        "sendFile",
        "User",
        "Ticket",
        "Artistic_Event",
        "Performer",
        "Seminary",
        "Type",
        "Similarity",
        "Performance",
        "Typologyae",
        "Typologyse",
        "hasMany",
        "belongsTo",
        "constraints",
        "onDelete",
        "belongsToMany",
        "through",
        "as",
        "console",
        "log",
        "process",
        "env",
        "NODE_ENV",
        "authenticate",
        "then",
        "rec",
        "sync",
        "user",
        "err",
        "listen",
        "PORT"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AACA,IAAMC,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMI,MAAM,GAAGJ,OAAO,CAAC,SAAD,CAAtB;;AACA,IAAMK,UAAU,GAAGL,OAAO,CAAC,aAAD,CAA1B;;AACA,IAAMM,iBAAiB,GAAGN,OAAO,CAAC,sBAAD,CAAjC;;AACA,IAAMO,EAAE,GAAGP,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAIQ,MAAM,GAAGR,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIS,MAAM,GAAGT,OAAO,CAAC,QAAD,CAApB;;AAEA,IAAMU,SAAS,GAAIV,OAAO,CAAC,kBAAD,CAA1B;;AAEA,IAAMW,GAAG,GAAGZ,OAAO,EAAnB;AAEAY,GAAG,CAACC,GAAJ,CAAQJ,MAAM,EAAd;AAEA,IAAMK,SAAS,GAAGN,EAAE,CAACO,iBAAH,CAAqBX,IAAI,CAACY,IAAL,CAAUC,SAAV,EAAqB,YAArB,CAArB,EAAyD;AAACC,EAAAA,KAAK,EAAG;AAAT,CAAzD,CAAlB;AACAN,GAAG,CAACC,GAAJ,CAAQH,MAAM,CAAC,UAAD,EAAa;AAACS,EAAAA,MAAM,EAAGL;AAAV,CAAb,CAAd;AAEAF,GAAG,CAACC,GAAJ,CAAQP,UAAU,CAACc,IAAX,EAAR;AAEAR,GAAG,CAACC,GAAJ,CAAQ,UAACQ,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxBD,EAAAA,GAAG,CAACE,SAAJ,CAAc,6BAAd,EAA6C,GAA7C;AACAF,EAAAA,GAAG,CAACE,SAAJ,CAAc,8BAAd,EAA8C,+BAA9C;AACAF,EAAAA,GAAG,CAACE,SAAJ,CAAc,8BAAd,EAA8C,6BAA9C;AACAD,EAAAA,IAAI;AACP,CALD;AAOAX,GAAG,CAACC,GAAJ,CAAQb,OAAO,UAAP,CAAe,QAAf,CAAR;AAEAE,MAAM,CAACuB,GAAP,CAAW,GAAX,EAAe,UAASJ,GAAT,EAAaC,GAAb,EAAiB;AAC5BA,EAAAA,GAAG,CAACI,QAAJ,CAAatB,IAAI,CAACY,IAAL,CAAUC,SAAS,GAAG,aAAtB,CAAb;AACH,CAFD,E,CAIA;;AACAL,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAYX,MAAZ;;AACAD,OAAO,CAAC,UAAD,CAAP,CAAoBW,GAApB;;AAEA,IAAMe,IAAI,GAAG1B,OAAO,CAAC,eAAD,CAApB;;AACA,IAAM2B,MAAM,GAAG3B,OAAO,CAAC,iBAAD,CAAtB;;AACA,IAAM4B,cAAc,GAAG5B,OAAO,CAAC,wBAAD,CAA9B;;AACA,IAAM6B,SAAS,GAAG7B,OAAO,CAAC,oBAAD,CAAzB;;AACA,IAAM8B,QAAQ,GAAG9B,OAAO,CAAC,mBAAD,CAAxB;;AACA,IAAM+B,IAAI,GAAG/B,OAAO,CAAC,eAAD,CAApB;;AACA,IAAMgC,UAAU,GAAGhC,OAAO,CAAC,qBAAD,CAA1B;;AACA,IAAMiC,WAAW,GAAGjC,OAAO,CAAC,sBAAD,CAA3B;;AACA,IAAMkC,UAAU,GAAGlC,OAAO,CAAC,qBAAD,CAA1B;;AACA,IAAMmC,UAAU,GAAGnC,OAAO,CAAC,qBAAD,CAA1B,C,CAEA;;;AACA0B,IAAI,CAACU,OAAL,CAAaT,MAAb;AACAA,MAAM,CAACU,SAAP,CAAiBX,IAAjB,EAAuB;AAAEY,EAAAA,WAAW,EAAG,IAAhB;AAAsBC,EAAAA,QAAQ,EAAG;AAAjC,CAAvB,E,CAEA;;AACAX,cAAc,CAACY,aAAf,CAA6BX,SAA7B,EAAwC;AAACY,EAAAA,OAAO,EAAGR;AAAX,CAAxC;AACAJ,SAAS,CAACW,aAAV,CAAwBZ,cAAxB,EAAwC;AAACa,EAAAA,OAAO,EAAGR;AAAX,CAAxC,E,CAEA;;AACAH,QAAQ,CAACM,OAAT,CAAiBR,cAAjB;AACAA,cAAc,CAACS,SAAf,CAAyBP,QAAzB,E,CAEA;;AACAF,cAAc,CAACY,aAAf,CAA6BZ,cAA7B,EAA6C;AAAEc,EAAAA,EAAE,EAAE,SAAN;AAAiBD,EAAAA,OAAO,EAAET;AAA1B,CAA7C,E,CAEA;;AACAJ,cAAc,CAACY,aAAf,CAA6BT,IAA7B,EAAmC;AAACU,EAAAA,OAAO,EAAGP;AAAX,CAAnC;AACAH,IAAI,CAACS,aAAL,CAAmBZ,cAAnB,EAAmC;AAACa,EAAAA,OAAO,EAAGP;AAAX,CAAnC,E,CAEA;;AACAJ,QAAQ,CAACU,aAAT,CAAuBT,IAAvB,EAA6B;AAACU,EAAAA,OAAO,EAAGN;AAAX,CAA7B;AACAJ,IAAI,CAACS,aAAL,CAAmBV,QAAnB,EAA6B;AAACW,EAAAA,OAAO,EAAGN;AAAX,CAA7B;AAEAQ,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAAR,CAAYC,QAAZ,IAAwB,SAApC;AAEArC,SAAS,CAACsC,YAAV,GAAyBC,IAAzB,CAA+B,UAAAC,GAAG,EAAI;AAClCP,EAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ,EADkC,CAElC;;AACAlC,EAAAA,SAAS,CAACyC,IAAV,GACCF,IADD,CACM,UAAAG,IAAI,EAAI;AACVT,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACH,GAHD,WAGU,UAAAS,GAAG,EAAI;AACbV,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgCS,GAAhC;AACH,GALD;AAMH,CATD,WASU,UAAAA,GAAG,EAAI;AACZV,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAsCS,GAAtC;AACJ,CAXD;AAaA1C,GAAG,CAAC2C,MAAJ,CAAWT,OAAO,CAACC,GAAR,CAAYS,IAAZ,IAAoB,IAA/B",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "sourcesContent": [
        "const express = require('express');\nconst router = express.Router();\nconst path = require('path');\nconst uuidv4 = require('uuid/v4');\nconst bodyParser = require('body-parser');\nconst reservationRoutes = require('./routes/reservation');\nconst fs = require('fs');\nvar helmet = require('helmet');\nvar morgan = require('morgan');\n\nconst sequelize  = require('./utils/database');\n\nconst app = express();\n\napp.use(helmet());\n\nconst logStream = fs.createWriteStream(path.join(__dirname, 'access.log'), {flags : 'a'});\napp.use(morgan('combined', {stream : logStream}));\n\napp.use(bodyParser.json());\n\napp.use((req, res, next) => {\n    res.setHeader('Access-Control-Allow-Origin', '*');\n    res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, PATCH, DELETE');\n    res.setHeader('Access-Control-Allow-Headers', 'Content-Type, Authorization');\n    next();\n});\n\napp.use(express.static('public'));\n\nrouter.get('/',function(req,res){\n    res.sendFile(path.join(__dirname + '/index.html'));\n});\n\n//Routing\napp.use('/',router);\nrequire(\"./routes\")(app);\n\nconst User = require('./models/user');\nconst Ticket = require('./models/ticket');\nconst Artistic_Event = require('./models/artisticevent');\nconst Performer = require('./models/performer');\nconst Seminary = require('./models/seminary');\nconst Type = require('./models/type');\nconst Similarity = require('./models/similarity');\nconst Performance = require('./models/performance');\nconst Typologyae = require('./models/typologyae');\nconst Typologyse = require('./models/typologyse');\n\n//user and ticket\nUser.hasMany(Ticket);\nTicket.belongsTo(User, { constraints : true, onDelete : 'CASCADE'});\n\n//artistic event and performer\nArtistic_Event.belongsToMany(Performer, {through : Performance});\nPerformer.belongsToMany(Artistic_Event, {through : Performance});\n\n//artistic event and seminary\nSeminary.hasMany(Artistic_Event);\nArtistic_Event.belongsTo(Seminary);\n\n//artistic event and similar\nArtistic_Event.belongsToMany(Artistic_Event, { as: 'similar', through: Similarity });\n\n//artistic event and type\nArtistic_Event.belongsToMany(Type, {through : Typologyae});\nType.belongsToMany(Artistic_Event, {through : Typologyae});\n\n//seminary and type\nSeminary.belongsToMany(Type, {through : Typologyse});\nType.belongsToMany(Seminary, {through : Typologyse});\n\nconsole.log(process.env.NODE_ENV || 'develop');\n\nsequelize.authenticate().then( rec => {\n    console.log('Connessione Stabilita con Successo');\n    //sequelize.sync({force:true})\n    sequelize.sync()\n    .then(user => {\n        console.log('Sync al DB con Successo');\n    }).catch( err => {\n        console.log('Sync al DB Error:',err);\n    });\n}).catch( err => {\n     console.log('Connession al DB Error:',err);\n});\n\napp.listen(process.env.PORT || 8081);"
      ]
    },
    "sourceType": "script",
    "mtime": 1577898021107
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes/reservation.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes/reservation.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes/reservation.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes/reservation.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes",
        "sourceFileName": "reservation.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar _require = require('express-validator/check'),\n    body = _require.body,\n    query = _require.query;\n\nvar router = express.Router();\n\nvar isAuth = require('../middleware/is-auth');\n\nvar reservationController = require('../controllers/reservation');\n\nvar path = require('path');\n\nvar multer = require('multer');\n\nvar uuidv4 = require('uuid/v4');\n\nvar storage = multer.diskStorage({\n  destination: function destination(req, file, callback) {\n    callback(null, 'public/images');\n  },\n  filename: function filename(req, file, callback) {\n    //callback(null, Date.now() + '-' + file.originalname);\n    callback(null, uuidv4() + path.extname(file.originalname));\n  }\n});\n\nvar fileFilter = function fileFilter(req, file, callback) {\n  if (file.mimetype == 'image/png' || file.mimetype == 'image/jpg' || file.mimetype == 'image/jpeg') {\n    callback(null, true);\n  } else {\n    req.fileValidationError = \"Estensione non consentita solo: 'image/jpg' | 'image/png' | 'image/jpeg'\";\n    callback(null, false);\n  }\n};\n\nvar upload = multer({\n  storage: storage,\n  fileFilter: fileFilter\n});\nvar cpUpload = upload.single('image');\nrouter.post('/ticket', [isAuth, cpUpload], [body('title').trim().isLowercase().withMessage('Titolo LowerCase').isLength({\n  min: 3\n}).withMessage('Titolo Maggiore di 3 Caratteri')], reservationController.createTicket);\nrouter.get('/ticket/user/me', isAuth, reservationController.getTicketsByMe);\nrouter.get('/ticket/user/me/search', isAuth, reservationController.searchTicketByMe);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc2VydmF0aW9uLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwiYm9keSIsInF1ZXJ5Iiwicm91dGVyIiwiUm91dGVyIiwiaXNBdXRoIiwicmVzZXJ2YXRpb25Db250cm9sbGVyIiwicGF0aCIsIm11bHRlciIsInV1aWR2NCIsInN0b3JhZ2UiLCJkaXNrU3RvcmFnZSIsImRlc3RpbmF0aW9uIiwicmVxIiwiZmlsZSIsImNhbGxiYWNrIiwiZmlsZW5hbWUiLCJleHRuYW1lIiwib3JpZ2luYWxuYW1lIiwiZmlsZUZpbHRlciIsIm1pbWV0eXBlIiwiZmlsZVZhbGlkYXRpb25FcnJvciIsInVwbG9hZCIsImNwVXBsb2FkIiwic2luZ2xlIiwicG9zdCIsInRyaW0iLCJpc0xvd2VyY2FzZSIsIndpdGhNZXNzYWdlIiwiaXNMZW5ndGgiLCJtaW4iLCJjcmVhdGVUaWNrZXQiLCJnZXQiLCJnZXRUaWNrZXRzQnlNZSIsInNlYXJjaFRpY2tldEJ5TWUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O2VBQ3dCQSxPQUFPLENBQUMseUJBQUQsQztJQUF2QkMsSSxZQUFBQSxJO0lBQU1DLEssWUFBQUEsSzs7QUFDZCxJQUFNQyxNQUFNLEdBQUdKLE9BQU8sQ0FBQ0ssTUFBUixFQUFmOztBQUVBLElBQU1DLE1BQU0sR0FBR0wsT0FBTyxDQUFDLHVCQUFELENBQXRCOztBQUVBLElBQU1NLHFCQUFxQixHQUFHTixPQUFPLENBQUMsNEJBQUQsQ0FBckM7O0FBRUEsSUFBTU8sSUFBSSxHQUFHUCxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxJQUFNUSxNQUFNLEdBQUdSLE9BQU8sQ0FBQyxRQUFELENBQXRCOztBQUNBLElBQU1TLE1BQU0sR0FBR1QsT0FBTyxDQUFDLFNBQUQsQ0FBdEI7O0FBRUEsSUFBTVUsT0FBTyxHQUFHRixNQUFNLENBQUNHLFdBQVAsQ0FBbUI7QUFDL0JDLEVBQUFBLFdBQVcsRUFBRyxxQkFBQ0MsR0FBRCxFQUFNQyxJQUFOLEVBQVlDLFFBQVosRUFBeUI7QUFDbkNBLElBQUFBLFFBQVEsQ0FBQyxJQUFELEVBQU8sZUFBUCxDQUFSO0FBQ0gsR0FIOEI7QUFJL0JDLEVBQUFBLFFBQVEsRUFBRyxrQkFBQ0gsR0FBRCxFQUFNQyxJQUFOLEVBQVlDLFFBQVosRUFBeUI7QUFDaEM7QUFDQUEsSUFBQUEsUUFBUSxDQUFDLElBQUQsRUFBT04sTUFBTSxLQUFLRixJQUFJLENBQUNVLE9BQUwsQ0FBYUgsSUFBSSxDQUFDSSxZQUFsQixDQUFsQixDQUFSO0FBQ0g7QUFQOEIsQ0FBbkIsQ0FBaEI7O0FBVUEsSUFBTUMsVUFBVSxHQUFJLFNBQWRBLFVBQWMsQ0FBQ04sR0FBRCxFQUFNQyxJQUFOLEVBQVlDLFFBQVosRUFBeUI7QUFDekMsTUFBR0QsSUFBSSxDQUFDTSxRQUFMLElBQWlCLFdBQWpCLElBQWdDTixJQUFJLENBQUNNLFFBQUwsSUFBaUIsV0FBakQsSUFBZ0VOLElBQUksQ0FBQ00sUUFBTCxJQUFpQixZQUFwRixFQUFrRztBQUM5RkwsSUFBQUEsUUFBUSxDQUFDLElBQUQsRUFBTyxJQUFQLENBQVI7QUFDSCxHQUZELE1BRU87QUFDSEYsSUFBQUEsR0FBRyxDQUFDUSxtQkFBSixHQUEwQiwwRUFBMUI7QUFDQU4sSUFBQUEsUUFBUSxDQUFDLElBQUQsRUFBTyxLQUFQLENBQVI7QUFDSDtBQUNKLENBUEQ7O0FBU0EsSUFBSU8sTUFBTSxHQUFHZCxNQUFNLENBQUM7QUFBRUUsRUFBQUEsT0FBTyxFQUFHQSxPQUFaO0FBQXFCUyxFQUFBQSxVQUFVLEVBQUdBO0FBQWxDLENBQUQsQ0FBbkI7QUFFQSxJQUFJSSxRQUFRLEdBQUdELE1BQU0sQ0FBQ0UsTUFBUCxDQUFjLE9BQWQsQ0FBZjtBQUVBckIsTUFBTSxDQUFDc0IsSUFBUCxDQUFZLFNBQVosRUFBdUIsQ0FBQ3BCLE1BQUQsRUFBU2tCLFFBQVQsQ0FBdkIsRUFDSSxDQUNJdEIsSUFBSSxDQUFDLE9BQUQsQ0FBSixDQUFjeUIsSUFBZCxHQUNDQyxXQURELEdBQ2VDLFdBRGYsQ0FDMkIsa0JBRDNCLEVBRUNDLFFBRkQsQ0FFVTtBQUFDQyxFQUFBQSxHQUFHLEVBQUc7QUFBUCxDQUZWLEVBRXFCRixXQUZyQixDQUVpQyxnQ0FGakMsQ0FESixDQURKLEVBTUN0QixxQkFBcUIsQ0FBQ3lCLFlBTnZCO0FBT0E1QixNQUFNLENBQUM2QixHQUFQLENBQVcsaUJBQVgsRUFBOEIzQixNQUE5QixFQUFxQ0MscUJBQXFCLENBQUMyQixjQUEzRDtBQUNBOUIsTUFBTSxDQUFDNkIsR0FBUCxDQUFXLHdCQUFYLEVBQXFDM0IsTUFBckMsRUFBNkNDLHFCQUFxQixDQUFDNEIsZ0JBQW5FO0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmpDLE1BQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9BbGVzc2FuZHJvX011c29saW5vL0Rlc2t0b3AvRHJlYW1MYW5kRmVzdGl2YWwvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbmNvbnN0IHsgYm9keSwgcXVlcnkgfSA9IHJlcXVpcmUoJ2V4cHJlc3MtdmFsaWRhdG9yL2NoZWNrJyk7XG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuXG5jb25zdCBpc0F1dGggPSByZXF1aXJlKCcuLi9taWRkbGV3YXJlL2lzLWF1dGgnKTtcblxuY29uc3QgcmVzZXJ2YXRpb25Db250cm9sbGVyID0gcmVxdWlyZSgnLi4vY29udHJvbGxlcnMvcmVzZXJ2YXRpb24nKTtcblxuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbmNvbnN0IG11bHRlciA9IHJlcXVpcmUoJ211bHRlcicpO1xuY29uc3QgdXVpZHY0ID0gcmVxdWlyZSgndXVpZC92NCcpO1xuXG5jb25zdCBzdG9yYWdlID0gbXVsdGVyLmRpc2tTdG9yYWdlKHtcbiAgICBkZXN0aW5hdGlvbiA6IChyZXEsIGZpbGUsIGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIGNhbGxiYWNrKG51bGwsICdwdWJsaWMvaW1hZ2VzJyk7XG4gICAgfSxcbiAgICBmaWxlbmFtZSA6IChyZXEsIGZpbGUsIGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIC8vY2FsbGJhY2sobnVsbCwgRGF0ZS5ub3coKSArICctJyArIGZpbGUub3JpZ2luYWxuYW1lKTtcbiAgICAgICAgY2FsbGJhY2sobnVsbCwgdXVpZHY0KCkgKyBwYXRoLmV4dG5hbWUoZmlsZS5vcmlnaW5hbG5hbWUpKTtcbiAgICB9LFxufSk7XG5cbmNvbnN0IGZpbGVGaWx0ZXIgPSAoKHJlcSwgZmlsZSwgY2FsbGJhY2spID0+IHtcbiAgICBpZihmaWxlLm1pbWV0eXBlID09ICdpbWFnZS9wbmcnIHx8IGZpbGUubWltZXR5cGUgPT0gJ2ltYWdlL2pwZycgfHwgZmlsZS5taW1ldHlwZSA9PSAnaW1hZ2UvanBlZycpIHtcbiAgICAgICAgY2FsbGJhY2sobnVsbCwgdHJ1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmVxLmZpbGVWYWxpZGF0aW9uRXJyb3IgPSBcIkVzdGVuc2lvbmUgbm9uIGNvbnNlbnRpdGEgc29sbzogJ2ltYWdlL2pwZycgfCAnaW1hZ2UvcG5nJyB8ICdpbWFnZS9qcGVnJ1wiO1xuICAgICAgICBjYWxsYmFjayhudWxsLCBmYWxzZSk7XG4gICAgfVxufSk7XG5cbnZhciB1cGxvYWQgPSBtdWx0ZXIoeyBzdG9yYWdlIDogc3RvcmFnZSwgZmlsZUZpbHRlciA6IGZpbGVGaWx0ZXJ9KTtcblxudmFyIGNwVXBsb2FkID0gdXBsb2FkLnNpbmdsZSgnaW1hZ2UnKTtcblxucm91dGVyLnBvc3QoJy90aWNrZXQnLCBbaXNBdXRoLCBjcFVwbG9hZF0sXG4gICAgW1xuICAgICAgICBib2R5KCd0aXRsZScpLnRyaW0oKVxuICAgICAgICAuaXNMb3dlcmNhc2UoKS53aXRoTWVzc2FnZSgnVGl0b2xvIExvd2VyQ2FzZScpXG4gICAgICAgIC5pc0xlbmd0aCh7bWluIDogM30pLndpdGhNZXNzYWdlKCdUaXRvbG8gTWFnZ2lvcmUgZGkgMyBDYXJhdHRlcmknKSxcbiAgICBdXG4scmVzZXJ2YXRpb25Db250cm9sbGVyLmNyZWF0ZVRpY2tldCk7XG5yb3V0ZXIuZ2V0KCcvdGlja2V0L3VzZXIvbWUnLCBpc0F1dGgscmVzZXJ2YXRpb25Db250cm9sbGVyLmdldFRpY2tldHNCeU1lKTtcbnJvdXRlci5nZXQoJy90aWNrZXQvdXNlci9tZS9zZWFyY2gnLCBpc0F1dGgsIHJlc2VydmF0aW9uQ29udHJvbGxlci5zZWFyY2hUaWNrZXRCeU1lKTtcblxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "reservation.js"
      ],
      "names": [
        "express",
        "require",
        "body",
        "query",
        "router",
        "Router",
        "isAuth",
        "reservationController",
        "path",
        "multer",
        "uuidv4",
        "storage",
        "diskStorage",
        "destination",
        "req",
        "file",
        "callback",
        "filename",
        "extname",
        "originalname",
        "fileFilter",
        "mimetype",
        "fileValidationError",
        "upload",
        "cpUpload",
        "single",
        "post",
        "trim",
        "isLowercase",
        "withMessage",
        "isLength",
        "min",
        "createTicket",
        "get",
        "getTicketsByMe",
        "searchTicketByMe",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;eACwBA,OAAO,CAAC,yBAAD,C;IAAvBC,I,YAAAA,I;IAAMC,K,YAAAA,K;;AACd,IAAMC,MAAM,GAAGJ,OAAO,CAACK,MAAR,EAAf;;AAEA,IAAMC,MAAM,GAAGL,OAAO,CAAC,uBAAD,CAAtB;;AAEA,IAAMM,qBAAqB,GAAGN,OAAO,CAAC,4BAAD,CAArC;;AAEA,IAAMO,IAAI,GAAGP,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMQ,MAAM,GAAGR,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMS,MAAM,GAAGT,OAAO,CAAC,SAAD,CAAtB;;AAEA,IAAMU,OAAO,GAAGF,MAAM,CAACG,WAAP,CAAmB;AAC/BC,EAAAA,WAAW,EAAG,qBAACC,GAAD,EAAMC,IAAN,EAAYC,QAAZ,EAAyB;AACnCA,IAAAA,QAAQ,CAAC,IAAD,EAAO,eAAP,CAAR;AACH,GAH8B;AAI/BC,EAAAA,QAAQ,EAAG,kBAACH,GAAD,EAAMC,IAAN,EAAYC,QAAZ,EAAyB;AAChC;AACAA,IAAAA,QAAQ,CAAC,IAAD,EAAON,MAAM,KAAKF,IAAI,CAACU,OAAL,CAAaH,IAAI,CAACI,YAAlB,CAAlB,CAAR;AACH;AAP8B,CAAnB,CAAhB;;AAUA,IAAMC,UAAU,GAAI,SAAdA,UAAc,CAACN,GAAD,EAAMC,IAAN,EAAYC,QAAZ,EAAyB;AACzC,MAAGD,IAAI,CAACM,QAAL,IAAiB,WAAjB,IAAgCN,IAAI,CAACM,QAAL,IAAiB,WAAjD,IAAgEN,IAAI,CAACM,QAAL,IAAiB,YAApF,EAAkG;AAC9FL,IAAAA,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAR;AACH,GAFD,MAEO;AACHF,IAAAA,GAAG,CAACQ,mBAAJ,GAA0B,0EAA1B;AACAN,IAAAA,QAAQ,CAAC,IAAD,EAAO,KAAP,CAAR;AACH;AACJ,CAPD;;AASA,IAAIO,MAAM,GAAGd,MAAM,CAAC;AAAEE,EAAAA,OAAO,EAAGA,OAAZ;AAAqBS,EAAAA,UAAU,EAAGA;AAAlC,CAAD,CAAnB;AAEA,IAAII,QAAQ,GAAGD,MAAM,CAACE,MAAP,CAAc,OAAd,CAAf;AAEArB,MAAM,CAACsB,IAAP,CAAY,SAAZ,EAAuB,CAACpB,MAAD,EAASkB,QAAT,CAAvB,EACI,CACItB,IAAI,CAAC,OAAD,CAAJ,CAAcyB,IAAd,GACCC,WADD,GACeC,WADf,CAC2B,kBAD3B,EAECC,QAFD,CAEU;AAACC,EAAAA,GAAG,EAAG;AAAP,CAFV,EAEqBF,WAFrB,CAEiC,gCAFjC,CADJ,CADJ,EAMCtB,qBAAqB,CAACyB,YANvB;AAOA5B,MAAM,CAAC6B,GAAP,CAAW,iBAAX,EAA8B3B,MAA9B,EAAqCC,qBAAqB,CAAC2B,cAA3D;AACA9B,MAAM,CAAC6B,GAAP,CAAW,wBAAX,EAAqC3B,MAArC,EAA6CC,qBAAqB,CAAC4B,gBAAnE;AAEAC,MAAM,CAACC,OAAP,GAAiBjC,MAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes",
      "sourcesContent": [
        "const express = require('express');\nconst { body, query } = require('express-validator/check');\nconst router = express.Router();\n\nconst isAuth = require('../middleware/is-auth');\n\nconst reservationController = require('../controllers/reservation');\n\nconst path = require('path');\nconst multer = require('multer');\nconst uuidv4 = require('uuid/v4');\n\nconst storage = multer.diskStorage({\n    destination : (req, file, callback) => {\n        callback(null, 'public/images');\n    },\n    filename : (req, file, callback) => {\n        //callback(null, Date.now() + '-' + file.originalname);\n        callback(null, uuidv4() + path.extname(file.originalname));\n    },\n});\n\nconst fileFilter = ((req, file, callback) => {\n    if(file.mimetype == 'image/png' || file.mimetype == 'image/jpg' || file.mimetype == 'image/jpeg') {\n        callback(null, true);\n    } else {\n        req.fileValidationError = \"Estensione non consentita solo: 'image/jpg' | 'image/png' | 'image/jpeg'\";\n        callback(null, false);\n    }\n});\n\nvar upload = multer({ storage : storage, fileFilter : fileFilter});\n\nvar cpUpload = upload.single('image');\n\nrouter.post('/ticket', [isAuth, cpUpload],\n    [\n        body('title').trim()\n        .isLowercase().withMessage('Titolo LowerCase')\n        .isLength({min : 3}).withMessage('Titolo Maggiore di 3 Caratteri'),\n    ]\n,reservationController.createTicket);\nrouter.get('/ticket/user/me', isAuth,reservationController.getTicketsByMe);\nrouter.get('/ticket/user/me/search', isAuth, reservationController.searchTicketByMe);\n\nmodule.exports = router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1577469678718
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/middleware\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/middleware/is-auth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/middleware",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/middleware/is-auth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/middleware/is-auth.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/middleware/is-auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/middleware",
        "sourceFileName": "is-auth.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar jwt = require('jsonwebtoken');\n\nvar User = require('../models/user');\n\nmodule.exports = function (req, res, next) {\n  console.log('AUTHORIZATION MIDDLEWARE');\n  console.log(req.get('Authorization'));\n  var auth = req.get('Authorization');\n\n  if (!auth) {\n    return res.status(401).json({\n      message: 'Non autorizzato'\n    });\n  }\n\n  var token = auth.split(' ')[1];\n  var decode;\n\n  try {\n    decode = jwt.verify(token, 'axAYgScUa4Z2UdjgirykmI3iZsSCaPGh');\n  } catch (err) {\n    return res.status(500).json({\n      message: 'Non autorizzato'\n    });\n  }\n\n  if (!decode) {\n    return res.status(401).json({\n      message: 'Non autorizzato'\n    });\n  }\n\n  var userId = decode.id;\n  User.findByPk(userId).then(function (user) {\n    req.user = user;\n    next();\n  })[\"catch\"](function (err) {\n    return res.status(401).json({\n      message: 'Non autorizzato'\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlzLWF1dGguanMiXSwibmFtZXMiOlsiand0IiwicmVxdWlyZSIsIlVzZXIiLCJtb2R1bGUiLCJleHBvcnRzIiwicmVxIiwicmVzIiwibmV4dCIsImNvbnNvbGUiLCJsb2ciLCJnZXQiLCJhdXRoIiwic3RhdHVzIiwianNvbiIsIm1lc3NhZ2UiLCJ0b2tlbiIsInNwbGl0IiwiZGVjb2RlIiwidmVyaWZ5IiwiZXJyIiwidXNlcklkIiwiaWQiLCJmaW5kQnlQayIsInRoZW4iLCJ1c2VyIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLEdBQUcsR0FBR0MsT0FBTyxDQUFDLGNBQUQsQ0FBbkI7O0FBQ0EsSUFBTUMsSUFBSSxHQUFHRCxPQUFPLENBQUMsZ0JBQUQsQ0FBcEI7O0FBRUFFLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFvQjtBQUNqQ0MsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksMEJBQVo7QUFDQUQsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlKLEdBQUcsQ0FBQ0ssR0FBSixDQUFRLGVBQVIsQ0FBWjtBQUVBLE1BQU1DLElBQUksR0FBR04sR0FBRyxDQUFDSyxHQUFKLENBQVEsZUFBUixDQUFiOztBQUVBLE1BQUcsQ0FBQ0MsSUFBSixFQUFVO0FBQ04sV0FBT0wsR0FBRyxDQUFDTSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDeEJDLE1BQUFBLE9BQU8sRUFBRztBQURjLEtBQXJCLENBQVA7QUFHSDs7QUFFRCxNQUFNQyxLQUFLLEdBQUdKLElBQUksQ0FBQ0ssS0FBTCxDQUFXLEdBQVgsRUFBZ0IsQ0FBaEIsQ0FBZDtBQUNBLE1BQUlDLE1BQUo7O0FBQ0EsTUFBRztBQUNDQSxJQUFBQSxNQUFNLEdBQUdqQixHQUFHLENBQUNrQixNQUFKLENBQVdILEtBQVgsRUFBa0Isa0NBQWxCLENBQVQ7QUFDSCxHQUZELENBRUMsT0FBTUksR0FBTixFQUFVO0FBQ1AsV0FBT2IsR0FBRyxDQUFDTSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDeEJDLE1BQUFBLE9BQU8sRUFBRztBQURjLEtBQXJCLENBQVA7QUFHSDs7QUFFRCxNQUFHLENBQUNHLE1BQUosRUFBWTtBQUNSLFdBQU9YLEdBQUcsQ0FBQ00sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ3hCQyxNQUFBQSxPQUFPLEVBQUc7QUFEYyxLQUFyQixDQUFQO0FBR0g7O0FBRUQsTUFBSU0sTUFBTSxHQUFHSCxNQUFNLENBQUNJLEVBQXBCO0FBRUFuQixFQUFBQSxJQUFJLENBQUNvQixRQUFMLENBQWNGLE1BQWQsRUFDQ0csSUFERCxDQUNNLFVBQUFDLElBQUksRUFBSTtBQUNWbkIsSUFBQUEsR0FBRyxDQUFDbUIsSUFBSixHQUFXQSxJQUFYO0FBQ0FqQixJQUFBQSxJQUFJO0FBQ1AsR0FKRCxXQUlTLFVBQUFZLEdBQUcsRUFBSTtBQUNaLFdBQU9iLEdBQUcsQ0FBQ00sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ3hCQyxNQUFBQSxPQUFPLEVBQUc7QUFEYyxLQUFyQixDQUFQO0FBR0gsR0FSRDtBQVNILENBdkNEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9BbGVzc2FuZHJvX011c29saW5vL0Rlc2t0b3AvRHJlYW1MYW5kRmVzdGl2YWwvbWlkZGxld2FyZSIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGp3dCA9IHJlcXVpcmUoJ2pzb253ZWJ0b2tlbicpO1xuY29uc3QgVXNlciA9IHJlcXVpcmUoJy4uL21vZGVscy91c2VyJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgY29uc29sZS5sb2coJ0FVVEhPUklaQVRJT04gTUlERExFV0FSRScpO1xuICAgIGNvbnNvbGUubG9nKHJlcS5nZXQoJ0F1dGhvcml6YXRpb24nKSk7XG5cbiAgICBjb25zdCBhdXRoID0gcmVxLmdldCgnQXV0aG9yaXphdGlvbicpO1xuXG4gICAgaWYoIWF1dGgpIHtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5qc29uKHtcbiAgICAgICAgICAgIG1lc3NhZ2UgOiAnTm9uIGF1dG9yaXp6YXRvJyxcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgY29uc3QgdG9rZW4gPSBhdXRoLnNwbGl0KCcgJylbMV07XG4gICAgbGV0IGRlY29kZTtcbiAgICB0cnl7XG4gICAgICAgIGRlY29kZSA9IGp3dC52ZXJpZnkodG9rZW4sICdheEFZZ1NjVWE0WjJVZGpnaXJ5a21JM2lac1NDYVBHaCcpO1xuICAgIH1jYXRjaChlcnIpe1xuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oe1xuICAgICAgICAgICAgbWVzc2FnZSA6ICdOb24gYXV0b3JpenphdG8nLFxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBpZighZGVjb2RlKSB7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuanNvbih7XG4gICAgICAgICAgICBtZXNzYWdlIDogJ05vbiBhdXRvcml6emF0bycsXG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGxldCB1c2VySWQgPSBkZWNvZGUuaWQ7XG4gICAgXG4gICAgVXNlci5maW5kQnlQayh1c2VySWQpXG4gICAgLnRoZW4odXNlciA9PiB7XG4gICAgICAgIHJlcS51c2VyID0gdXNlcjtcbiAgICAgICAgbmV4dCgpO1xuICAgIH0pLmNhdGNoKGVyciA9PiB7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuanNvbih7XG4gICAgICAgICAgICBtZXNzYWdlIDogJ05vbiBhdXRvcml6emF0bycsXG4gICAgICAgIH0pO1xuICAgIH0pO1xufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "is-auth.js"
      ],
      "names": [
        "jwt",
        "require",
        "User",
        "module",
        "exports",
        "req",
        "res",
        "next",
        "console",
        "log",
        "get",
        "auth",
        "status",
        "json",
        "message",
        "token",
        "split",
        "decode",
        "verify",
        "err",
        "userId",
        "id",
        "findByPk",
        "then",
        "user"
      ],
      "mappings": ";;AAAA,IAAMA,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,gBAAD,CAApB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,GAAJ,CAAQ,eAAR,CAAZ;AAEA,MAAMC,IAAI,GAAGN,GAAG,CAACK,GAAJ,CAAQ,eAAR,CAAb;;AAEA,MAAG,CAACC,IAAJ,EAAU;AACN,WAAOL,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,OAAO,EAAG;AADc,KAArB,CAAP;AAGH;;AAED,MAAMC,KAAK,GAAGJ,IAAI,CAACK,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAd;AACA,MAAIC,MAAJ;;AACA,MAAG;AACCA,IAAAA,MAAM,GAAGjB,GAAG,CAACkB,MAAJ,CAAWH,KAAX,EAAkB,kCAAlB,CAAT;AACH,GAFD,CAEC,OAAMI,GAAN,EAAU;AACP,WAAOb,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,OAAO,EAAG;AADc,KAArB,CAAP;AAGH;;AAED,MAAG,CAACG,MAAJ,EAAY;AACR,WAAOX,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,OAAO,EAAG;AADc,KAArB,CAAP;AAGH;;AAED,MAAIM,MAAM,GAAGH,MAAM,CAACI,EAApB;AAEAnB,EAAAA,IAAI,CAACoB,QAAL,CAAcF,MAAd,EACCG,IADD,CACM,UAAAC,IAAI,EAAI;AACVnB,IAAAA,GAAG,CAACmB,IAAJ,GAAWA,IAAX;AACAjB,IAAAA,IAAI;AACP,GAJD,WAIS,UAAAY,GAAG,EAAI;AACZ,WAAOb,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,OAAO,EAAG;AADc,KAArB,CAAP;AAGH,GARD;AASH,CAvCD",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/middleware",
      "sourcesContent": [
        "const jwt = require('jsonwebtoken');\nconst User = require('../models/user');\n\nmodule.exports = (req, res, next) => {\n    console.log('AUTHORIZATION MIDDLEWARE');\n    console.log(req.get('Authorization'));\n\n    const auth = req.get('Authorization');\n\n    if(!auth) {\n        return res.status(401).json({\n            message : 'Non autorizzato',\n        });\n    }\n\n    const token = auth.split(' ')[1];\n    let decode;\n    try{\n        decode = jwt.verify(token, 'axAYgScUa4Z2UdjgirykmI3iZsSCaPGh');\n    }catch(err){\n        return res.status(500).json({\n            message : 'Non autorizzato',\n        });\n    }\n\n    if(!decode) {\n        return res.status(401).json({\n            message : 'Non autorizzato',\n        });\n    }\n\n    let userId = decode.id;\n    \n    User.findByPk(userId)\n    .then(user => {\n        req.user = user;\n        next();\n    }).catch(err => {\n        return res.status(401).json({\n            message : 'Non autorizzato',\n        });\n    });\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1576239096441
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/user.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar Sequelize = require('sequelize');\n\nvar sequelize = require('../utils/database');\n\nvar User = sequelize.define('user', {\n  id: {\n    type: Sequelize.INTEGER,\n    autoIncrement: true,\n    allowNull: false,\n    primaryKey: true\n  },\n  name: {\n    type: Sequelize.STRING,\n    allowNull: false\n  },\n  email: {\n    type: Sequelize.STRING,\n    allowNull: false\n  },\n  phoneNumber: {\n    type: Sequelize.STRING,\n    allowNull: false\n  },\n  password: {\n    type: Sequelize.STRING,\n    allowNull: false\n  }\n});\nmodule.exports = User;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsiU2VxdWVsaXplIiwicmVxdWlyZSIsInNlcXVlbGl6ZSIsIlVzZXIiLCJkZWZpbmUiLCJpZCIsInR5cGUiLCJJTlRFR0VSIiwiYXV0b0luY3JlbWVudCIsImFsbG93TnVsbCIsInByaW1hcnlLZXkiLCJuYW1lIiwiU1RSSU5HIiwiZW1haWwiLCJwaG9uZU51bWJlciIsInBhc3N3b3JkIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxTQUFTLEdBQUdDLE9BQU8sQ0FBQyxXQUFELENBQXpCOztBQUVBLElBQU1DLFNBQVMsR0FBR0QsT0FBTyxDQUFDLG1CQUFELENBQXpCOztBQUVBLElBQU1FLElBQUksR0FBR0QsU0FBUyxDQUFDRSxNQUFWLENBQWlCLE1BQWpCLEVBQXlCO0FBQ2xDQyxFQUFBQSxFQUFFLEVBQUc7QUFDREMsSUFBQUEsSUFBSSxFQUFHTixTQUFTLENBQUNPLE9BRGhCO0FBRURDLElBQUFBLGFBQWEsRUFBRyxJQUZmO0FBR0RDLElBQUFBLFNBQVMsRUFBRyxLQUhYO0FBSURDLElBQUFBLFVBQVUsRUFBRztBQUpaLEdBRDZCO0FBT2xDQyxFQUFBQSxJQUFJLEVBQUc7QUFDSEwsSUFBQUEsSUFBSSxFQUFHTixTQUFTLENBQUNZLE1BRGQ7QUFFSEgsSUFBQUEsU0FBUyxFQUFHO0FBRlQsR0FQMkI7QUFXbENJLEVBQUFBLEtBQUssRUFBRztBQUNKUCxJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ1ksTUFEYjtBQUVKSCxJQUFBQSxTQUFTLEVBQUc7QUFGUixHQVgwQjtBQWVsQ0ssRUFBQUEsV0FBVyxFQUFHO0FBQ1ZSLElBQUFBLElBQUksRUFBR04sU0FBUyxDQUFDWSxNQURQO0FBRVZILElBQUFBLFNBQVMsRUFBRztBQUZGLEdBZm9CO0FBbUJsQ00sRUFBQUEsUUFBUSxFQUFHO0FBQ1BULElBQUFBLElBQUksRUFBR04sU0FBUyxDQUFDWSxNQURWO0FBRVBILElBQUFBLFNBQVMsRUFBRztBQUZMO0FBbkJ1QixDQUF6QixDQUFiO0FBeUJBTyxNQUFNLENBQUNDLE9BQVAsR0FBaUJkLElBQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9BbGVzc2FuZHJvX011c29saW5vL0Rlc2t0b3AvRHJlYW1MYW5kRmVzdGl2YWwvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU2VxdWVsaXplID0gcmVxdWlyZSgnc2VxdWVsaXplJyk7XG5cbmNvbnN0IHNlcXVlbGl6ZSA9IHJlcXVpcmUoJy4uL3V0aWxzL2RhdGFiYXNlJyk7XG5cbmNvbnN0IFVzZXIgPSBzZXF1ZWxpemUuZGVmaW5lKCd1c2VyJywge1xuICAgIGlkIDoge1xuICAgICAgICB0eXBlIDogU2VxdWVsaXplLklOVEVHRVIsXG4gICAgICAgIGF1dG9JbmNyZW1lbnQgOiB0cnVlLFxuICAgICAgICBhbGxvd051bGwgOiBmYWxzZSxcbiAgICAgICAgcHJpbWFyeUtleSA6IHRydWVcbiAgICB9LFxuICAgIG5hbWUgOiB7XG4gICAgICAgIHR5cGUgOiBTZXF1ZWxpemUuU1RSSU5HLFxuICAgICAgICBhbGxvd051bGwgOiBmYWxzZSxcbiAgICB9LFxuICAgIGVtYWlsIDoge1xuICAgICAgICB0eXBlIDogU2VxdWVsaXplLlNUUklORyxcbiAgICAgICAgYWxsb3dOdWxsIDogZmFsc2UsXG4gICAgfSxcbiAgICBwaG9uZU51bWJlciA6IHtcbiAgICAgICAgdHlwZSA6IFNlcXVlbGl6ZS5TVFJJTkcsXG4gICAgICAgIGFsbG93TnVsbCA6IGZhbHNlLFxuICAgIH0sXG4gICAgcGFzc3dvcmQgOiB7XG4gICAgICAgIHR5cGUgOiBTZXF1ZWxpemUuU1RSSU5HLFxuICAgICAgICBhbGxvd051bGwgOiBmYWxzZSxcbiAgICB9LFxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gVXNlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "sequelize",
        "User",
        "define",
        "id",
        "type",
        "INTEGER",
        "autoIncrement",
        "allowNull",
        "primaryKey",
        "name",
        "STRING",
        "email",
        "phoneNumber",
        "password",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,IAAMC,SAAS,GAAGD,OAAO,CAAC,mBAAD,CAAzB;;AAEA,IAAME,IAAI,GAAGD,SAAS,CAACE,MAAV,CAAiB,MAAjB,EAAyB;AAClCC,EAAAA,EAAE,EAAG;AACDC,IAAAA,IAAI,EAAGN,SAAS,CAACO,OADhB;AAEDC,IAAAA,aAAa,EAAG,IAFf;AAGDC,IAAAA,SAAS,EAAG,KAHX;AAIDC,IAAAA,UAAU,EAAG;AAJZ,GAD6B;AAOlCC,EAAAA,IAAI,EAAG;AACHL,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADd;AAEHH,IAAAA,SAAS,EAAG;AAFT,GAP2B;AAWlCI,EAAAA,KAAK,EAAG;AACJP,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADb;AAEJH,IAAAA,SAAS,EAAG;AAFR,GAX0B;AAelCK,EAAAA,WAAW,EAAG;AACVR,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADP;AAEVH,IAAAA,SAAS,EAAG;AAFF,GAfoB;AAmBlCM,EAAAA,QAAQ,EAAG;AACPT,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADV;AAEPH,IAAAA,SAAS,EAAG;AAFL;AAnBuB,CAAzB,CAAb;AAyBAO,MAAM,CAACC,OAAP,GAAiBd,IAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst User = sequelize.define('user', {\n    id : {\n        type : Sequelize.INTEGER,\n        autoIncrement : true,\n        allowNull : false,\n        primaryKey : true\n    },\n    name : {\n        type : Sequelize.STRING,\n        allowNull : false,\n    },\n    email : {\n        type : Sequelize.STRING,\n        allowNull : false,\n    },\n    phoneNumber : {\n        type : Sequelize.STRING,\n        allowNull : false,\n    },\n    password : {\n        type : Sequelize.STRING,\n        allowNull : false,\n    },\n});\n\nmodule.exports = User;"
      ]
    },
    "sourceType": "script",
    "mtime": 1576678769819
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/utils\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/utils/database.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/utils",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/utils/database.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/utils/database.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/utils/database.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/utils",
        "sourceFileName": "database.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar Sequelize = require('sequelize');\n\nvar sequelize = new Sequelize(process.env.NODE_DATABASE, process.env.NODE_DATABASE_USER, process.env.NODE_DATABASE_PW, {\n  dialect: 'mysql',\n  host: process.env.NODE_DATABASE_URL\n});\nmodule.exports = sequelize;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGFiYXNlLmpzIl0sIm5hbWVzIjpbIlNlcXVlbGl6ZSIsInJlcXVpcmUiLCJzZXF1ZWxpemUiLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9EQVRBQkFTRSIsIk5PREVfREFUQUJBU0VfVVNFUiIsIk5PREVfREFUQUJBU0VfUFciLCJkaWFsZWN0IiwiaG9zdCIsIk5PREVfREFUQUJBU0VfVVJMIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxTQUFTLEdBQUdDLE9BQU8sQ0FBQyxXQUFELENBQXpCOztBQUVBLElBQU1DLFNBQVMsR0FBRyxJQUFJRixTQUFKLENBQWNHLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxhQUExQixFQUNkRixPQUFPLENBQUNDLEdBQVIsQ0FBWUUsa0JBREUsRUFFZEgsT0FBTyxDQUFDQyxHQUFSLENBQVlHLGdCQUZFLEVBR2xCO0FBQ0lDLEVBQUFBLE9BQU8sRUFBRyxPQURkO0FBRUlDLEVBQUFBLElBQUksRUFBR04sT0FBTyxDQUFDQyxHQUFSLENBQVlNO0FBRnZCLENBSGtCLENBQWxCO0FBU0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlYsU0FBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL0FsZXNzYW5kcm9fTXVzb2xpbm8vRGVza3RvcC9EcmVhbUxhbmRGZXN0aXZhbC91dGlscyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFNlcXVlbGl6ZSA9IHJlcXVpcmUoJ3NlcXVlbGl6ZScpO1xuXG5jb25zdCBzZXF1ZWxpemUgPSBuZXcgU2VxdWVsaXplKHByb2Nlc3MuZW52Lk5PREVfREFUQUJBU0UsIFxuICAgIHByb2Nlc3MuZW52Lk5PREVfREFUQUJBU0VfVVNFUiwgXG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9EQVRBQkFTRV9QVywgXG57XG4gICAgZGlhbGVjdCA6ICdteXNxbCcsXG4gICAgaG9zdCA6IHByb2Nlc3MuZW52Lk5PREVfREFUQUJBU0VfVVJMXG59XG4pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHNlcXVlbGl6ZTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "database.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "sequelize",
        "process",
        "env",
        "NODE_DATABASE",
        "NODE_DATABASE_USER",
        "NODE_DATABASE_PW",
        "dialect",
        "host",
        "NODE_DATABASE_URL",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,IAAMC,SAAS,GAAG,IAAIF,SAAJ,CAAcG,OAAO,CAACC,GAAR,CAAYC,aAA1B,EACdF,OAAO,CAACC,GAAR,CAAYE,kBADE,EAEdH,OAAO,CAACC,GAAR,CAAYG,gBAFE,EAGlB;AACIC,EAAAA,OAAO,EAAG,OADd;AAEIC,EAAAA,IAAI,EAAGN,OAAO,CAACC,GAAR,CAAYM;AAFvB,CAHkB,CAAlB;AASAC,MAAM,CAACC,OAAP,GAAiBV,SAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/utils",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\n\nconst sequelize = new Sequelize(process.env.NODE_DATABASE, \n    process.env.NODE_DATABASE_USER, \n    process.env.NODE_DATABASE_PW, \n{\n    dialect : 'mysql',\n    host : process.env.NODE_DATABASE_URL\n}\n);\n\nmodule.exports = sequelize;"
      ]
    },
    "sourceType": "script",
    "mtime": 1577537061647
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers/reservation.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers/reservation.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers/reservation.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers/reservation.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers",
        "sourceFileName": "reservation.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _require = require('express-validator/check'),\n    validationResult = _require.validationResult;\n\nvar Sequelize = require('sequelize');\n\nvar Op = Sequelize.Op;\n\nvar path = require('path');\n\nvar fs = require('fs');\n\nvar Ticket = require('../models/ticket');\n\nvar User = require('../models/user');\n\nexports.getTicketsByMe = function (req, res, next) {\n  req.user.getTickets().then(function (tickets) {\n    res.json({\n      tickets: tickets\n    });\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\n\nexports.searchTicketByMe = function (req, res, next) {\n  var title = '%' + req.query.title + '%';\n  Ticket.findAll({\n    where: {\n      title: _defineProperty({}, Op.like, title),\n      userId: req.user.id\n    }\n  }).then(function (tickets) {\n    res.json({\n      tickets: tickets\n    });\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\n\nexports.createTicket = function (req, res, next) {\n  var errors = validationResult(req);\n\n  if (!errors.isEmpty()) {\n    return res.status(422).json({\n      message: 'Errore input parametri',\n      error: errors.array()\n    });\n  }\n\n  var title = req.body.title;\n  var date = req.body.date;\n  var name = req.body.name; //INSERT NEL DATABASE  \n\n  req.user.createTicket({\n    title: title,\n    date: date,\n    name: name\n  }).then(function (ticket) {\n    res.status(201).json({\n      messages: 'Success Operation',\n      ticket: ticket\n    });\n  })[\"catch\"](function (err) {\n    return res.status(422).json({\n      message: 'Error nel Salvataggio'\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc2VydmF0aW9uLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJ2YWxpZGF0aW9uUmVzdWx0IiwiU2VxdWVsaXplIiwiT3AiLCJwYXRoIiwiZnMiLCJUaWNrZXQiLCJVc2VyIiwiZXhwb3J0cyIsImdldFRpY2tldHNCeU1lIiwicmVxIiwicmVzIiwibmV4dCIsInVzZXIiLCJnZXRUaWNrZXRzIiwidGhlbiIsInRpY2tldHMiLCJqc29uIiwiZXJyIiwiY29uc29sZSIsImxvZyIsInNlYXJjaFRpY2tldEJ5TWUiLCJ0aXRsZSIsInF1ZXJ5IiwiZmluZEFsbCIsIndoZXJlIiwibGlrZSIsInVzZXJJZCIsImlkIiwiY3JlYXRlVGlja2V0IiwiZXJyb3JzIiwiaXNFbXB0eSIsInN0YXR1cyIsIm1lc3NhZ2UiLCJlcnJvciIsImFycmF5IiwiYm9keSIsImRhdGUiLCJuYW1lIiwidGlja2V0IiwibWVzc2FnZXMiXSwibWFwcGluZ3MiOiI7Ozs7ZUFBNkJBLE9BQU8sQ0FBQyx5QkFBRCxDO0lBQTVCQyxnQixZQUFBQSxnQjs7QUFDUixJQUFNQyxTQUFTLEdBQUdGLE9BQU8sQ0FBQyxXQUFELENBQXpCOztBQUNBLElBQU1HLEVBQUUsR0FBR0QsU0FBUyxDQUFDQyxFQUFyQjs7QUFDQSxJQUFNQyxJQUFJLEdBQUdKLE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUNBLElBQU1LLEVBQUUsR0FBR0wsT0FBTyxDQUFDLElBQUQsQ0FBbEI7O0FBRUEsSUFBTU0sTUFBTSxHQUFHTixPQUFPLENBQUMsa0JBQUQsQ0FBdEI7O0FBQ0EsSUFBTU8sSUFBSSxHQUFHUCxPQUFPLENBQUMsZ0JBQUQsQ0FBcEI7O0FBRUFRLE9BQU8sQ0FBQ0MsY0FBUixHQUF5QixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFvQjtBQUN6Q0YsRUFBQUEsR0FBRyxDQUFDRyxJQUFKLENBQVNDLFVBQVQsR0FBc0JDLElBQXRCLENBQTJCLFVBQUNDLE9BQUQsRUFBYTtBQUNwQ0wsSUFBQUEsR0FBRyxDQUFDTSxJQUFKLENBQVM7QUFBQ0QsTUFBQUEsT0FBTyxFQUFHQTtBQUFYLEtBQVQ7QUFDSCxHQUZELFdBR0ksVUFBQUUsR0FBRztBQUFBLFdBQUlDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixHQUFaLENBQUo7QUFBQSxHQUhQO0FBS0gsQ0FORDs7QUFRQVYsT0FBTyxDQUFDYSxnQkFBUixHQUEyQixVQUFDWCxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFvQjtBQUMzQyxNQUFNVSxLQUFLLEdBQUcsTUFBTVosR0FBRyxDQUFDYSxLQUFKLENBQVVELEtBQWhCLEdBQXdCLEdBQXRDO0FBQ0FoQixFQUFBQSxNQUFNLENBQUNrQixPQUFQLENBQWU7QUFBQ0MsSUFBQUEsS0FBSyxFQUFHO0FBQUNILE1BQUFBLEtBQUssc0JBQUtuQixFQUFFLENBQUN1QixJQUFSLEVBQWdCSixLQUFoQixDQUFOO0FBQThCSyxNQUFBQSxNQUFNLEVBQUdqQixHQUFHLENBQUNHLElBQUosQ0FBU2U7QUFBaEQ7QUFBVCxHQUFmLEVBQ0NiLElBREQsQ0FDTSxVQUFDQyxPQUFELEVBQWE7QUFDZkwsSUFBQUEsR0FBRyxDQUFDTSxJQUFKLENBQVM7QUFBQ0QsTUFBQUEsT0FBTyxFQUFHQTtBQUFYLEtBQVQ7QUFDSCxHQUhELFdBSUksVUFBQUUsR0FBRztBQUFBLFdBQUlDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixHQUFaLENBQUo7QUFBQSxHQUpQO0FBTUgsQ0FSRDs7QUFVQVYsT0FBTyxDQUFDcUIsWUFBUixHQUF1QixVQUFDbkIsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsRUFBb0I7QUFDdkMsTUFBTWtCLE1BQU0sR0FBRzdCLGdCQUFnQixDQUFDUyxHQUFELENBQS9COztBQUVBLE1BQUcsQ0FBQ29CLE1BQU0sQ0FBQ0MsT0FBUCxFQUFKLEVBQXNCO0FBQ2xCLFdBQU9wQixHQUFHLENBQUNxQixNQUFKLENBQVcsR0FBWCxFQUFnQmYsSUFBaEIsQ0FBcUI7QUFDeEJnQixNQUFBQSxPQUFPLEVBQUcsd0JBRGM7QUFFeEJDLE1BQUFBLEtBQUssRUFBR0osTUFBTSxDQUFDSyxLQUFQO0FBRmdCLEtBQXJCLENBQVA7QUFJSDs7QUFFRCxNQUFNYixLQUFLLEdBQUdaLEdBQUcsQ0FBQzBCLElBQUosQ0FBU2QsS0FBdkI7QUFDQSxNQUFNZSxJQUFJLEdBQUczQixHQUFHLENBQUMwQixJQUFKLENBQVNDLElBQXRCO0FBQ0EsTUFBTUMsSUFBSSxHQUFHNUIsR0FBRyxDQUFDMEIsSUFBSixDQUFTRSxJQUF0QixDQVp1QyxDQWF2Qzs7QUFDQTVCLEVBQUFBLEdBQUcsQ0FBQ0csSUFBSixDQUFTZ0IsWUFBVCxDQUFzQjtBQUNsQlAsSUFBQUEsS0FBSyxFQUFHQSxLQURVO0FBRWxCZSxJQUFBQSxJQUFJLEVBQUdBLElBRlc7QUFHbEJDLElBQUFBLElBQUksRUFBR0E7QUFIVyxHQUF0QixFQUlHdkIsSUFKSCxDQUlRLFVBQUN3QixNQUFELEVBQVk7QUFDaEI1QixJQUFBQSxHQUFHLENBQUNxQixNQUFKLENBQVcsR0FBWCxFQUFnQmYsSUFBaEIsQ0FBcUI7QUFDakJ1QixNQUFBQSxRQUFRLEVBQUcsbUJBRE07QUFFakJELE1BQUFBLE1BQU0sRUFBR0E7QUFGUSxLQUFyQjtBQUlILEdBVEQsV0FTVSxVQUFBckIsR0FBRyxFQUFJO0FBQ2QsV0FBT1AsR0FBRyxDQUFDcUIsTUFBSixDQUFXLEdBQVgsRUFBZ0JmLElBQWhCLENBQXFCO0FBQ3hCZ0IsTUFBQUEsT0FBTyxFQUFHO0FBRGMsS0FBckIsQ0FBUDtBQUdGLEdBYkQ7QUFjSCxDQTVCRCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvQWxlc3NhbmRyb19NdXNvbGluby9EZXNrdG9wL0RyZWFtTGFuZEZlc3RpdmFsL2NvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyB2YWxpZGF0aW9uUmVzdWx0IH0gPSByZXF1aXJlKCdleHByZXNzLXZhbGlkYXRvci9jaGVjaycpO1xuY29uc3QgU2VxdWVsaXplID0gcmVxdWlyZSgnc2VxdWVsaXplJyk7XG5jb25zdCBPcCA9IFNlcXVlbGl6ZS5PcDtcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5jb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG5cbmNvbnN0IFRpY2tldCA9IHJlcXVpcmUoJy4uL21vZGVscy90aWNrZXQnKTtcbmNvbnN0IFVzZXIgPSByZXF1aXJlKCcuLi9tb2RlbHMvdXNlcicpO1xuXG5leHBvcnRzLmdldFRpY2tldHNCeU1lID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgcmVxLnVzZXIuZ2V0VGlja2V0cygpLnRoZW4oKHRpY2tldHMpID0+IHtcbiAgICAgICAgcmVzLmpzb24oe3RpY2tldHMgOiB0aWNrZXRzfSk7XG4gICAgfSkuY2F0Y2goXG4gICAgICAgIGVyciA9PiBjb25zb2xlLmxvZyhlcnIpXG4gICAgKTtcbn07XG5cbmV4cG9ydHMuc2VhcmNoVGlja2V0QnlNZSA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIGNvbnN0IHRpdGxlID0gJyUnICsgcmVxLnF1ZXJ5LnRpdGxlICsgJyUnO1xuICAgIFRpY2tldC5maW5kQWxsKHt3aGVyZSA6IHt0aXRsZSA6IHtbT3AubGlrZV0gOiB0aXRsZX0sIHVzZXJJZCA6IHJlcS51c2VyLmlkfX0pXG4gICAgLnRoZW4oKHRpY2tldHMpID0+IHtcbiAgICAgICAgcmVzLmpzb24oe3RpY2tldHMgOiB0aWNrZXRzfSk7XG4gICAgfSkuY2F0Y2goXG4gICAgICAgIGVyciA9PiBjb25zb2xlLmxvZyhlcnIpXG4gICAgKTtcbn07XG5cbmV4cG9ydHMuY3JlYXRlVGlja2V0ID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgY29uc3QgZXJyb3JzID0gdmFsaWRhdGlvblJlc3VsdChyZXEpO1xuICAgIFxuICAgIGlmKCFlcnJvcnMuaXNFbXB0eSgpKSB7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQyMikuanNvbih7XG4gICAgICAgICAgICBtZXNzYWdlIDogJ0Vycm9yZSBpbnB1dCBwYXJhbWV0cmknLFxuICAgICAgICAgICAgZXJyb3IgOiBlcnJvcnMuYXJyYXkoKVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBjb25zdCB0aXRsZSA9IHJlcS5ib2R5LnRpdGxlO1xuICAgIGNvbnN0IGRhdGUgPSByZXEuYm9keS5kYXRlO1xuICAgIGNvbnN0IG5hbWUgPSByZXEuYm9keS5uYW1lO1xuICAgIC8vSU5TRVJUIE5FTCBEQVRBQkFTRSAgXG4gICAgcmVxLnVzZXIuY3JlYXRlVGlja2V0KHtcbiAgICAgICAgdGl0bGUgOiB0aXRsZSxcbiAgICAgICAgZGF0ZSA6IGRhdGUsXG4gICAgICAgIG5hbWUgOiBuYW1lXG4gICAgfSkudGhlbigodGlja2V0KSA9PiB7XG4gICAgICAgIHJlcy5zdGF0dXMoMjAxKS5qc29uKHtcbiAgICAgICAgICAgIG1lc3NhZ2VzIDogJ1N1Y2Nlc3MgT3BlcmF0aW9uJyxcbiAgICAgICAgICAgIHRpY2tldCA6IHRpY2tldFxuICAgICAgICB9KTtcbiAgICB9KS5jYXRjaCggZXJyID0+IHtcbiAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MjIpLmpzb24oe1xuICAgICAgICAgICBtZXNzYWdlIDogJ0Vycm9yIG5lbCBTYWx2YXRhZ2dpbydcbiAgICAgICB9KVxuICAgIH0pO1xufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "reservation.js"
      ],
      "names": [
        "require",
        "validationResult",
        "Sequelize",
        "Op",
        "path",
        "fs",
        "Ticket",
        "User",
        "exports",
        "getTicketsByMe",
        "req",
        "res",
        "next",
        "user",
        "getTickets",
        "then",
        "tickets",
        "json",
        "err",
        "console",
        "log",
        "searchTicketByMe",
        "title",
        "query",
        "findAll",
        "where",
        "like",
        "userId",
        "id",
        "createTicket",
        "errors",
        "isEmpty",
        "status",
        "message",
        "error",
        "array",
        "body",
        "date",
        "name",
        "ticket",
        "messages"
      ],
      "mappings": ";;;;eAA6BA,OAAO,CAAC,yBAAD,C;IAA5BC,gB,YAAAA,gB;;AACR,IAAMC,SAAS,GAAGF,OAAO,CAAC,WAAD,CAAzB;;AACA,IAAMG,EAAE,GAAGD,SAAS,CAACC,EAArB;;AACA,IAAMC,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMK,EAAE,GAAGL,OAAO,CAAC,IAAD,CAAlB;;AAEA,IAAMM,MAAM,GAAGN,OAAO,CAAC,kBAAD,CAAtB;;AACA,IAAMO,IAAI,GAAGP,OAAO,CAAC,gBAAD,CAApB;;AAEAQ,OAAO,CAACC,cAAR,GAAyB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACzCF,EAAAA,GAAG,CAACG,IAAJ,CAASC,UAAT,GAAsBC,IAAtB,CAA2B,UAACC,OAAD,EAAa;AACpCL,IAAAA,GAAG,CAACM,IAAJ,CAAS;AAACD,MAAAA,OAAO,EAAGA;AAAX,KAAT;AACH,GAFD,WAGI,UAAAE,GAAG;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,GAHP;AAKH,CAND;;AAQAV,OAAO,CAACa,gBAAR,GAA2B,UAACX,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC3C,MAAMU,KAAK,GAAG,MAAMZ,GAAG,CAACa,KAAJ,CAAUD,KAAhB,GAAwB,GAAtC;AACAhB,EAAAA,MAAM,CAACkB,OAAP,CAAe;AAACC,IAAAA,KAAK,EAAG;AAACH,MAAAA,KAAK,sBAAKnB,EAAE,CAACuB,IAAR,EAAgBJ,KAAhB,CAAN;AAA8BK,MAAAA,MAAM,EAAGjB,GAAG,CAACG,IAAJ,CAASe;AAAhD;AAAT,GAAf,EACCb,IADD,CACM,UAACC,OAAD,EAAa;AACfL,IAAAA,GAAG,CAACM,IAAJ,CAAS;AAACD,MAAAA,OAAO,EAAGA;AAAX,KAAT;AACH,GAHD,WAII,UAAAE,GAAG;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,GAJP;AAMH,CARD;;AAUAV,OAAO,CAACqB,YAAR,GAAuB,UAACnB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACvC,MAAMkB,MAAM,GAAG7B,gBAAgB,CAACS,GAAD,CAA/B;;AAEA,MAAG,CAACoB,MAAM,CAACC,OAAP,EAAJ,EAAsB;AAClB,WAAOpB,GAAG,CAACqB,MAAJ,CAAW,GAAX,EAAgBf,IAAhB,CAAqB;AACxBgB,MAAAA,OAAO,EAAG,wBADc;AAExBC,MAAAA,KAAK,EAAGJ,MAAM,CAACK,KAAP;AAFgB,KAArB,CAAP;AAIH;;AAED,MAAMb,KAAK,GAAGZ,GAAG,CAAC0B,IAAJ,CAASd,KAAvB;AACA,MAAMe,IAAI,GAAG3B,GAAG,CAAC0B,IAAJ,CAASC,IAAtB;AACA,MAAMC,IAAI,GAAG5B,GAAG,CAAC0B,IAAJ,CAASE,IAAtB,CAZuC,CAavC;;AACA5B,EAAAA,GAAG,CAACG,IAAJ,CAASgB,YAAT,CAAsB;AAClBP,IAAAA,KAAK,EAAGA,KADU;AAElBe,IAAAA,IAAI,EAAGA,IAFW;AAGlBC,IAAAA,IAAI,EAAGA;AAHW,GAAtB,EAIGvB,IAJH,CAIQ,UAACwB,MAAD,EAAY;AAChB5B,IAAAA,GAAG,CAACqB,MAAJ,CAAW,GAAX,EAAgBf,IAAhB,CAAqB;AACjBuB,MAAAA,QAAQ,EAAG,mBADM;AAEjBD,MAAAA,MAAM,EAAGA;AAFQ,KAArB;AAIH,GATD,WASU,UAAArB,GAAG,EAAI;AACd,WAAOP,GAAG,CAACqB,MAAJ,CAAW,GAAX,EAAgBf,IAAhB,CAAqB;AACxBgB,MAAAA,OAAO,EAAG;AADc,KAArB,CAAP;AAGF,GAbD;AAcH,CA5BD",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers",
      "sourcesContent": [
        "const { validationResult } = require('express-validator/check');\nconst Sequelize = require('sequelize');\nconst Op = Sequelize.Op;\nconst path = require('path');\nconst fs = require('fs');\n\nconst Ticket = require('../models/ticket');\nconst User = require('../models/user');\n\nexports.getTicketsByMe = (req, res, next) => {\n    req.user.getTickets().then((tickets) => {\n        res.json({tickets : tickets});\n    }).catch(\n        err => console.log(err)\n    );\n};\n\nexports.searchTicketByMe = (req, res, next) => {\n    const title = '%' + req.query.title + '%';\n    Ticket.findAll({where : {title : {[Op.like] : title}, userId : req.user.id}})\n    .then((tickets) => {\n        res.json({tickets : tickets});\n    }).catch(\n        err => console.log(err)\n    );\n};\n\nexports.createTicket = (req, res, next) => {\n    const errors = validationResult(req);\n    \n    if(!errors.isEmpty()) {\n        return res.status(422).json({\n            message : 'Errore input parametri',\n            error : errors.array()\n        });\n    }\n\n    const title = req.body.title;\n    const date = req.body.date;\n    const name = req.body.name;\n    //INSERT NEL DATABASE  \n    req.user.createTicket({\n        title : title,\n        date : date,\n        name : name\n    }).then((ticket) => {\n        res.status(201).json({\n            messages : 'Success Operation',\n            ticket : ticket\n        });\n    }).catch( err => {\n       return res.status(422).json({\n           message : 'Error nel Salvataggio'\n       })\n    });\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1577794649799
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/ticket.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/ticket.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/ticket.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/ticket.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models",
        "sourceFileName": "ticket.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar Sequelize = require('sequelize');\n\nvar sequelize = require('../utils/database');\n\nvar Ticket = sequelize.define('ticket', {\n  id: {\n    type: Sequelize.INTEGER,\n    autoIncrement: true,\n    allowNull: false,\n    primaryKey: true\n  },\n  title: {\n    type: Sequelize.STRING,\n    allowNull: false\n  },\n  date: {\n    type: Sequelize.STRING,\n    allowNull: true\n  },\n  name: {\n    type: Sequelize.STRING,\n    allowNull: false\n  }\n});\nmodule.exports = Ticket;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRpY2tldC5qcyJdLCJuYW1lcyI6WyJTZXF1ZWxpemUiLCJyZXF1aXJlIiwic2VxdWVsaXplIiwiVGlja2V0IiwiZGVmaW5lIiwiaWQiLCJ0eXBlIiwiSU5URUdFUiIsImF1dG9JbmNyZW1lbnQiLCJhbGxvd051bGwiLCJwcmltYXJ5S2V5IiwidGl0bGUiLCJTVFJJTkciLCJkYXRlIiwibmFtZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsU0FBUyxHQUFHQyxPQUFPLENBQUMsV0FBRCxDQUF6Qjs7QUFFQSxJQUFNQyxTQUFTLEdBQUdELE9BQU8sQ0FBQyxtQkFBRCxDQUF6Qjs7QUFFQSxJQUFNRSxNQUFNLEdBQUdELFNBQVMsQ0FBQ0UsTUFBVixDQUFpQixRQUFqQixFQUEyQjtBQUN0Q0MsRUFBQUEsRUFBRSxFQUFHO0FBQ0RDLElBQUFBLElBQUksRUFBR04sU0FBUyxDQUFDTyxPQURoQjtBQUVEQyxJQUFBQSxhQUFhLEVBQUcsSUFGZjtBQUdEQyxJQUFBQSxTQUFTLEVBQUcsS0FIWDtBQUlEQyxJQUFBQSxVQUFVLEVBQUc7QUFKWixHQURpQztBQU90Q0MsRUFBQUEsS0FBSyxFQUFHO0FBQ0pMLElBQUFBLElBQUksRUFBR04sU0FBUyxDQUFDWSxNQURiO0FBRUpILElBQUFBLFNBQVMsRUFBRztBQUZSLEdBUDhCO0FBV3RDSSxFQUFBQSxJQUFJLEVBQUc7QUFDSFAsSUFBQUEsSUFBSSxFQUFHTixTQUFTLENBQUNZLE1BRGQ7QUFFSEgsSUFBQUEsU0FBUyxFQUFHO0FBRlQsR0FYK0I7QUFldENLLEVBQUFBLElBQUksRUFBRztBQUNIUixJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ1ksTUFEZDtBQUVISCxJQUFBQSxTQUFTLEVBQUc7QUFGVDtBQWYrQixDQUEzQixDQUFmO0FBcUJBTSxNQUFNLENBQUNDLE9BQVAsR0FBaUJiLE1BQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9BbGVzc2FuZHJvX011c29saW5vL0Rlc2t0b3AvRHJlYW1MYW5kRmVzdGl2YWwvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU2VxdWVsaXplID0gcmVxdWlyZSgnc2VxdWVsaXplJyk7XG5cbmNvbnN0IHNlcXVlbGl6ZSA9IHJlcXVpcmUoJy4uL3V0aWxzL2RhdGFiYXNlJyk7XG5cbmNvbnN0IFRpY2tldCA9IHNlcXVlbGl6ZS5kZWZpbmUoJ3RpY2tldCcsIHtcbiAgICBpZCA6IHtcbiAgICAgICAgdHlwZSA6IFNlcXVlbGl6ZS5JTlRFR0VSLFxuICAgICAgICBhdXRvSW5jcmVtZW50IDogdHJ1ZSxcbiAgICAgICAgYWxsb3dOdWxsIDogZmFsc2UsXG4gICAgICAgIHByaW1hcnlLZXkgOiB0cnVlXG4gICAgfSxcbiAgICB0aXRsZSA6IHtcbiAgICAgICAgdHlwZSA6IFNlcXVlbGl6ZS5TVFJJTkcsXG4gICAgICAgIGFsbG93TnVsbCA6IGZhbHNlLFxuICAgIH0sXG4gICAgZGF0ZSA6IHtcbiAgICAgICAgdHlwZSA6IFNlcXVlbGl6ZS5TVFJJTkcsXG4gICAgICAgIGFsbG93TnVsbCA6IHRydWUsXG4gICAgfSxcbiAgICBuYW1lIDoge1xuICAgICAgICB0eXBlIDogU2VxdWVsaXplLlNUUklORyxcbiAgICAgICAgYWxsb3dOdWxsIDogZmFsc2UsXG4gICAgfVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gVGlja2V0OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "ticket.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "sequelize",
        "Ticket",
        "define",
        "id",
        "type",
        "INTEGER",
        "autoIncrement",
        "allowNull",
        "primaryKey",
        "title",
        "STRING",
        "date",
        "name",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,IAAMC,SAAS,GAAGD,OAAO,CAAC,mBAAD,CAAzB;;AAEA,IAAME,MAAM,GAAGD,SAAS,CAACE,MAAV,CAAiB,QAAjB,EAA2B;AACtCC,EAAAA,EAAE,EAAG;AACDC,IAAAA,IAAI,EAAGN,SAAS,CAACO,OADhB;AAEDC,IAAAA,aAAa,EAAG,IAFf;AAGDC,IAAAA,SAAS,EAAG,KAHX;AAIDC,IAAAA,UAAU,EAAG;AAJZ,GADiC;AAOtCC,EAAAA,KAAK,EAAG;AACJL,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADb;AAEJH,IAAAA,SAAS,EAAG;AAFR,GAP8B;AAWtCI,EAAAA,IAAI,EAAG;AACHP,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADd;AAEHH,IAAAA,SAAS,EAAG;AAFT,GAX+B;AAetCK,EAAAA,IAAI,EAAG;AACHR,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADd;AAEHH,IAAAA,SAAS,EAAG;AAFT;AAf+B,CAA3B,CAAf;AAqBAM,MAAM,CAACC,OAAP,GAAiBb,MAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst Ticket = sequelize.define('ticket', {\n    id : {\n        type : Sequelize.INTEGER,\n        autoIncrement : true,\n        allowNull : false,\n        primaryKey : true\n    },\n    title : {\n        type : Sequelize.STRING,\n        allowNull : false,\n    },\n    date : {\n        type : Sequelize.STRING,\n        allowNull : true,\n    },\n    name : {\n        type : Sequelize.STRING,\n        allowNull : false,\n    }\n});\n\nmodule.exports = Ticket;"
      ]
    },
    "sourceType": "script",
    "mtime": 1577444667360
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar authRoutes = require('./auth');\n\nvar reservationRoutes = require('./reservation');\n\nvar artisticeventRoutes = require('./artisticevent');\n\nvar performerRoutes = require('./performer');\n\nvar seminaryRoutes = require('./seminary');\n\nvar galleryRoutes = require('./gallery');\n\nmodule.exports = function (app) {\n  app.use('/auth', authRoutes);\n  app.use('/reservation', reservationRoutes);\n  app.use('/artisticevent', artisticeventRoutes);\n  app.use('/performer', performerRoutes);\n  app.use('/seminary', seminaryRoutes);\n  app.use('/gallery', galleryRoutes);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImF1dGhSb3V0ZXMiLCJyZXF1aXJlIiwicmVzZXJ2YXRpb25Sb3V0ZXMiLCJhcnRpc3RpY2V2ZW50Um91dGVzIiwicGVyZm9ybWVyUm91dGVzIiwic2VtaW5hcnlSb3V0ZXMiLCJnYWxsZXJ5Um91dGVzIiwibW9kdWxlIiwiZXhwb3J0cyIsImFwcCIsInVzZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxVQUFVLEdBQUdDLE9BQU8sQ0FBQyxRQUFELENBQTFCOztBQUNBLElBQU1DLGlCQUFpQixHQUFHRCxPQUFPLENBQUMsZUFBRCxDQUFqQzs7QUFDQSxJQUFNRSxtQkFBbUIsR0FBR0YsT0FBTyxDQUFDLGlCQUFELENBQW5DOztBQUNBLElBQU1HLGVBQWUsR0FBR0gsT0FBTyxDQUFDLGFBQUQsQ0FBL0I7O0FBQ0EsSUFBTUksY0FBYyxHQUFHSixPQUFPLENBQUMsWUFBRCxDQUE5Qjs7QUFDQSxJQUFNSyxhQUFhLEdBQUdMLE9BQU8sQ0FBQyxXQUFELENBQTdCOztBQUVBTSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBU0MsR0FBVCxFQUFjO0FBQzNCQSxFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxPQUFSLEVBQWlCVixVQUFqQjtBQUNBUyxFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxjQUFSLEVBQXdCUixpQkFBeEI7QUFDQU8sRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsZ0JBQVIsRUFBMEJQLG1CQUExQjtBQUNBTSxFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxZQUFSLEVBQXNCTixlQUF0QjtBQUNBSyxFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxXQUFSLEVBQXFCTCxjQUFyQjtBQUNBSSxFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxVQUFSLEVBQW9CSixhQUFwQjtBQUNILENBUEQiLCJzb3VyY2VSb290IjoiL1VzZXJzL0FsZXNzYW5kcm9fTXVzb2xpbm8vRGVza3RvcC9EcmVhbUxhbmRGZXN0aXZhbC9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBhdXRoUm91dGVzID0gcmVxdWlyZSgnLi9hdXRoJyk7XG5jb25zdCByZXNlcnZhdGlvblJvdXRlcyA9IHJlcXVpcmUoJy4vcmVzZXJ2YXRpb24nKVxuY29uc3QgYXJ0aXN0aWNldmVudFJvdXRlcyA9IHJlcXVpcmUoJy4vYXJ0aXN0aWNldmVudCcpO1xuY29uc3QgcGVyZm9ybWVyUm91dGVzID0gcmVxdWlyZSgnLi9wZXJmb3JtZXInKTtcbmNvbnN0IHNlbWluYXJ5Um91dGVzID0gcmVxdWlyZSgnLi9zZW1pbmFyeScpO1xuY29uc3QgZ2FsbGVyeVJvdXRlcyA9IHJlcXVpcmUoJy4vZ2FsbGVyeScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGFwcCkge1xuICAgIGFwcC51c2UoJy9hdXRoJywgYXV0aFJvdXRlcyk7XG4gICAgYXBwLnVzZSgnL3Jlc2VydmF0aW9uJywgcmVzZXJ2YXRpb25Sb3V0ZXMpXG4gICAgYXBwLnVzZSgnL2FydGlzdGljZXZlbnQnLCBhcnRpc3RpY2V2ZW50Um91dGVzKTtcbiAgICBhcHAudXNlKCcvcGVyZm9ybWVyJywgcGVyZm9ybWVyUm91dGVzKTtcbiAgICBhcHAudXNlKCcvc2VtaW5hcnknLCBzZW1pbmFyeVJvdXRlcyk7XG4gICAgYXBwLnVzZSgnL2dhbGxlcnknLCBnYWxsZXJ5Um91dGVzKTtcbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "authRoutes",
        "require",
        "reservationRoutes",
        "artisticeventRoutes",
        "performerRoutes",
        "seminaryRoutes",
        "galleryRoutes",
        "module",
        "exports",
        "app",
        "use"
      ],
      "mappings": ";;AAAA,IAAMA,UAAU,GAAGC,OAAO,CAAC,QAAD,CAA1B;;AACA,IAAMC,iBAAiB,GAAGD,OAAO,CAAC,eAAD,CAAjC;;AACA,IAAME,mBAAmB,GAAGF,OAAO,CAAC,iBAAD,CAAnC;;AACA,IAAMG,eAAe,GAAGH,OAAO,CAAC,aAAD,CAA/B;;AACA,IAAMI,cAAc,GAAGJ,OAAO,CAAC,YAAD,CAA9B;;AACA,IAAMK,aAAa,GAAGL,OAAO,CAAC,WAAD,CAA7B;;AAEAM,MAAM,CAACC,OAAP,GAAiB,UAASC,GAAT,EAAc;AAC3BA,EAAAA,GAAG,CAACC,GAAJ,CAAQ,OAAR,EAAiBV,UAAjB;AACAS,EAAAA,GAAG,CAACC,GAAJ,CAAQ,cAAR,EAAwBR,iBAAxB;AACAO,EAAAA,GAAG,CAACC,GAAJ,CAAQ,gBAAR,EAA0BP,mBAA1B;AACAM,EAAAA,GAAG,CAACC,GAAJ,CAAQ,YAAR,EAAsBN,eAAtB;AACAK,EAAAA,GAAG,CAACC,GAAJ,CAAQ,WAAR,EAAqBL,cAArB;AACAI,EAAAA,GAAG,CAACC,GAAJ,CAAQ,UAAR,EAAoBJ,aAApB;AACH,CAPD",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes",
      "sourcesContent": [
        "const authRoutes = require('./auth');\nconst reservationRoutes = require('./reservation')\nconst artisticeventRoutes = require('./artisticevent');\nconst performerRoutes = require('./performer');\nconst seminaryRoutes = require('./seminary');\nconst galleryRoutes = require('./gallery');\n\nmodule.exports = function(app) {\n    app.use('/auth', authRoutes);\n    app.use('/reservation', reservationRoutes)\n    app.use('/artisticevent', artisticeventRoutes);\n    app.use('/performer', performerRoutes);\n    app.use('/seminary', seminaryRoutes);\n    app.use('/gallery', galleryRoutes);\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1577467449085
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes/auth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes/auth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes/auth.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes/auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes",
        "sourceFileName": "auth.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar _require = require('express-validator/check'),\n    body = _require.body,\n    query = _require.query;\n\nvar router = express.Router();\n\nvar authController = require('../controllers/auth');\n\nvar User = require('../models/user');\n\nvar isAuth = require('../middleware/is-auth');\n\nrouter.post('/register', [body('email').isEmail().withMessage('Inserisci una mail valida name@server.com').custom(function (value, _ref) {\n  var req = _ref.req;\n  return User.findOne({\n    where: {\n      email: value\n    }\n  }).then(function (user) {\n    if (user) {\n      return Promise.reject('Email Esistente');\n    }\n  });\n}), body('password').trim().isLength({\n  min: 5\n}).withMessage('Password > 5 caratteri'), body('name').trim().not().isEmpty().withMessage('Name non vuoto')], authController.registerUser);\nrouter.post('/login', [body('email').isEmail().withMessage('Inserisci una mail valida name@server.com'), body('password').trim().isLength({\n  min: 5\n}).withMessage('Password > 5 caratteri')], authController.loginUser);\nrouter.get('/me', isAuth, authController.loginMe);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGguanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJib2R5IiwicXVlcnkiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJhdXRoQ29udHJvbGxlciIsIlVzZXIiLCJpc0F1dGgiLCJwb3N0IiwiaXNFbWFpbCIsIndpdGhNZXNzYWdlIiwiY3VzdG9tIiwidmFsdWUiLCJyZXEiLCJmaW5kT25lIiwid2hlcmUiLCJlbWFpbCIsInRoZW4iLCJ1c2VyIiwiUHJvbWlzZSIsInJlamVjdCIsInRyaW0iLCJpc0xlbmd0aCIsIm1pbiIsIm5vdCIsImlzRW1wdHkiLCJyZWdpc3RlclVzZXIiLCJsb2dpblVzZXIiLCJnZXQiLCJsb2dpbk1lIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztlQUN3QkEsT0FBTyxDQUFDLHlCQUFELEM7SUFBdkJDLEksWUFBQUEsSTtJQUFNQyxLLFlBQUFBLEs7O0FBQ2QsSUFBTUMsTUFBTSxHQUFHSixPQUFPLENBQUNLLE1BQVIsRUFBZjs7QUFFQSxJQUFNQyxjQUFjLEdBQUdMLE9BQU8sQ0FBQyxxQkFBRCxDQUE5Qjs7QUFDQSxJQUFNTSxJQUFJLEdBQUdOLE9BQU8sQ0FBQyxnQkFBRCxDQUFwQjs7QUFDQSxJQUFNTyxNQUFNLEdBQUdQLE9BQU8sQ0FBQyx1QkFBRCxDQUF0Qjs7QUFFQUcsTUFBTSxDQUFDSyxJQUFQLENBQVksV0FBWixFQUNJLENBQ0lQLElBQUksQ0FBQyxPQUFELENBQUosQ0FBY1EsT0FBZCxHQUF3QkMsV0FBeEIsQ0FBb0MsMkNBQXBDLEVBQ0NDLE1BREQsQ0FDUSxVQUFDQyxLQUFELFFBQWtCO0FBQUEsTUFBVEMsR0FBUyxRQUFUQSxHQUFTO0FBQ3RCLFNBQU9QLElBQUksQ0FBQ1EsT0FBTCxDQUFhO0FBQUNDLElBQUFBLEtBQUssRUFBRztBQUFDQyxNQUFBQSxLQUFLLEVBQUdKO0FBQVQ7QUFBVCxHQUFiLEVBQXdDSyxJQUF4QyxDQUE2QyxVQUFBQyxJQUFJLEVBQUk7QUFDeEQsUUFBR0EsSUFBSCxFQUFTO0FBQ0wsYUFBT0MsT0FBTyxDQUFDQyxNQUFSLENBQWUsaUJBQWYsQ0FBUDtBQUNIO0FBQ0osR0FKTSxDQUFQO0FBS0gsQ0FQRCxDQURKLEVBU0luQixJQUFJLENBQUMsVUFBRCxDQUFKLENBQWlCb0IsSUFBakIsR0FBd0JDLFFBQXhCLENBQWlDO0FBQUNDLEVBQUFBLEdBQUcsRUFBRztBQUFQLENBQWpDLEVBQTRDYixXQUE1QyxDQUF3RCx3QkFBeEQsQ0FUSixFQVVJVCxJQUFJLENBQUMsTUFBRCxDQUFKLENBQWFvQixJQUFiLEdBQW9CRyxHQUFwQixHQUEwQkMsT0FBMUIsR0FBb0NmLFdBQXBDLENBQWdELGdCQUFoRCxDQVZKLENBREosRUFhSUwsY0FBYyxDQUFDcUIsWUFibkI7QUFlQXZCLE1BQU0sQ0FBQ0ssSUFBUCxDQUFZLFFBQVosRUFDSSxDQUNJUCxJQUFJLENBQUMsT0FBRCxDQUFKLENBQWNRLE9BQWQsR0FBd0JDLFdBQXhCLENBQW9DLDJDQUFwQyxDQURKLEVBRUlULElBQUksQ0FBQyxVQUFELENBQUosQ0FBaUJvQixJQUFqQixHQUF3QkMsUUFBeEIsQ0FBaUM7QUFBQ0MsRUFBQUEsR0FBRyxFQUFHO0FBQVAsQ0FBakMsRUFBNENiLFdBQTVDLENBQXdELHdCQUF4RCxDQUZKLENBREosRUFLSUwsY0FBYyxDQUFDc0IsU0FMbkI7QUFPQXhCLE1BQU0sQ0FBQ3lCLEdBQVAsQ0FBVyxLQUFYLEVBQWtCckIsTUFBbEIsRUFBMEJGLGNBQWMsQ0FBQ3dCLE9BQXpDO0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjVCLE1BQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9BbGVzc2FuZHJvX011c29saW5vL0Rlc2t0b3AvRHJlYW1MYW5kRmVzdGl2YWwvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbmNvbnN0IHsgYm9keSwgcXVlcnkgfSA9IHJlcXVpcmUoJ2V4cHJlc3MtdmFsaWRhdG9yL2NoZWNrJyk7XG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuXG5jb25zdCBhdXRoQ29udHJvbGxlciA9IHJlcXVpcmUoJy4uL2NvbnRyb2xsZXJzL2F1dGgnKTtcbmNvbnN0IFVzZXIgPSByZXF1aXJlKCcuLi9tb2RlbHMvdXNlcicpO1xuY29uc3QgaXNBdXRoID0gcmVxdWlyZSgnLi4vbWlkZGxld2FyZS9pcy1hdXRoJyk7XG5cbnJvdXRlci5wb3N0KCcvcmVnaXN0ZXInLFxuICAgIFtcbiAgICAgICAgYm9keSgnZW1haWwnKS5pc0VtYWlsKCkud2l0aE1lc3NhZ2UoJ0luc2VyaXNjaSB1bmEgbWFpbCB2YWxpZGEgbmFtZUBzZXJ2ZXIuY29tJylcbiAgICAgICAgLmN1c3RvbSgodmFsdWUsIHtyZXF9KSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gVXNlci5maW5kT25lKHt3aGVyZSA6IHtlbWFpbCA6IHZhbHVlfX0pLnRoZW4odXNlciA9PiB7XG4gICAgICAgICAgICAgICAgaWYodXNlcikge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoJ0VtYWlsIEVzaXN0ZW50ZScpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KSxcbiAgICAgICAgYm9keSgncGFzc3dvcmQnKS50cmltKCkuaXNMZW5ndGgoe21pbiA6IDV9KS53aXRoTWVzc2FnZSgnUGFzc3dvcmQgPiA1IGNhcmF0dGVyaScpLFxuICAgICAgICBib2R5KCduYW1lJykudHJpbSgpLm5vdCgpLmlzRW1wdHkoKS53aXRoTWVzc2FnZSgnTmFtZSBub24gdnVvdG8nKSxcbiAgICBdLFxuICAgIGF1dGhDb250cm9sbGVyLnJlZ2lzdGVyVXNlcik7XG5cbnJvdXRlci5wb3N0KCcvbG9naW4nLCBcbiAgICBbXG4gICAgICAgIGJvZHkoJ2VtYWlsJykuaXNFbWFpbCgpLndpdGhNZXNzYWdlKCdJbnNlcmlzY2kgdW5hIG1haWwgdmFsaWRhIG5hbWVAc2VydmVyLmNvbScpLFxuICAgICAgICBib2R5KCdwYXNzd29yZCcpLnRyaW0oKS5pc0xlbmd0aCh7bWluIDogNX0pLndpdGhNZXNzYWdlKCdQYXNzd29yZCA+IDUgY2FyYXR0ZXJpJyksXG4gICAgXSwgIFxuICAgIGF1dGhDb250cm9sbGVyLmxvZ2luVXNlcik7XG5cbnJvdXRlci5nZXQoJy9tZScsIGlzQXV0aCwgYXV0aENvbnRyb2xsZXIubG9naW5NZSk7XG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "auth.js"
      ],
      "names": [
        "express",
        "require",
        "body",
        "query",
        "router",
        "Router",
        "authController",
        "User",
        "isAuth",
        "post",
        "isEmail",
        "withMessage",
        "custom",
        "value",
        "req",
        "findOne",
        "where",
        "email",
        "then",
        "user",
        "Promise",
        "reject",
        "trim",
        "isLength",
        "min",
        "not",
        "isEmpty",
        "registerUser",
        "loginUser",
        "get",
        "loginMe",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;eACwBA,OAAO,CAAC,yBAAD,C;IAAvBC,I,YAAAA,I;IAAMC,K,YAAAA,K;;AACd,IAAMC,MAAM,GAAGJ,OAAO,CAACK,MAAR,EAAf;;AAEA,IAAMC,cAAc,GAAGL,OAAO,CAAC,qBAAD,CAA9B;;AACA,IAAMM,IAAI,GAAGN,OAAO,CAAC,gBAAD,CAApB;;AACA,IAAMO,MAAM,GAAGP,OAAO,CAAC,uBAAD,CAAtB;;AAEAG,MAAM,CAACK,IAAP,CAAY,WAAZ,EACI,CACIP,IAAI,CAAC,OAAD,CAAJ,CAAcQ,OAAd,GAAwBC,WAAxB,CAAoC,2CAApC,EACCC,MADD,CACQ,UAACC,KAAD,QAAkB;AAAA,MAATC,GAAS,QAATA,GAAS;AACtB,SAAOP,IAAI,CAACQ,OAAL,CAAa;AAACC,IAAAA,KAAK,EAAG;AAACC,MAAAA,KAAK,EAAGJ;AAAT;AAAT,GAAb,EAAwCK,IAAxC,CAA6C,UAAAC,IAAI,EAAI;AACxD,QAAGA,IAAH,EAAS;AACL,aAAOC,OAAO,CAACC,MAAR,CAAe,iBAAf,CAAP;AACH;AACJ,GAJM,CAAP;AAKH,CAPD,CADJ,EASInB,IAAI,CAAC,UAAD,CAAJ,CAAiBoB,IAAjB,GAAwBC,QAAxB,CAAiC;AAACC,EAAAA,GAAG,EAAG;AAAP,CAAjC,EAA4Cb,WAA5C,CAAwD,wBAAxD,CATJ,EAUIT,IAAI,CAAC,MAAD,CAAJ,CAAaoB,IAAb,GAAoBG,GAApB,GAA0BC,OAA1B,GAAoCf,WAApC,CAAgD,gBAAhD,CAVJ,CADJ,EAaIL,cAAc,CAACqB,YAbnB;AAeAvB,MAAM,CAACK,IAAP,CAAY,QAAZ,EACI,CACIP,IAAI,CAAC,OAAD,CAAJ,CAAcQ,OAAd,GAAwBC,WAAxB,CAAoC,2CAApC,CADJ,EAEIT,IAAI,CAAC,UAAD,CAAJ,CAAiBoB,IAAjB,GAAwBC,QAAxB,CAAiC;AAACC,EAAAA,GAAG,EAAG;AAAP,CAAjC,EAA4Cb,WAA5C,CAAwD,wBAAxD,CAFJ,CADJ,EAKIL,cAAc,CAACsB,SALnB;AAOAxB,MAAM,CAACyB,GAAP,CAAW,KAAX,EAAkBrB,MAAlB,EAA0BF,cAAc,CAACwB,OAAzC;AAEAC,MAAM,CAACC,OAAP,GAAiB5B,MAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes",
      "sourcesContent": [
        "const express = require('express');\nconst { body, query } = require('express-validator/check');\nconst router = express.Router();\n\nconst authController = require('../controllers/auth');\nconst User = require('../models/user');\nconst isAuth = require('../middleware/is-auth');\n\nrouter.post('/register',\n    [\n        body('email').isEmail().withMessage('Inserisci una mail valida name@server.com')\n        .custom((value, {req}) => {\n            return User.findOne({where : {email : value}}).then(user => {\n                if(user) {\n                    return Promise.reject('Email Esistente');\n                }\n            });\n        }),\n        body('password').trim().isLength({min : 5}).withMessage('Password > 5 caratteri'),\n        body('name').trim().not().isEmpty().withMessage('Name non vuoto'),\n    ],\n    authController.registerUser);\n\nrouter.post('/login', \n    [\n        body('email').isEmail().withMessage('Inserisci una mail valida name@server.com'),\n        body('password').trim().isLength({min : 5}).withMessage('Password > 5 caratteri'),\n    ],  \n    authController.loginUser);\n\nrouter.get('/me', isAuth, authController.loginMe);\n\nmodule.exports = router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1577043519950
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers/auth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers/auth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers/auth.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers/auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers",
        "sourceFileName": "auth.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _require = require('express-validator/check'),\n    validationResult = _require.validationResult;\n\nvar bcrypt = require('bcryptjs');\n\nvar jwt = require('jsonwebtoken');\n\nvar User = require('../models/user');\n\nexports.registerUser = function (req, res, next) {\n  var errors = validationResult(req);\n\n  if (!errors.isEmpty()) {\n    return res.status(422).json({\n      message: 'Errore input parametri',\n      error: errors.array()\n    });\n  }\n\n  var email = req.body.email;\n  var name = req.body.name;\n  var phoneNumber = req.body.phoneNumber;\n  var password = req.body.password;\n  bcrypt.hash(password, 12).then(function (hashedPassword) {\n    User.create({\n      name: name,\n      email: email,\n      phoneNumber: phoneNumber,\n      password: hashedPassword\n    }).then(function (user) {\n      res.status(201).json({\n        messages: 'Success Operation',\n        user: user\n      });\n    })[\"catch\"](function (err) {\n      return res.status(422).json({\n        message: err\n      });\n    });\n  })[\"catch\"](function (err) {\n    return res.status(422).json({\n      message: err\n    });\n  });\n};\n\nexports.loginMe = function (req, res, next) {\n  req.user.password = '***************';\n  res.status(200).json({\n    user: req.user\n  });\n};\n\nexports.loginUser = function (req, res, next) {\n  var errors = validationResult(req);\n\n  if (!errors.isEmpty()) {\n    return res.status(422).json({\n      message: 'Errore input parametri',\n      error: errors.array()\n    });\n  }\n\n  var email = req.body.email;\n  var password = req.body.password;\n  var loginUser;\n  User.findOne({\n    where: {\n      email: email\n    }\n  }).then(function (user) {\n    if (!user) {\n      return res.status(401).json({\n        message: 'Non autorizzato, Email errata'\n      });\n    }\n\n    loginUser = user;\n    return bcrypt.compare(password, user.password);\n  }).then(function (isEqual) {\n    if (!isEqual) {\n      return res.status(401).json({\n        message: 'Non autorizzato, Password errata'\n      });\n    }\n\n    var token = jwt.sign({\n      id: loginUser.id,\n      email: loginUser.email,\n      name: loginUser.name\n    }, 'axAYgScUa4Z2UdjgirykmI3iZsSCaPGh', {\n      expiresIn: '1h'\n    });\n    res.status(201).json({\n      messages: 'Sei Loggato',\n      id: loginUser.id,\n      token: token\n    });\n  })[\"catch\"](function (err) {\n    return res.status(422).json({\n      message: err\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "auth.js"
      ],
      "names": [
        "require",
        "validationResult",
        "bcrypt",
        "jwt",
        "User",
        "exports",
        "registerUser",
        "req",
        "res",
        "next",
        "errors",
        "isEmpty",
        "status",
        "json",
        "message",
        "error",
        "array",
        "email",
        "body",
        "name",
        "phoneNumber",
        "password",
        "hash",
        "then",
        "hashedPassword",
        "create",
        "user",
        "messages",
        "err",
        "loginMe",
        "loginUser",
        "findOne",
        "where",
        "compare",
        "isEqual",
        "token",
        "sign",
        "id",
        "expiresIn"
      ],
      "mappings": ";;eAA6BA,OAAO,CAAC,yBAAD,C;IAA5BC,gB,YAAAA,gB;;AACR,IAAMC,MAAM,GAAGF,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAMG,GAAG,GAAGH,OAAO,CAAC,cAAD,CAAnB;;AACA,IAAMI,IAAI,GAAGJ,OAAO,CAAC,gBAAD,CAApB;;AAEAK,OAAO,CAACC,YAAR,GAAuB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACvC,MAAMC,MAAM,GAAGT,gBAAgB,CAACM,GAAD,CAA/B;;AAEA,MAAG,CAACG,MAAM,CAACC,OAAP,EAAJ,EAAsB;AAClB,WAAOH,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,OAAO,EAAG,wBADc;AAExBC,MAAAA,KAAK,EAAGL,MAAM,CAACM,KAAP;AAFgB,KAArB,CAAP;AAIH;;AAED,MAAMC,KAAK,GAAGV,GAAG,CAACW,IAAJ,CAASD,KAAvB;AACA,MAAME,IAAI,GAAGZ,GAAG,CAACW,IAAJ,CAASC,IAAtB;AACA,MAAMC,WAAW,GAAGb,GAAG,CAACW,IAAJ,CAASE,WAA7B;AACA,MAAMC,QAAQ,GAAGd,GAAG,CAACW,IAAJ,CAASG,QAA1B;AAEAnB,EAAAA,MAAM,CAACoB,IAAP,CAAYD,QAAZ,EAAsB,EAAtB,EACCE,IADD,CACM,UAAAC,cAAc,EAAI;AACpBpB,IAAAA,IAAI,CAACqB,MAAL,CAAY;AAACN,MAAAA,IAAI,EAAGA,IAAR;AAAcF,MAAAA,KAAK,EAAGA,KAAtB;AAA6BG,MAAAA,WAAW,EAAGA,WAA3C;AAAwDC,MAAAA,QAAQ,EAAGG;AAAnE,KAAZ,EACCD,IADD,CACM,UAAAG,IAAI,EAAI;AACVlB,MAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBc,QAAAA,QAAQ,EAAG,mBADM;AAEjBD,QAAAA,IAAI,EAAGA;AAFU,OAArB;AAIH,KAND,WAOO,UAAAE,GAAG,EAAI;AACV,aAAOpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,QAAAA,OAAO,EAAGc;AADc,OAArB,CAAP;AAGH,KAXD;AAYH,GAdD,WAeO,UAAAA,GAAG,EAAI;AACV,WAAOpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,OAAO,EAAGc;AADc,KAArB,CAAP;AAGH,GAnBD;AAoBH,CAnCD;;AAqCAvB,OAAO,CAACwB,OAAR,GAAkB,UAACtB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClCF,EAAAA,GAAG,CAACmB,IAAJ,CAASL,QAAT,GAAoB,iBAApB;AACAb,EAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBa,IAAAA,IAAI,EAAGnB,GAAG,CAACmB;AADM,GAArB;AAGH,CALD;;AAOArB,OAAO,CAACyB,SAAR,GAAoB,UAACvB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACpC,MAAMC,MAAM,GAAGT,gBAAgB,CAACM,GAAD,CAA/B;;AAEA,MAAG,CAACG,MAAM,CAACC,OAAP,EAAJ,EAAsB;AAClB,WAAOH,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,OAAO,EAAG,wBADc;AAExBC,MAAAA,KAAK,EAAGL,MAAM,CAACM,KAAP;AAFgB,KAArB,CAAP;AAIH;;AAED,MAAMC,KAAK,GAAGV,GAAG,CAACW,IAAJ,CAASD,KAAvB;AACA,MAAMI,QAAQ,GAAGd,GAAG,CAACW,IAAJ,CAASG,QAA1B;AAEA,MAAIS,SAAJ;AACA1B,EAAAA,IAAI,CAAC2B,OAAL,CAAa;AAACC,IAAAA,KAAK,EAAG;AAACf,MAAAA,KAAK,EAAGA;AAAT;AAAT,GAAb,EAAwCM,IAAxC,CAA6C,UAAAG,IAAI,EAAI;AACjD,QAAG,CAACA,IAAJ,EAAU;AACN,aAAOlB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,QAAAA,OAAO,EAAG;AADc,OAArB,CAAP;AAGH;;AACDgB,IAAAA,SAAS,GAAGJ,IAAZ;AACA,WAAOxB,MAAM,CAAC+B,OAAP,CAAeZ,QAAf,EAAyBK,IAAI,CAACL,QAA9B,CAAP;AACH,GARD,EASCE,IATD,CASM,UAAAW,OAAO,EAAI;AACb,QAAG,CAACA,OAAJ,EAAY;AACR,aAAO1B,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,QAAAA,OAAO,EAAG;AADc,OAArB,CAAP;AAGH;;AACD,QAAMqB,KAAK,GAAGhC,GAAG,CAACiC,IAAJ,CACV;AACIC,MAAAA,EAAE,EAAGP,SAAS,CAACO,EADnB;AAEIpB,MAAAA,KAAK,EAAGa,SAAS,CAACb,KAFtB;AAGIE,MAAAA,IAAI,EAAGW,SAAS,CAACX;AAHrB,KADU,EAKP,kCALO,EAK6B;AAACmB,MAAAA,SAAS,EAAG;AAAb,KAL7B,CAAd;AAOA9B,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBc,MAAAA,QAAQ,EAAG,aADM;AAEjBU,MAAAA,EAAE,EAAGP,SAAS,CAACO,EAFE;AAGjBF,MAAAA,KAAK,EAAGA;AAHS,KAArB;AAKH,GA3BD,WA4BO,UAAAP,GAAG,EAAI;AACV,WAAOpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,OAAO,EAAGc;AADc,KAArB,CAAP;AAGH,GAhCD;AAiCH,CA/CD",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers",
      "sourcesContent": [
        "const { validationResult } = require('express-validator/check');\nconst bcrypt = require('bcryptjs');\nconst jwt = require('jsonwebtoken');\nconst User = require('../models/user');\n\nexports.registerUser = (req, res, next) => {\n    const errors = validationResult(req);\n    \n    if(!errors.isEmpty()) {\n        return res.status(422).json({\n            message : 'Errore input parametri',\n            error : errors.array()\n        });\n    }\n\n    const email = req.body.email;\n    const name = req.body.name;\n    const phoneNumber = req.body.phoneNumber;\n    const password = req.body.password;\n\n    bcrypt.hash(password, 12)\n    .then(hashedPassword => {\n        User.create({name : name, email : email, phoneNumber : phoneNumber, password : hashedPassword})\n        .then(user => {\n            res.status(201).json({\n                messages : 'Success Operation',\n                user : user\n            });\n        })\n        .catch(err => {\n            return res.status(422).json({\n                message : err\n            })\n        });\n    })\n    .catch(err => {\n        return res.status(422).json({\n            message : err\n        });\n    });\n};\n\nexports.loginMe = (req, res, next) => {\n    req.user.password = '***************';\n    res.status(200).json({\n        user : req.user,\n    });\n};\n\nexports.loginUser = (req, res, next) => {\n    const errors = validationResult(req);\n    \n    if(!errors.isEmpty()) {\n        return res.status(422).json({\n            message : 'Errore input parametri',\n            error : errors.array()\n        });\n    }\n\n    const email = req.body.email;\n    const password = req.body.password;\n\n    let loginUser;\n    User.findOne({where : {email : email}}).then(user => {\n        if(!user) {\n            return res.status(401).json({\n                message : 'Non autorizzato, Email errata',\n            });\n        }\n        loginUser = user;\n        return bcrypt.compare(password, user.password);\n    })\n    .then(isEqual => {\n        if(!isEqual){\n            return res.status(401).json({\n                message : 'Non autorizzato, Password errata',\n            });\n        }\n        const token = jwt.sign(\n            {\n                id : loginUser.id, \n                email : loginUser.email,\n                name : loginUser.name\n            }, 'axAYgScUa4Z2UdjgirykmI3iZsSCaPGh', {expiresIn : '1h'});\n\n        res.status(201).json({\n            messages : 'Sei Loggato',\n            id : loginUser.id,\n            token : token\n        });\n    })\n    .catch(err => {\n        return res.status(422).json({\n            message : err\n        });\n    });\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1576679187963
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes/artisticevent.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes/artisticevent.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes/artisticevent.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes/artisticevent.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes",
        "sourceFileName": "artisticevent.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar _require = require('express-validator/check'),\n    body = _require.body,\n    query = _require.query;\n\nvar router = express.Router();\n\nvar isAuth = require('../middleware/is-auth');\n\nvar artisticeventController = require('../controllers/artisticevent');\n\nvar path = require('path');\n\nvar multer = require('multer');\n\nvar uuidv4 = require('uuid/v4');\n\nvar storage = multer.diskStorage({\n  destination: function destination(req, file, callback) {\n    callback(null, 'public/images');\n  },\n  filename: function filename(req, file, callback) {\n    //callback(null, Date.now() + '-' + file.originalname);\n    callback(null, uuidv4() + path.extname(file.originalname));\n  }\n});\n\nvar fileFilter = function fileFilter(req, file, callback) {\n  if (file.mimetype == 'image/png' || file.mimetype == 'image/jpg' || file.mimetype == 'image/jpeg') {\n    callback(null, true);\n  } else {\n    req.fileValidationError = \"Estensione non consentita solo: 'image/jpg' | 'image/png' | 'image/jpeg'\";\n    callback(null, false);\n  }\n};\n\nvar upload = multer({\n  storage: storage,\n  fileFilter: fileFilter\n});\nvar cpUpload = upload.single('image');\nrouter.get('/artisticevent', artisticeventController.getArtisticevents);\nrouter.get('/artisticevent/searchbytitle', artisticeventController.searchArtisticeventByTitle);\nrouter.get('/artisticevent/searcheventsbydate', artisticeventController.searchEventsByDate);\nrouter.get('/artisticevent/searcheventsbytype', artisticeventController.searchEventsByType);\nrouter.get('/artisticevent/:id', artisticeventController.getArtisticevent);\nrouter.get('/artisticevent/sameday/:id', artisticeventController.getSameDayEvents);\nrouter.get('/artisticevent/similars/:id', artisticeventController.getSimilars);\nrouter.get('/types', artisticeventController.getTypes);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFydGlzdGljZXZlbnQuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJib2R5IiwicXVlcnkiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJpc0F1dGgiLCJhcnRpc3RpY2V2ZW50Q29udHJvbGxlciIsInBhdGgiLCJtdWx0ZXIiLCJ1dWlkdjQiLCJzdG9yYWdlIiwiZGlza1N0b3JhZ2UiLCJkZXN0aW5hdGlvbiIsInJlcSIsImZpbGUiLCJjYWxsYmFjayIsImZpbGVuYW1lIiwiZXh0bmFtZSIsIm9yaWdpbmFsbmFtZSIsImZpbGVGaWx0ZXIiLCJtaW1ldHlwZSIsImZpbGVWYWxpZGF0aW9uRXJyb3IiLCJ1cGxvYWQiLCJjcFVwbG9hZCIsInNpbmdsZSIsImdldCIsImdldEFydGlzdGljZXZlbnRzIiwic2VhcmNoQXJ0aXN0aWNldmVudEJ5VGl0bGUiLCJzZWFyY2hFdmVudHNCeURhdGUiLCJzZWFyY2hFdmVudHNCeVR5cGUiLCJnZXRBcnRpc3RpY2V2ZW50IiwiZ2V0U2FtZURheUV2ZW50cyIsImdldFNpbWlsYXJzIiwiZ2V0VHlwZXMiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O2VBQ3dCQSxPQUFPLENBQUMseUJBQUQsQztJQUF2QkMsSSxZQUFBQSxJO0lBQU1DLEssWUFBQUEsSzs7QUFDZCxJQUFNQyxNQUFNLEdBQUdKLE9BQU8sQ0FBQ0ssTUFBUixFQUFmOztBQUVBLElBQU1DLE1BQU0sR0FBR0wsT0FBTyxDQUFDLHVCQUFELENBQXRCOztBQUVBLElBQU1NLHVCQUF1QixHQUFHTixPQUFPLENBQUMsOEJBQUQsQ0FBdkM7O0FBRUEsSUFBTU8sSUFBSSxHQUFHUCxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxJQUFNUSxNQUFNLEdBQUdSLE9BQU8sQ0FBQyxRQUFELENBQXRCOztBQUNBLElBQU1TLE1BQU0sR0FBR1QsT0FBTyxDQUFDLFNBQUQsQ0FBdEI7O0FBRUEsSUFBTVUsT0FBTyxHQUFHRixNQUFNLENBQUNHLFdBQVAsQ0FBbUI7QUFDL0JDLEVBQUFBLFdBQVcsRUFBRyxxQkFBQ0MsR0FBRCxFQUFNQyxJQUFOLEVBQVlDLFFBQVosRUFBeUI7QUFDbkNBLElBQUFBLFFBQVEsQ0FBQyxJQUFELEVBQU8sZUFBUCxDQUFSO0FBQ0gsR0FIOEI7QUFJL0JDLEVBQUFBLFFBQVEsRUFBRyxrQkFBQ0gsR0FBRCxFQUFNQyxJQUFOLEVBQVlDLFFBQVosRUFBeUI7QUFDaEM7QUFDQUEsSUFBQUEsUUFBUSxDQUFDLElBQUQsRUFBT04sTUFBTSxLQUFLRixJQUFJLENBQUNVLE9BQUwsQ0FBYUgsSUFBSSxDQUFDSSxZQUFsQixDQUFsQixDQUFSO0FBQ0g7QUFQOEIsQ0FBbkIsQ0FBaEI7O0FBVUEsSUFBTUMsVUFBVSxHQUFJLFNBQWRBLFVBQWMsQ0FBQ04sR0FBRCxFQUFNQyxJQUFOLEVBQVlDLFFBQVosRUFBeUI7QUFDekMsTUFBR0QsSUFBSSxDQUFDTSxRQUFMLElBQWlCLFdBQWpCLElBQWdDTixJQUFJLENBQUNNLFFBQUwsSUFBaUIsV0FBakQsSUFBZ0VOLElBQUksQ0FBQ00sUUFBTCxJQUFpQixZQUFwRixFQUFrRztBQUM5RkwsSUFBQUEsUUFBUSxDQUFDLElBQUQsRUFBTyxJQUFQLENBQVI7QUFDSCxHQUZELE1BRU87QUFDSEYsSUFBQUEsR0FBRyxDQUFDUSxtQkFBSixHQUEwQiwwRUFBMUI7QUFDQU4sSUFBQUEsUUFBUSxDQUFDLElBQUQsRUFBTyxLQUFQLENBQVI7QUFDSDtBQUNKLENBUEQ7O0FBU0EsSUFBSU8sTUFBTSxHQUFHZCxNQUFNLENBQUM7QUFBRUUsRUFBQUEsT0FBTyxFQUFHQSxPQUFaO0FBQXFCUyxFQUFBQSxVQUFVLEVBQUdBO0FBQWxDLENBQUQsQ0FBbkI7QUFFQSxJQUFJSSxRQUFRLEdBQUdELE1BQU0sQ0FBQ0UsTUFBUCxDQUFjLE9BQWQsQ0FBZjtBQUVBckIsTUFBTSxDQUFDc0IsR0FBUCxDQUFXLGdCQUFYLEVBQTZCbkIsdUJBQXVCLENBQUNvQixpQkFBckQ7QUFDQXZCLE1BQU0sQ0FBQ3NCLEdBQVAsQ0FBVyw4QkFBWCxFQUEyQ25CLHVCQUF1QixDQUFDcUIsMEJBQW5FO0FBQ0F4QixNQUFNLENBQUNzQixHQUFQLENBQVcsbUNBQVgsRUFBZ0RuQix1QkFBdUIsQ0FBQ3NCLGtCQUF4RTtBQUNBekIsTUFBTSxDQUFDc0IsR0FBUCxDQUFXLG1DQUFYLEVBQWdEbkIsdUJBQXVCLENBQUN1QixrQkFBeEU7QUFDQTFCLE1BQU0sQ0FBQ3NCLEdBQVAsQ0FBVyxvQkFBWCxFQUFpQ25CLHVCQUF1QixDQUFDd0IsZ0JBQXpEO0FBQ0EzQixNQUFNLENBQUNzQixHQUFQLENBQVcsNEJBQVgsRUFBeUNuQix1QkFBdUIsQ0FBQ3lCLGdCQUFqRTtBQUNBNUIsTUFBTSxDQUFDc0IsR0FBUCxDQUFXLDZCQUFYLEVBQTBDbkIsdUJBQXVCLENBQUMwQixXQUFsRTtBQUNBN0IsTUFBTSxDQUFDc0IsR0FBUCxDQUFXLFFBQVgsRUFBcUJuQix1QkFBdUIsQ0FBQzJCLFFBQTdDO0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmhDLE1BQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9BbGVzc2FuZHJvX011c29saW5vL0Rlc2t0b3AvRHJlYW1MYW5kRmVzdGl2YWwvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbmNvbnN0IHsgYm9keSwgcXVlcnkgfSA9IHJlcXVpcmUoJ2V4cHJlc3MtdmFsaWRhdG9yL2NoZWNrJyk7XG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuXG5jb25zdCBpc0F1dGggPSByZXF1aXJlKCcuLi9taWRkbGV3YXJlL2lzLWF1dGgnKTtcblxuY29uc3QgYXJ0aXN0aWNldmVudENvbnRyb2xsZXIgPSByZXF1aXJlKCcuLi9jb250cm9sbGVycy9hcnRpc3RpY2V2ZW50Jyk7XG5cbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5jb25zdCBtdWx0ZXIgPSByZXF1aXJlKCdtdWx0ZXInKTtcbmNvbnN0IHV1aWR2NCA9IHJlcXVpcmUoJ3V1aWQvdjQnKTtcblxuY29uc3Qgc3RvcmFnZSA9IG11bHRlci5kaXNrU3RvcmFnZSh7XG4gICAgZGVzdGluYXRpb24gOiAocmVxLCBmaWxlLCBjYWxsYmFjaykgPT4ge1xuICAgICAgICBjYWxsYmFjayhudWxsLCAncHVibGljL2ltYWdlcycpO1xuICAgIH0sXG4gICAgZmlsZW5hbWUgOiAocmVxLCBmaWxlLCBjYWxsYmFjaykgPT4ge1xuICAgICAgICAvL2NhbGxiYWNrKG51bGwsIERhdGUubm93KCkgKyAnLScgKyBmaWxlLm9yaWdpbmFsbmFtZSk7XG4gICAgICAgIGNhbGxiYWNrKG51bGwsIHV1aWR2NCgpICsgcGF0aC5leHRuYW1lKGZpbGUub3JpZ2luYWxuYW1lKSk7XG4gICAgfSxcbn0pO1xuXG5jb25zdCBmaWxlRmlsdGVyID0gKChyZXEsIGZpbGUsIGNhbGxiYWNrKSA9PiB7XG4gICAgaWYoZmlsZS5taW1ldHlwZSA9PSAnaW1hZ2UvcG5nJyB8fCBmaWxlLm1pbWV0eXBlID09ICdpbWFnZS9qcGcnIHx8IGZpbGUubWltZXR5cGUgPT0gJ2ltYWdlL2pwZWcnKSB7XG4gICAgICAgIGNhbGxiYWNrKG51bGwsIHRydWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHJlcS5maWxlVmFsaWRhdGlvbkVycm9yID0gXCJFc3RlbnNpb25lIG5vbiBjb25zZW50aXRhIHNvbG86ICdpbWFnZS9qcGcnIHwgJ2ltYWdlL3BuZycgfCAnaW1hZ2UvanBlZydcIjtcbiAgICAgICAgY2FsbGJhY2sobnVsbCwgZmFsc2UpO1xuICAgIH1cbn0pO1xuXG52YXIgdXBsb2FkID0gbXVsdGVyKHsgc3RvcmFnZSA6IHN0b3JhZ2UsIGZpbGVGaWx0ZXIgOiBmaWxlRmlsdGVyfSk7XG5cbnZhciBjcFVwbG9hZCA9IHVwbG9hZC5zaW5nbGUoJ2ltYWdlJyk7XG5cbnJvdXRlci5nZXQoJy9hcnRpc3RpY2V2ZW50JywgYXJ0aXN0aWNldmVudENvbnRyb2xsZXIuZ2V0QXJ0aXN0aWNldmVudHMpO1xucm91dGVyLmdldCgnL2FydGlzdGljZXZlbnQvc2VhcmNoYnl0aXRsZScsIGFydGlzdGljZXZlbnRDb250cm9sbGVyLnNlYXJjaEFydGlzdGljZXZlbnRCeVRpdGxlKTtcbnJvdXRlci5nZXQoJy9hcnRpc3RpY2V2ZW50L3NlYXJjaGV2ZW50c2J5ZGF0ZScsIGFydGlzdGljZXZlbnRDb250cm9sbGVyLnNlYXJjaEV2ZW50c0J5RGF0ZSk7XG5yb3V0ZXIuZ2V0KCcvYXJ0aXN0aWNldmVudC9zZWFyY2hldmVudHNieXR5cGUnLCBhcnRpc3RpY2V2ZW50Q29udHJvbGxlci5zZWFyY2hFdmVudHNCeVR5cGUpO1xucm91dGVyLmdldCgnL2FydGlzdGljZXZlbnQvOmlkJywgYXJ0aXN0aWNldmVudENvbnRyb2xsZXIuZ2V0QXJ0aXN0aWNldmVudCk7XG5yb3V0ZXIuZ2V0KCcvYXJ0aXN0aWNldmVudC9zYW1lZGF5LzppZCcsIGFydGlzdGljZXZlbnRDb250cm9sbGVyLmdldFNhbWVEYXlFdmVudHMpO1xucm91dGVyLmdldCgnL2FydGlzdGljZXZlbnQvc2ltaWxhcnMvOmlkJywgYXJ0aXN0aWNldmVudENvbnRyb2xsZXIuZ2V0U2ltaWxhcnMpO1xucm91dGVyLmdldCgnL3R5cGVzJywgYXJ0aXN0aWNldmVudENvbnRyb2xsZXIuZ2V0VHlwZXMpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "artisticevent.js"
      ],
      "names": [
        "express",
        "require",
        "body",
        "query",
        "router",
        "Router",
        "isAuth",
        "artisticeventController",
        "path",
        "multer",
        "uuidv4",
        "storage",
        "diskStorage",
        "destination",
        "req",
        "file",
        "callback",
        "filename",
        "extname",
        "originalname",
        "fileFilter",
        "mimetype",
        "fileValidationError",
        "upload",
        "cpUpload",
        "single",
        "get",
        "getArtisticevents",
        "searchArtisticeventByTitle",
        "searchEventsByDate",
        "searchEventsByType",
        "getArtisticevent",
        "getSameDayEvents",
        "getSimilars",
        "getTypes",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;eACwBA,OAAO,CAAC,yBAAD,C;IAAvBC,I,YAAAA,I;IAAMC,K,YAAAA,K;;AACd,IAAMC,MAAM,GAAGJ,OAAO,CAACK,MAAR,EAAf;;AAEA,IAAMC,MAAM,GAAGL,OAAO,CAAC,uBAAD,CAAtB;;AAEA,IAAMM,uBAAuB,GAAGN,OAAO,CAAC,8BAAD,CAAvC;;AAEA,IAAMO,IAAI,GAAGP,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMQ,MAAM,GAAGR,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMS,MAAM,GAAGT,OAAO,CAAC,SAAD,CAAtB;;AAEA,IAAMU,OAAO,GAAGF,MAAM,CAACG,WAAP,CAAmB;AAC/BC,EAAAA,WAAW,EAAG,qBAACC,GAAD,EAAMC,IAAN,EAAYC,QAAZ,EAAyB;AACnCA,IAAAA,QAAQ,CAAC,IAAD,EAAO,eAAP,CAAR;AACH,GAH8B;AAI/BC,EAAAA,QAAQ,EAAG,kBAACH,GAAD,EAAMC,IAAN,EAAYC,QAAZ,EAAyB;AAChC;AACAA,IAAAA,QAAQ,CAAC,IAAD,EAAON,MAAM,KAAKF,IAAI,CAACU,OAAL,CAAaH,IAAI,CAACI,YAAlB,CAAlB,CAAR;AACH;AAP8B,CAAnB,CAAhB;;AAUA,IAAMC,UAAU,GAAI,SAAdA,UAAc,CAACN,GAAD,EAAMC,IAAN,EAAYC,QAAZ,EAAyB;AACzC,MAAGD,IAAI,CAACM,QAAL,IAAiB,WAAjB,IAAgCN,IAAI,CAACM,QAAL,IAAiB,WAAjD,IAAgEN,IAAI,CAACM,QAAL,IAAiB,YAApF,EAAkG;AAC9FL,IAAAA,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAR;AACH,GAFD,MAEO;AACHF,IAAAA,GAAG,CAACQ,mBAAJ,GAA0B,0EAA1B;AACAN,IAAAA,QAAQ,CAAC,IAAD,EAAO,KAAP,CAAR;AACH;AACJ,CAPD;;AASA,IAAIO,MAAM,GAAGd,MAAM,CAAC;AAAEE,EAAAA,OAAO,EAAGA,OAAZ;AAAqBS,EAAAA,UAAU,EAAGA;AAAlC,CAAD,CAAnB;AAEA,IAAII,QAAQ,GAAGD,MAAM,CAACE,MAAP,CAAc,OAAd,CAAf;AAEArB,MAAM,CAACsB,GAAP,CAAW,gBAAX,EAA6BnB,uBAAuB,CAACoB,iBAArD;AACAvB,MAAM,CAACsB,GAAP,CAAW,8BAAX,EAA2CnB,uBAAuB,CAACqB,0BAAnE;AACAxB,MAAM,CAACsB,GAAP,CAAW,mCAAX,EAAgDnB,uBAAuB,CAACsB,kBAAxE;AACAzB,MAAM,CAACsB,GAAP,CAAW,mCAAX,EAAgDnB,uBAAuB,CAACuB,kBAAxE;AACA1B,MAAM,CAACsB,GAAP,CAAW,oBAAX,EAAiCnB,uBAAuB,CAACwB,gBAAzD;AACA3B,MAAM,CAACsB,GAAP,CAAW,4BAAX,EAAyCnB,uBAAuB,CAACyB,gBAAjE;AACA5B,MAAM,CAACsB,GAAP,CAAW,6BAAX,EAA0CnB,uBAAuB,CAAC0B,WAAlE;AACA7B,MAAM,CAACsB,GAAP,CAAW,QAAX,EAAqBnB,uBAAuB,CAAC2B,QAA7C;AAEAC,MAAM,CAACC,OAAP,GAAiBhC,MAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes",
      "sourcesContent": [
        "const express = require('express');\nconst { body, query } = require('express-validator/check');\nconst router = express.Router();\n\nconst isAuth = require('../middleware/is-auth');\n\nconst artisticeventController = require('../controllers/artisticevent');\n\nconst path = require('path');\nconst multer = require('multer');\nconst uuidv4 = require('uuid/v4');\n\nconst storage = multer.diskStorage({\n    destination : (req, file, callback) => {\n        callback(null, 'public/images');\n    },\n    filename : (req, file, callback) => {\n        //callback(null, Date.now() + '-' + file.originalname);\n        callback(null, uuidv4() + path.extname(file.originalname));\n    },\n});\n\nconst fileFilter = ((req, file, callback) => {\n    if(file.mimetype == 'image/png' || file.mimetype == 'image/jpg' || file.mimetype == 'image/jpeg') {\n        callback(null, true);\n    } else {\n        req.fileValidationError = \"Estensione non consentita solo: 'image/jpg' | 'image/png' | 'image/jpeg'\";\n        callback(null, false);\n    }\n});\n\nvar upload = multer({ storage : storage, fileFilter : fileFilter});\n\nvar cpUpload = upload.single('image');\n\nrouter.get('/artisticevent', artisticeventController.getArtisticevents);\nrouter.get('/artisticevent/searchbytitle', artisticeventController.searchArtisticeventByTitle);\nrouter.get('/artisticevent/searcheventsbydate', artisticeventController.searchEventsByDate);\nrouter.get('/artisticevent/searcheventsbytype', artisticeventController.searchEventsByType);\nrouter.get('/artisticevent/:id', artisticeventController.getArtisticevent);\nrouter.get('/artisticevent/sameday/:id', artisticeventController.getSameDayEvents);\nrouter.get('/artisticevent/similars/:id', artisticeventController.getSimilars);\nrouter.get('/types', artisticeventController.getTypes);\n\nmodule.exports = router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1577898562587
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers/artisticevent.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers/artisticevent.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers/artisticevent.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers/artisticevent.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers",
        "sourceFileName": "artisticevent.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _require = require('express-validator/check'),\n    validationResult = _require.validationResult;\n\nvar Sequelize = require('sequelize');\n\nvar Op = Sequelize.Op;\n\nvar path = require('path');\n\nvar fs = require('fs');\n\nvar Artisticevent = require('../models/artisticevent');\n\nvar Seminary = require('../models/seminary');\n\nvar Type = require('../models/type');\n\nvar Typologyae = require('../models/typologyae');\n\nvar Typologyse = require('../models/typologyse');\n\nvar Performer = require('../models/performer');\n\nvar Performance = require('../models/performance');\n\nvar User = require('../models/user');\n\nexports.getArtisticevents = function (req, res, next) {\n  Artisticevent.findAll().then(function (artisticevents) {\n    var promises = [];\n    artisticevents.forEach(function (artisticevent) {\n      var artisticeventWithPerformers = artisticevent.getPerformers().then(function (performers) {\n        artisticevent.dataValues.performers = performers;\n      }).then(function () {\n        return artisticevent;\n      });\n      promises.push(artisticeventWithPerformers);\n    });\n    return Promise.all(promises);\n  }).then(function (artisticevents) {\n    res.json({\n      artisticevents: artisticevents\n    });\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\n\nexports.getArtisticevent = function (req, res, next) {\n  var artisticeventId = req.params.id;\n  Artisticevent.findByPk(artisticeventId).then(function (artisticevent) {\n    if (!artisticevent) {\n      res.status(404).json({\n        messages: 'Artistic Event Not Found'\n      });\n    }\n\n    var promises = [];\n    var artisticeventWithPerformers = artisticevent.getPerformers().then(function (performers) {\n      artisticevent.dataValues.performers = performers;\n    }).then(function () {\n      return artisticevent;\n    });\n    promises.push(artisticeventWithPerformers);\n    return Promise.all(promises);\n  }).then(function (artisticevent) {\n    res.json({\n      artisticevent: artisticevent\n    });\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\n\nexports.getSimilars = function (req, res, next) {\n  var artisticeventId = req.params.id;\n  Artisticevent.findByPk(artisticeventId).then(function (artisticevent) {\n    if (!artisticevent) {\n      res.status(404).json({\n        messages: 'Artistic Event Not Found'\n      });\n    }\n\n    var promises = [];\n    var artisticeventWithSimilars = artisticevent.getSimilar().then(function (similars) {\n      artisticevent.dataValues.similars = similars;\n    }).then(function () {\n      return artisticevent;\n    });\n    promises.push(artisticeventWithSimilars);\n    return Promise.all(promises);\n  }).then(function (artisticevent) {\n    res.json({\n      artisticevent: artisticevent\n    });\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\n\nexports.getSameDayEvents = function (req, res, next) {\n  var artisticeventId = req.params.id;\n  Artisticevent.findByPk(artisticeventId).then(function (artisticevent) {\n    if (!artisticevent) {\n      res.status(404).json({\n        messages: 'Artistic Event Not Found'\n      });\n    }\n\n    var promises = [];\n    var artisticeventWithSameDay = Artisticevent.findAll({\n      where: {\n        date: artisticevent.date\n      }\n    }).then(function (sameday) {\n      var pos = -1;\n\n      for (var i = 0; i < sameday.length; ++i) {\n        if (sameday[i].dataValues.title == artisticevent.dataValues.title) {\n          pos = i;\n          sameday.splice(pos, 1);\n          ;\n        }\n      }\n\n      artisticevent.dataValues.sameday_artisticevents = sameday;\n    }).then(function () {\n      return artisticevent;\n    });\n    artisticeventWithSameDay = Seminary.findAll({\n      where: {\n        date: artisticevent.date\n      }\n    }).then(function (sameday) {\n      artisticevent.dataValues.sameday_seminaries = sameday;\n    }).then(function () {\n      return artisticevent;\n    });\n    promises.push(artisticeventWithSameDay);\n    return Promise.all(promises);\n  }).then(function (artisticevent) {\n    res.json({\n      artisticevent: artisticevent\n    });\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\n\nexports.searchArtisticeventByTitle = function (req, res, next) {\n  var title = '%' + req.query.title + '%';\n  Artisticevent.findAll({\n    where: {\n      title: _defineProperty({}, Op.like, title)\n    }\n  }).then(function (artisticevents) {\n    var promises = [];\n    artisticevents.forEach(function (artisticevent) {\n      var artisticeventWithPerformers = artisticevent.getPerformers().then(function (performers) {\n        artisticevent.dataValues.performers = performers;\n      }).then(function () {\n        return artisticevent;\n      });\n      promises.push(artisticeventWithPerformers);\n    });\n    return Promise.all(promises);\n  }).then(function (artisticevents) {\n    res.json({\n      artisticevents: artisticevents\n    });\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\n/*\nexports.searchArtisticeventByDate = (req, res, next) => {\n    const date = req.query.date;\n\n    Artisticevent.findAll({where : {date : date}})\n    .then(artisticevents => {\n        var promises = [];\n        artisticevents.forEach(artisticevent => {\n        const artisticeventWithPerformers = artisticevent.getPerformers()\n               .then(performers => {\n                    artisticevent.dataValues.performers = performers;\n                })\n               .then(() => {\n               return artisticevent;\n               });\n        promises.push(artisticeventWithPerformers);\n        });\n        return Promise.all(promises);\n    }).then((artisticevents) => {\n            res.json({artisticevents : artisticevents});\n    }).catch(\n            err => console.log(err)\n    );\n};\n*/\n\n\nexports.searchEventsByDate = function (req, res, next) {\n  var date = req.query.date;\n  Artisticevent.findAll({\n    where: {\n      date: date\n    }\n  }).then(function (artisticevents) {\n    var promises = [];\n    artisticevents.forEach(function (artisticevent) {\n      var artisticeventWithPerformers = artisticevent.getPerformers().then(function (performers) {\n        artisticevent.dataValues.performers = performers;\n      }).then(function () {\n        return artisticevent;\n      });\n      promises.push(artisticeventWithPerformers);\n    });\n    return Promise.all(promises);\n  }).then(function (artisticevents) {\n    Seminary.findAll({\n      where: {\n        date: date\n      }\n    }).then(function (seminaries) {\n      res.json({\n        artisticevents: artisticevents,\n        seminaries: seminaries\n      });\n    });\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\n\nexports.searchEventsByType = function (req, res, next) {\n  var type = req.query.type;\n  Type.findAll({\n    where: {\n      name: type\n    }\n  }).then(function (types) {\n    var chosen_type = types[0];\n    var artisticevents_ = chosen_type.getArtisticevents().then(function (artisticevents) {\n      var promises = [];\n      artisticevents.forEach(function (artisticevent) {\n        var artisticeventWithPerformers = artisticevent.getPerformers().then(function (performers) {\n          artisticevent.dataValues.performers = performers;\n        }).then(function () {\n          return artisticevent;\n        });\n        promises.push(artisticeventWithPerformers);\n      });\n      return Promise.all(promises);\n    }).then(function (artisticevents) {\n      return artisticevents;\n    });\n    return artisticevents_;\n  }).then(function (artisticevents) {\n    Type.findAll({\n      where: {\n        name: type\n      }\n    }).then(function (types) {\n      var chosen_type = types[0];\n      var seminaries_ = chosen_type.getSeminaries().then(function (seminaries) {\n        var promises = [];\n        seminaries.forEach(function (seminary) {\n          var seminaryWithArtisticevents = seminary.getArtisticevents().then(function (artisticevents) {\n            seminary.dataValues.artisticevents = artisticevents;\n          }).then(function () {\n            return seminary;\n          });\n          promises.push(seminaryWithArtisticevents);\n        });\n        return Promise.all(promises);\n      }).then(function (seminaries) {\n        return seminaries;\n      });\n      return seminaries_;\n    }).then(function (seminaries) {\n      res.json({\n        artisticevents: artisticevents,\n        seminaries: seminaries\n      });\n    });\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\n\nexports.getTypes = function (req, res, next) {\n  Type.findAll().then(function (types) {\n    res.json({\n      types: types\n    });\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "artisticevent.js"
      ],
      "names": [
        "require",
        "validationResult",
        "Sequelize",
        "Op",
        "path",
        "fs",
        "Artisticevent",
        "Seminary",
        "Type",
        "Typologyae",
        "Typologyse",
        "Performer",
        "Performance",
        "User",
        "exports",
        "getArtisticevents",
        "req",
        "res",
        "next",
        "findAll",
        "then",
        "artisticevents",
        "promises",
        "forEach",
        "artisticevent",
        "artisticeventWithPerformers",
        "getPerformers",
        "performers",
        "dataValues",
        "push",
        "Promise",
        "all",
        "json",
        "err",
        "console",
        "log",
        "getArtisticevent",
        "artisticeventId",
        "params",
        "id",
        "findByPk",
        "status",
        "messages",
        "getSimilars",
        "artisticeventWithSimilars",
        "getSimilar",
        "similars",
        "getSameDayEvents",
        "artisticeventWithSameDay",
        "where",
        "date",
        "sameday",
        "pos",
        "i",
        "length",
        "title",
        "splice",
        "sameday_artisticevents",
        "sameday_seminaries",
        "searchArtisticeventByTitle",
        "query",
        "like",
        "searchEventsByDate",
        "seminaries",
        "searchEventsByType",
        "type",
        "name",
        "types",
        "chosen_type",
        "artisticevents_",
        "seminaries_",
        "getSeminaries",
        "seminary",
        "seminaryWithArtisticevents",
        "getTypes"
      ],
      "mappings": ";;;;eAA6BA,OAAO,CAAC,yBAAD,C;IAA5BC,gB,YAAAA,gB;;AACR,IAAMC,SAAS,GAAGF,OAAO,CAAC,WAAD,CAAzB;;AACA,IAAMG,EAAE,GAAGD,SAAS,CAACC,EAArB;;AACA,IAAMC,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMK,EAAE,GAAGL,OAAO,CAAC,IAAD,CAAlB;;AAEA,IAAMM,aAAa,GAAGN,OAAO,CAAC,yBAAD,CAA7B;;AACA,IAAMO,QAAQ,GAAGP,OAAO,CAAC,oBAAD,CAAxB;;AACA,IAAMQ,IAAI,GAAGR,OAAO,CAAC,gBAAD,CAApB;;AACA,IAAMS,UAAU,GAAGT,OAAO,CAAC,sBAAD,CAA1B;;AACA,IAAMU,UAAU,GAAGV,OAAO,CAAC,sBAAD,CAA1B;;AACA,IAAMW,SAAS,GAAGX,OAAO,CAAC,qBAAD,CAAzB;;AACA,IAAMY,WAAW,GAAGZ,OAAO,CAAC,uBAAD,CAA3B;;AACA,IAAMa,IAAI,GAAGb,OAAO,CAAC,gBAAD,CAApB;;AAEAc,OAAO,CAACC,iBAAR,GAA4B,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC5CZ,EAAAA,aAAa,CAACa,OAAd,GACCC,IADD,CACM,UAAAC,cAAc,EAAI;AACpB,QAAIC,QAAQ,GAAG,EAAf;AACAD,IAAAA,cAAc,CAACE,OAAf,CAAuB,UAAAC,aAAa,EAAI;AACxC,UAAMC,2BAA2B,GAAGD,aAAa,CAACE,aAAd,GAC5BN,IAD4B,CACvB,UAAAO,UAAU,EAAI;AACfH,QAAAA,aAAa,CAACI,UAAd,CAAyBD,UAAzB,GAAsCA,UAAtC;AACH,OAH2B,EAI5BP,IAJ4B,CAIvB,YAAM;AACX,eAAOI,aAAP;AACA,OAN4B,CAApC;AAOAF,MAAAA,QAAQ,CAACO,IAAT,CAAcJ,2BAAd;AACC,KATD;AAUA,WAAOK,OAAO,CAACC,GAAR,CAAYT,QAAZ,CAAP;AACH,GAdD,EAcGF,IAdH,CAcQ,UAACC,cAAD,EAAoB;AACxBJ,IAAAA,GAAG,CAACe,IAAJ,CAAS;AAACX,MAAAA,cAAc,EAAGA;AAAlB,KAAT;AACH,GAhBD,WAiBI,UAAAY,GAAG;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,GAjBP;AAmBH,CApBD;;AAsBAnB,OAAO,CAACsB,gBAAR,GAA2B,UAACpB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC3C,MAAMmB,eAAe,GAAGrB,GAAG,CAACsB,MAAJ,CAAWC,EAAnC;AACAjC,EAAAA,aAAa,CAACkC,QAAd,CAAuBH,eAAvB,EACCjB,IADD,CACM,UAAAI,aAAa,EAAI;AACnB,QAAG,CAACA,aAAJ,EAAmB;AACfP,MAAAA,GAAG,CAACwB,MAAJ,CAAW,GAAX,EAAgBT,IAAhB,CAAqB;AACjBU,QAAAA,QAAQ,EAAG;AADM,OAArB;AAGH;;AACD,QAAIpB,QAAQ,GAAG,EAAf;AACA,QAAMG,2BAA2B,GAAGD,aAAa,CAACE,aAAd,GACnCN,IADmC,CAC9B,UAAAO,UAAU,EAAI;AACfH,MAAAA,aAAa,CAACI,UAAd,CAAyBD,UAAzB,GAAsCA,UAAtC;AACH,KAHkC,EAInCP,IAJmC,CAI9B,YAAM;AACP,aAAOI,aAAP;AACJ,KANmC,CAApC;AAOAF,IAAAA,QAAQ,CAACO,IAAT,CAAcJ,2BAAd;AACA,WAAOK,OAAO,CAACC,GAAR,CAAYT,QAAZ,CAAP;AACC,GAjBL,EAiBOF,IAjBP,CAiBY,UAACI,aAAD,EAAmB;AACvBP,IAAAA,GAAG,CAACe,IAAJ,CAAS;AAACR,MAAAA,aAAa,EAAGA;AAAjB,KAAT;AACH,GAnBL,WAoBQ,UAAAS,GAAG;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,GApBX;AAsBH,CAxBD;;AA0BAnB,OAAO,CAAC6B,WAAR,GAAsB,UAAC3B,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACtC,MAAMmB,eAAe,GAAGrB,GAAG,CAACsB,MAAJ,CAAWC,EAAnC;AACAjC,EAAAA,aAAa,CAACkC,QAAd,CAAuBH,eAAvB,EACCjB,IADD,CACM,UAAAI,aAAa,EAAI;AACnB,QAAG,CAACA,aAAJ,EAAmB;AACfP,MAAAA,GAAG,CAACwB,MAAJ,CAAW,GAAX,EAAgBT,IAAhB,CAAqB;AACjBU,QAAAA,QAAQ,EAAG;AADM,OAArB;AAGH;;AACD,QAAIpB,QAAQ,GAAG,EAAf;AACA,QAAMsB,yBAAyB,GAAGpB,aAAa,CAACqB,UAAd,GACjCzB,IADiC,CAC5B,UAAA0B,QAAQ,EAAI;AACbtB,MAAAA,aAAa,CAACI,UAAd,CAAyBkB,QAAzB,GAAoCA,QAApC;AACH,KAHgC,EAIjC1B,IAJiC,CAI5B,YAAM;AACP,aAAOI,aAAP;AACJ,KANiC,CAAlC;AAOAF,IAAAA,QAAQ,CAACO,IAAT,CAAce,yBAAd;AACA,WAAOd,OAAO,CAACC,GAAR,CAAYT,QAAZ,CAAP;AACC,GAjBL,EAiBOF,IAjBP,CAiBY,UAACI,aAAD,EAAmB;AACvBP,IAAAA,GAAG,CAACe,IAAJ,CAAS;AAACR,MAAAA,aAAa,EAAGA;AAAjB,KAAT;AACH,GAnBL,WAoBQ,UAAAS,GAAG;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,GApBX;AAsBH,CAxBD;;AA0BAnB,OAAO,CAACiC,gBAAR,GAA2B,UAAC/B,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC3C,MAAMmB,eAAe,GAAGrB,GAAG,CAACsB,MAAJ,CAAWC,EAAnC;AACAjC,EAAAA,aAAa,CAACkC,QAAd,CAAuBH,eAAvB,EACCjB,IADD,CACM,UAAAI,aAAa,EAAI;AACnB,QAAG,CAACA,aAAJ,EAAmB;AACfP,MAAAA,GAAG,CAACwB,MAAJ,CAAW,GAAX,EAAgBT,IAAhB,CAAqB;AACjBU,QAAAA,QAAQ,EAAG;AADM,OAArB;AAGH;;AACD,QAAIpB,QAAQ,GAAG,EAAf;AACA,QAAI0B,wBAAwB,GAAG1C,aAAa,CAACa,OAAd,CAAsB;AAAC8B,MAAAA,KAAK,EAAG;AAACC,QAAAA,IAAI,EAAG1B,aAAa,CAAC0B;AAAtB;AAAT,KAAtB,EAC9B9B,IAD8B,CACzB,UAAA+B,OAAO,EAAI;AACb,UAAIC,GAAG,GAAG,CAAC,CAAX;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,OAAO,CAACG,MAA3B,EAAmC,EAAED,CAArC,EAAwC;AACpC,YAAGF,OAAO,CAACE,CAAD,CAAP,CAAWzB,UAAX,CAAsB2B,KAAtB,IAA+B/B,aAAa,CAACI,UAAd,CAAyB2B,KAA3D,EAAkE;AAC9DH,UAAAA,GAAG,GAAGC,CAAN;AACAF,UAAAA,OAAO,CAACK,MAAR,CAAeJ,GAAf,EAAoB,CAApB;AAAuB;AAC1B;AACJ;;AACD5B,MAAAA,aAAa,CAACI,UAAd,CAAyB6B,sBAAzB,GAAkDN,OAAlD;AACF,KAV6B,EAU3B/B,IAV2B,CAUtB,YAAM;AACV,aAAOI,aAAP;AACJ,KAZ8B,CAA/B;AAaAwB,IAAAA,wBAAwB,GAAGzC,QAAQ,CAACY,OAAT,CAAiB;AAAC8B,MAAAA,KAAK,EAAG;AAACC,QAAAA,IAAI,EAAG1B,aAAa,CAAC0B;AAAtB;AAAT,KAAjB,EAC1B9B,IAD0B,CACrB,UAAA+B,OAAO,EAAI;AACb3B,MAAAA,aAAa,CAACI,UAAd,CAAyB8B,kBAAzB,GAA8CP,OAA9C;AACH,KAH0B,EAGxB/B,IAHwB,CAGnB,YAAM;AACV,aAAOI,aAAP;AACH,KAL0B,CAA3B;AAMAF,IAAAA,QAAQ,CAACO,IAAT,CAAcmB,wBAAd;AACA,WAAOlB,OAAO,CAACC,GAAR,CAAYT,QAAZ,CAAP;AACC,GA7BL,EA6BOF,IA7BP,CA6BY,UAACI,aAAD,EAAmB;AACvBP,IAAAA,GAAG,CAACe,IAAJ,CAAS;AAACR,MAAAA,aAAa,EAAGA;AAAjB,KAAT;AACH,GA/BL,WAgCQ,UAAAS,GAAG;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,GAhCX;AAkCH,CApCD;;AAsCAnB,OAAO,CAAC6C,0BAAR,GAAqC,UAAC3C,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACrD,MAAMqC,KAAK,GAAG,MAAMvC,GAAG,CAAC4C,KAAJ,CAAUL,KAAhB,GAAwB,GAAtC;AACAjD,EAAAA,aAAa,CAACa,OAAd,CAAsB;AAAC8B,IAAAA,KAAK,EAAG;AAACM,MAAAA,KAAK,sBAAKpD,EAAE,CAAC0D,IAAR,EAAgBN,KAAhB;AAAN;AAAT,GAAtB,EACCnC,IADD,CACM,UAAAC,cAAc,EAAI;AACpB,QAAIC,QAAQ,GAAG,EAAf;AACAD,IAAAA,cAAc,CAACE,OAAf,CAAuB,UAAAC,aAAa,EAAI;AACxC,UAAMC,2BAA2B,GAAGD,aAAa,CAACE,aAAd,GAC5BN,IAD4B,CACvB,UAAAO,UAAU,EAAI;AACfH,QAAAA,aAAa,CAACI,UAAd,CAAyBD,UAAzB,GAAsCA,UAAtC;AACH,OAH2B,EAI5BP,IAJ4B,CAIvB,YAAM;AACX,eAAOI,aAAP;AACA,OAN4B,CAApC;AAOAF,MAAAA,QAAQ,CAACO,IAAT,CAAcJ,2BAAd;AACC,KATD;AAUA,WAAOK,OAAO,CAACC,GAAR,CAAYT,QAAZ,CAAP;AACH,GAdD,EAcGF,IAdH,CAcQ,UAACC,cAAD,EAAoB;AACpBJ,IAAAA,GAAG,CAACe,IAAJ,CAAS;AAACX,MAAAA,cAAc,EAAGA;AAAlB,KAAT;AACP,GAhBD,WAiBQ,UAAAY,GAAG;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,GAjBX;AAmBH,CArBD;AAuBA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BAnB,OAAO,CAACgD,kBAAR,GAA6B,UAAC9C,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC7C,MAAMgC,IAAI,GAAGlC,GAAG,CAAC4C,KAAJ,CAAUV,IAAvB;AACA5C,EAAAA,aAAa,CAACa,OAAd,CAAsB;AAAC8B,IAAAA,KAAK,EAAG;AAACC,MAAAA,IAAI,EAAGA;AAAR;AAAT,GAAtB,EACC9B,IADD,CACM,UAAAC,cAAc,EAAI;AACpB,QAAIC,QAAQ,GAAG,EAAf;AACAD,IAAAA,cAAc,CAACE,OAAf,CAAuB,UAAAC,aAAa,EAAI;AACxC,UAAMC,2BAA2B,GAAGD,aAAa,CAACE,aAAd,GAC5BN,IAD4B,CACvB,UAAAO,UAAU,EAAI;AACfH,QAAAA,aAAa,CAACI,UAAd,CAAyBD,UAAzB,GAAsCA,UAAtC;AACH,OAH2B,EAI5BP,IAJ4B,CAIvB,YAAM;AACZ,eAAOI,aAAP;AACC,OAN4B,CAApC;AAOAF,MAAAA,QAAQ,CAACO,IAAT,CAAcJ,2BAAd;AACC,KATD;AAUA,WAAOK,OAAO,CAACC,GAAR,CAAYT,QAAZ,CAAP;AACH,GAdD,EAcGF,IAdH,CAcQ,UAACC,cAAD,EAAoB;AACxBd,IAAAA,QAAQ,CAACY,OAAT,CAAiB;AAAC8B,MAAAA,KAAK,EAAG;AAACC,QAAAA,IAAI,EAAGA;AAAR;AAAT,KAAjB,EACC9B,IADD,CACM,UAAA2C,UAAU,EAAI;AAChB9C,MAAAA,GAAG,CAACe,IAAJ,CAAS;AACLX,QAAAA,cAAc,EAAGA,cADZ;AAEL0C,QAAAA,UAAU,EAAGA;AAFR,OAAT;AAIH,KAND;AAOH,GAtBD,WAuBQ,UAAA9B,GAAG;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,GAvBX;AAyBH,CA3BD;;AA6BAnB,OAAO,CAACkD,kBAAR,GAA6B,UAAChD,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC7C,MAAM+C,IAAI,GAAGjD,GAAG,CAAC4C,KAAJ,CAAUK,IAAvB;AACAzD,EAAAA,IAAI,CAACW,OAAL,CAAa;AAAC8B,IAAAA,KAAK,EAAG;AAACiB,MAAAA,IAAI,EAAGD;AAAR;AAAT,GAAb,EACC7C,IADD,CACM,UAAA+C,KAAK,EAAI;AACX,QAAMC,WAAW,GAAGD,KAAK,CAAC,CAAD,CAAzB;AACA,QAAME,eAAe,GAAGD,WAAW,CAACrD,iBAAZ,GAAgCK,IAAhC,CAAqC,UAAAC,cAAc,EAAI;AAC3E,UAAIC,QAAQ,GAAG,EAAf;AACAD,MAAAA,cAAc,CAACE,OAAf,CAAuB,UAAAC,aAAa,EAAI;AACpC,YAAMC,2BAA2B,GAAGD,aAAa,CAACE,aAAd,GAC5BN,IAD4B,CACvB,UAAAO,UAAU,EAAI;AACfH,UAAAA,aAAa,CAACI,UAAd,CAAyBD,UAAzB,GAAsCA,UAAtC;AACH,SAH2B,EAI5BP,IAJ4B,CAIvB,YAAM;AACZ,iBAAOI,aAAP;AACC,SAN4B,CAApC;AAOAF,QAAAA,QAAQ,CAACO,IAAT,CAAcJ,2BAAd;AACC,OATL;AAUA,aAAOK,OAAO,CAACC,GAAR,CAAYT,QAAZ,CAAP;AACH,KAbuB,EAcvBF,IAduB,CAclB,UAACC,cAAD,EAAoB;AACtB,aAAOA,cAAP;AACH,KAhBuB,CAAxB;AAiBA,WAAOgD,eAAP;AACH,GArBD,EAqBGjD,IArBH,CAqBQ,UAACC,cAAD,EAAoB;AAExBb,IAAAA,IAAI,CAACW,OAAL,CAAa;AAAC8B,MAAAA,KAAK,EAAG;AAACiB,QAAAA,IAAI,EAAGD;AAAR;AAAT,KAAb,EACC7C,IADD,CACM,UAAA+C,KAAK,EAAI;AACX,UAAMC,WAAW,GAAGD,KAAK,CAAC,CAAD,CAAzB;AACA,UAAMG,WAAW,GAAGF,WAAW,CAACG,aAAZ,GAA4BnD,IAA5B,CAAiC,UAAA2C,UAAU,EAAI;AAC/D,YAAIzC,QAAQ,GAAG,EAAf;AACAyC,QAAAA,UAAU,CAACxC,OAAX,CAAmB,UAAAiD,QAAQ,EAAI;AAC3B,cAAMC,0BAA0B,GAAGD,QAAQ,CAACzD,iBAAT,GAC3BK,IAD2B,CACtB,UAAAC,cAAc,EAAI;AACnBmD,YAAAA,QAAQ,CAAC5C,UAAT,CAAoBP,cAApB,GAAqCA,cAArC;AACH,WAH0B,EAI3BD,IAJ2B,CAItB,YAAM;AACZ,mBAAOoD,QAAP;AACC,WAN2B,CAAnC;AAOAlD,UAAAA,QAAQ,CAACO,IAAT,CAAc4C,0BAAd;AACC,SATL;AAUA,eAAO3C,OAAO,CAACC,GAAR,CAAYT,QAAZ,CAAP;AACH,OAbmB,EAcnBF,IAdmB,CAcd,UAAC2C,UAAD,EAAgB;AAClB,eAAOA,UAAP;AACH,OAhBmB,CAApB;AAiBD,aAAOO,WAAP;AACF,KArBD,EAsBClD,IAtBD,CAsBM,UAAA2C,UAAU,EAAI;AAChB9C,MAAAA,GAAG,CAACe,IAAJ,CAAS;AACLX,QAAAA,cAAc,EAAGA,cADZ;AAEL0C,QAAAA,UAAU,EAAGA;AAFR,OAAT;AAIH,KA3BD;AA4BH,GAnDD,WAoDI,UAAA9B,GAAG;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,GApDP;AAsDH,CAxDD;;AA0DAnB,OAAO,CAAC4D,QAAR,GAAmB,UAAC1D,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACnCV,EAAAA,IAAI,CAACW,OAAL,GACCC,IADD,CACM,UAAA+C,KAAK,EAAI;AACXlD,IAAAA,GAAG,CAACe,IAAJ,CAAS;AAACmC,MAAAA,KAAK,EAAGA;AAAT,KAAT;AACH,GAHD,WAII,UAAAlC,GAAG;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,GAJP;AAMH,CAPD",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers",
      "sourcesContent": [
        "const { validationResult } = require('express-validator/check');\nconst Sequelize = require('sequelize');\nconst Op = Sequelize.Op;\nconst path = require('path');\nconst fs = require('fs');\n\nconst Artisticevent = require('../models/artisticevent');\nconst Seminary = require('../models/seminary');\nconst Type = require('../models/type');\nconst Typologyae = require('../models/typologyae');\nconst Typologyse = require('../models/typologyse');\nconst Performer = require('../models/performer');\nconst Performance = require('../models/performance');\nconst User = require('../models/user');\n\nexports.getArtisticevents = (req, res, next) => {\n    Artisticevent.findAll()\n    .then(artisticevents => {\n        var promises = [];\n        artisticevents.forEach(artisticevent => {\n        const artisticeventWithPerformers = artisticevent.getPerformers()\n               .then(performers => {\n                    artisticevent.dataValues.performers = performers;\n                })\n               .then(() => {\n                return artisticevent;\n               });\n        promises.push(artisticeventWithPerformers);\n        });\n        return Promise.all(promises);\n    }).then((artisticevents) => {\n        res.json({artisticevents : artisticevents});\n    }).catch(\n        err => console.log(err)\n    );\n};\n\nexports.getArtisticevent = (req, res, next) => {\n    const artisticeventId = req.params.id;\n    Artisticevent.findByPk(artisticeventId)\n    .then(artisticevent => {\n        if(!artisticevent) {\n            res.status(404).json({\n                messages : 'Artistic Event Not Found',\n            });\n        }\n        var promises = [];\n        const artisticeventWithPerformers = artisticevent.getPerformers()\n        .then(performers => {\n             artisticevent.dataValues.performers = performers;\n         })\n        .then(() => {\n             return artisticevent;\n        });\n        promises.push(artisticeventWithPerformers);\n        return Promise.all(promises);\n        }).then((artisticevent) => {\n            res.json({artisticevent : artisticevent});\n        }).catch(\n            err => console.log(err)\n        );\n};\n\nexports.getSimilars = (req, res, next) => {\n    const artisticeventId = req.params.id;\n    Artisticevent.findByPk(artisticeventId)\n    .then(artisticevent => {\n        if(!artisticevent) {\n            res.status(404).json({\n                messages : 'Artistic Event Not Found',\n            });\n        }\n        var promises = [];\n        const artisticeventWithSimilars = artisticevent.getSimilar()\n        .then(similars => {\n             artisticevent.dataValues.similars = similars;\n         })\n        .then(() => {\n             return artisticevent;\n        });\n        promises.push(artisticeventWithSimilars);\n        return Promise.all(promises);\n        }).then((artisticevent) => {\n            res.json({artisticevent : artisticevent});\n        }).catch(\n            err => console.log(err)\n        );\n};\n\nexports.getSameDayEvents = (req, res, next) => {\n    const artisticeventId = req.params.id;\n    Artisticevent.findByPk(artisticeventId)\n    .then(artisticevent => {\n        if(!artisticevent) {\n            res.status(404).json({\n                messages : 'Artistic Event Not Found',\n            });\n        }\n        var promises = [];\n        var artisticeventWithSameDay = Artisticevent.findAll({where : {date : artisticevent.date}})\n        .then(sameday => {\n            var pos = -1;\n            for(var i = 0; i < sameday.length; ++i) {\n                if(sameday[i].dataValues.title == artisticevent.dataValues.title) {\n                    pos = i;\n                    sameday.splice(pos, 1);;\n                }\n            }\n            artisticevent.dataValues.sameday_artisticevents = sameday;\n         }).then(() => {\n             return artisticevent;\n        });\n        artisticeventWithSameDay = Seminary.findAll({where : {date : artisticevent.date}})\n        .then(sameday => {\n            artisticevent.dataValues.sameday_seminaries = sameday;\n        }).then(() => {\n            return artisticevent;\n        });\n        promises.push(artisticeventWithSameDay);\n        return Promise.all(promises);\n        }).then((artisticevent) => {\n            res.json({artisticevent : artisticevent});\n        }).catch(\n            err => console.log(err)\n        );\n};\n\nexports.searchArtisticeventByTitle = (req, res, next) => {\n    const title = '%' + req.query.title + '%';\n    Artisticevent.findAll({where : {title : {[Op.like] : title}}})\n    .then(artisticevents => {\n        var promises = [];\n        artisticevents.forEach(artisticevent => {\n        const artisticeventWithPerformers = artisticevent.getPerformers()\n               .then(performers => {\n                    artisticevent.dataValues.performers = performers;\n                })\n               .then(() => {\n                return artisticevent;\n               });\n        promises.push(artisticeventWithPerformers);\n        });\n        return Promise.all(promises);\n    }).then((artisticevents) => {\n            res.json({artisticevents : artisticevents});\n    }).catch(\n            err => console.log(err)\n    );\n};\n\n/*\nexports.searchArtisticeventByDate = (req, res, next) => {\n    const date = req.query.date;\n\n    Artisticevent.findAll({where : {date : date}})\n    .then(artisticevents => {\n        var promises = [];\n        artisticevents.forEach(artisticevent => {\n        const artisticeventWithPerformers = artisticevent.getPerformers()\n               .then(performers => {\n                    artisticevent.dataValues.performers = performers;\n                })\n               .then(() => {\n               return artisticevent;\n               });\n        promises.push(artisticeventWithPerformers);\n        });\n        return Promise.all(promises);\n    }).then((artisticevents) => {\n            res.json({artisticevents : artisticevents});\n    }).catch(\n            err => console.log(err)\n    );\n};\n*/\n\nexports.searchEventsByDate = (req, res, next) => {\n    const date = req.query.date;\n    Artisticevent.findAll({where : {date : date}})\n    .then(artisticevents => {\n        var promises = [];\n        artisticevents.forEach(artisticevent => {\n        const artisticeventWithPerformers = artisticevent.getPerformers()\n               .then(performers => {\n                    artisticevent.dataValues.performers = performers;\n                })\n               .then(() => {\n               return artisticevent;\n               });\n        promises.push(artisticeventWithPerformers);\n        });\n        return Promise.all(promises);\n    }).then((artisticevents) => {\n        Seminary.findAll({where : {date : date}})\n        .then(seminaries => {\n            res.json({\n                artisticevents : artisticevents,\n                seminaries : seminaries\n            });\n        })\n    }).catch(\n            err => console.log(err)\n    );\n};\n\nexports.searchEventsByType = (req, res, next) => {\n    const type = req.query.type;\n    Type.findAll({where : {name : type}})\n    .then(types => {\n        const chosen_type = types[0];\n        const artisticevents_ = chosen_type.getArtisticevents().then(artisticevents => {\n            var promises = [];\n            artisticevents.forEach(artisticevent => {\n                const artisticeventWithPerformers = artisticevent.getPerformers()\n                       .then(performers => {\n                            artisticevent.dataValues.performers = performers;\n                        })\n                       .then(() => {\n                       return artisticevent;\n                       });\n                promises.push(artisticeventWithPerformers);\n                });\n            return Promise.all(promises);\n        })\n        .then((artisticevents) => {\n            return artisticevents;\n        });\n        return artisticevents_;\n    }).then((artisticevents) => {\n        \n        Type.findAll({where : {name : type}})\n        .then(types => {\n            const chosen_type = types[0];\n            const seminaries_ = chosen_type.getSeminaries().then(seminaries => {\n                var promises = [];\n                seminaries.forEach(seminary => {\n                    const seminaryWithArtisticevents = seminary.getArtisticevents()\n                           .then(artisticevents => {\n                                seminary.dataValues.artisticevents = artisticevents;\n                            })\n                           .then(() => {\n                           return seminary;\n                           });\n                    promises.push(seminaryWithArtisticevents);\n                    });\n                return Promise.all(promises);\n            })\n            .then((seminaries) => {\n                return seminaries;\n            });\n           return seminaries_;\n        })\n        .then(seminaries => {\n            res.json({\n                artisticevents : artisticevents,\n                seminaries : seminaries\n            });\n        });\n    }).catch(\n        err => console.log(err)\n    );\n};\n\nexports.getTypes = (req, res, next) => {\n    Type.findAll()\n    .then(types => {\n        res.json({types : types});\n    }).catch(\n        err => console.log(err)\n    );\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1577955791939
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/artisticevent.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/artisticevent.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/artisticevent.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/artisticevent.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models",
        "sourceFileName": "artisticevent.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar Sequelize = require('sequelize');\n\nvar sequelize = require('../utils/database');\n\nvar Artistic_Event = sequelize.define('artisticevent', {\n  id: {\n    type: Sequelize.INTEGER,\n    autoIncrement: true,\n    allowNull: false,\n    primaryKey: true\n  },\n  title: {\n    type: Sequelize.STRING,\n    allowNull: false\n  },\n  date: {\n    type: Sequelize.STRING,\n    allowNull: true\n  },\n  factsheet: {\n    //it must include the date\n    type: Sequelize.STRING,\n    allowNull: true\n  },\n  \"abstract\": {\n    type: Sequelize.STRING,\n    allowNull: true\n  },\n  image: {\n    //photo gallery\n    type: Sequelize.STRING,\n    allowNull: true\n  }\n});\nmodule.exports = Artistic_Event;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFydGlzdGljZXZlbnQuanMiXSwibmFtZXMiOlsiU2VxdWVsaXplIiwicmVxdWlyZSIsInNlcXVlbGl6ZSIsIkFydGlzdGljX0V2ZW50IiwiZGVmaW5lIiwiaWQiLCJ0eXBlIiwiSU5URUdFUiIsImF1dG9JbmNyZW1lbnQiLCJhbGxvd051bGwiLCJwcmltYXJ5S2V5IiwidGl0bGUiLCJTVFJJTkciLCJkYXRlIiwiZmFjdHNoZWV0IiwiaW1hZ2UiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLFNBQVMsR0FBR0MsT0FBTyxDQUFDLFdBQUQsQ0FBekI7O0FBRUEsSUFBTUMsU0FBUyxHQUFHRCxPQUFPLENBQUMsbUJBQUQsQ0FBekI7O0FBRUEsSUFBTUUsY0FBYyxHQUFHRCxTQUFTLENBQUNFLE1BQVYsQ0FBaUIsZUFBakIsRUFBa0M7QUFDckRDLEVBQUFBLEVBQUUsRUFBRztBQUNEQyxJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ08sT0FEaEI7QUFFREMsSUFBQUEsYUFBYSxFQUFHLElBRmY7QUFHREMsSUFBQUEsU0FBUyxFQUFHLEtBSFg7QUFJREMsSUFBQUEsVUFBVSxFQUFHO0FBSlosR0FEZ0Q7QUFPckRDLEVBQUFBLEtBQUssRUFBRztBQUNKTCxJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ1ksTUFEYjtBQUVKSCxJQUFBQSxTQUFTLEVBQUc7QUFGUixHQVA2QztBQVdyREksRUFBQUEsSUFBSSxFQUFHO0FBQ0hQLElBQUFBLElBQUksRUFBR04sU0FBUyxDQUFDWSxNQURkO0FBRUhILElBQUFBLFNBQVMsRUFBRztBQUZULEdBWDhDO0FBZXJESyxFQUFBQSxTQUFTLEVBQUc7QUFBRTtBQUNWUixJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ1ksTUFEVDtBQUVSSCxJQUFBQSxTQUFTLEVBQUc7QUFGSixHQWZ5QztBQW1CckQsY0FBVztBQUNQSCxJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ1ksTUFEVjtBQUVQSCxJQUFBQSxTQUFTLEVBQUc7QUFGTCxHQW5CMEM7QUF1QnJETSxFQUFBQSxLQUFLLEVBQUc7QUFBRTtBQUNOVCxJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ1ksTUFEYjtBQUVKSCxJQUFBQSxTQUFTLEVBQUc7QUFGUjtBQXZCNkMsQ0FBbEMsQ0FBdkI7QUE2QkFPLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmQsY0FBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL0FsZXNzYW5kcm9fTXVzb2xpbm8vRGVza3RvcC9EcmVhbUxhbmRGZXN0aXZhbC9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBTZXF1ZWxpemUgPSByZXF1aXJlKCdzZXF1ZWxpemUnKTtcblxuY29uc3Qgc2VxdWVsaXplID0gcmVxdWlyZSgnLi4vdXRpbHMvZGF0YWJhc2UnKTtcblxuY29uc3QgQXJ0aXN0aWNfRXZlbnQgPSBzZXF1ZWxpemUuZGVmaW5lKCdhcnRpc3RpY2V2ZW50Jywge1xuICAgIGlkIDoge1xuICAgICAgICB0eXBlIDogU2VxdWVsaXplLklOVEVHRVIsXG4gICAgICAgIGF1dG9JbmNyZW1lbnQgOiB0cnVlLFxuICAgICAgICBhbGxvd051bGwgOiBmYWxzZSxcbiAgICAgICAgcHJpbWFyeUtleSA6IHRydWVcbiAgICB9LFxuICAgIHRpdGxlIDoge1xuICAgICAgICB0eXBlIDogU2VxdWVsaXplLlNUUklORyxcbiAgICAgICAgYWxsb3dOdWxsIDogZmFsc2UsXG4gICAgfSxcbiAgICBkYXRlIDoge1xuICAgICAgICB0eXBlIDogU2VxdWVsaXplLlNUUklORyxcbiAgICAgICAgYWxsb3dOdWxsIDogdHJ1ZSxcbiAgICB9LFxuICAgIGZhY3RzaGVldCA6IHsgLy9pdCBtdXN0IGluY2x1ZGUgdGhlIGRhdGVcbiAgICAgICAgdHlwZSA6IFNlcXVlbGl6ZS5TVFJJTkcsXG4gICAgICAgIGFsbG93TnVsbCA6IHRydWUsXG4gICAgfSxcbiAgICBhYnN0cmFjdCA6IHtcbiAgICAgICAgdHlwZSA6IFNlcXVlbGl6ZS5TVFJJTkcsXG4gICAgICAgIGFsbG93TnVsbCA6IHRydWUsXG4gICAgfSxcbiAgICBpbWFnZSA6IHsgLy9waG90byBnYWxsZXJ5XG4gICAgICAgIHR5cGUgOiBTZXF1ZWxpemUuU1RSSU5HLFxuICAgICAgICBhbGxvd051bGwgOiB0cnVlXG4gICAgfVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gQXJ0aXN0aWNfRXZlbnQ7Il19",
    "map": {
      "version": 3,
      "sources": [
        "artisticevent.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "sequelize",
        "Artistic_Event",
        "define",
        "id",
        "type",
        "INTEGER",
        "autoIncrement",
        "allowNull",
        "primaryKey",
        "title",
        "STRING",
        "date",
        "factsheet",
        "image",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,IAAMC,SAAS,GAAGD,OAAO,CAAC,mBAAD,CAAzB;;AAEA,IAAME,cAAc,GAAGD,SAAS,CAACE,MAAV,CAAiB,eAAjB,EAAkC;AACrDC,EAAAA,EAAE,EAAG;AACDC,IAAAA,IAAI,EAAGN,SAAS,CAACO,OADhB;AAEDC,IAAAA,aAAa,EAAG,IAFf;AAGDC,IAAAA,SAAS,EAAG,KAHX;AAIDC,IAAAA,UAAU,EAAG;AAJZ,GADgD;AAOrDC,EAAAA,KAAK,EAAG;AACJL,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADb;AAEJH,IAAAA,SAAS,EAAG;AAFR,GAP6C;AAWrDI,EAAAA,IAAI,EAAG;AACHP,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADd;AAEHH,IAAAA,SAAS,EAAG;AAFT,GAX8C;AAerDK,EAAAA,SAAS,EAAG;AAAE;AACVR,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADT;AAERH,IAAAA,SAAS,EAAG;AAFJ,GAfyC;AAmBrD,cAAW;AACPH,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADV;AAEPH,IAAAA,SAAS,EAAG;AAFL,GAnB0C;AAuBrDM,EAAAA,KAAK,EAAG;AAAE;AACNT,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADb;AAEJH,IAAAA,SAAS,EAAG;AAFR;AAvB6C,CAAlC,CAAvB;AA6BAO,MAAM,CAACC,OAAP,GAAiBd,cAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst Artistic_Event = sequelize.define('artisticevent', {\n    id : {\n        type : Sequelize.INTEGER,\n        autoIncrement : true,\n        allowNull : false,\n        primaryKey : true\n    },\n    title : {\n        type : Sequelize.STRING,\n        allowNull : false,\n    },\n    date : {\n        type : Sequelize.STRING,\n        allowNull : true,\n    },\n    factsheet : { //it must include the date\n        type : Sequelize.STRING,\n        allowNull : true,\n    },\n    abstract : {\n        type : Sequelize.STRING,\n        allowNull : true,\n    },\n    image : { //photo gallery\n        type : Sequelize.STRING,\n        allowNull : true\n    }\n});\n\nmodule.exports = Artistic_Event;"
      ]
    },
    "sourceType": "script",
    "mtime": 1577794697677
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes/performer.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes/performer.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes/performer.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes/performer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes",
        "sourceFileName": "performer.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar _require = require('express-validator/check'),\n    body = _require.body,\n    query = _require.query;\n\nvar router = express.Router();\n\nvar isAuth = require('../middleware/is-auth');\n\nvar performerController = require('../controllers/performer');\n\nvar path = require('path');\n\nvar multer = require('multer');\n\nvar uuidv4 = require('uuid/v4');\n\nvar storage = multer.diskStorage({\n  destination: function destination(req, file, callback) {\n    callback(null, 'public/images');\n  },\n  filename: function filename(req, file, callback) {\n    //callback(null, Date.now() + '-' + file.originalname);\n    callback(null, uuidv4() + path.extname(file.originalname));\n  }\n});\n\nvar fileFilter = function fileFilter(req, file, callback) {\n  if (file.mimetype == 'image/png' || file.mimetype == 'image/jpg' || file.mimetype == 'image/jpeg') {\n    callback(null, true);\n  } else {\n    req.fileValidationError = \"Estensione non consentita solo: 'image/jpg' | 'image/png' | 'image/jpeg'\";\n    callback(null, false);\n  }\n};\n\nvar upload = multer({\n  storage: storage,\n  fileFilter: fileFilter\n});\nvar cpUpload = upload.single('image');\nrouter.get('/performer', performerController.getPerformers);\nrouter.get('/performer/search', performerController.searchPerformer);\nrouter.get('/performer/:id', performerController.getPerformer);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBlcmZvcm1lci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImJvZHkiLCJxdWVyeSIsInJvdXRlciIsIlJvdXRlciIsImlzQXV0aCIsInBlcmZvcm1lckNvbnRyb2xsZXIiLCJwYXRoIiwibXVsdGVyIiwidXVpZHY0Iiwic3RvcmFnZSIsImRpc2tTdG9yYWdlIiwiZGVzdGluYXRpb24iLCJyZXEiLCJmaWxlIiwiY2FsbGJhY2siLCJmaWxlbmFtZSIsImV4dG5hbWUiLCJvcmlnaW5hbG5hbWUiLCJmaWxlRmlsdGVyIiwibWltZXR5cGUiLCJmaWxlVmFsaWRhdGlvbkVycm9yIiwidXBsb2FkIiwiY3BVcGxvYWQiLCJzaW5nbGUiLCJnZXQiLCJnZXRQZXJmb3JtZXJzIiwic2VhcmNoUGVyZm9ybWVyIiwiZ2V0UGVyZm9ybWVyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztlQUN3QkEsT0FBTyxDQUFDLHlCQUFELEM7SUFBdkJDLEksWUFBQUEsSTtJQUFNQyxLLFlBQUFBLEs7O0FBQ2QsSUFBTUMsTUFBTSxHQUFHSixPQUFPLENBQUNLLE1BQVIsRUFBZjs7QUFFQSxJQUFNQyxNQUFNLEdBQUdMLE9BQU8sQ0FBQyx1QkFBRCxDQUF0Qjs7QUFFQSxJQUFNTSxtQkFBbUIsR0FBR04sT0FBTyxDQUFDLDBCQUFELENBQW5DOztBQUVBLElBQU1PLElBQUksR0FBR1AsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTVEsTUFBTSxHQUFHUixPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFDQSxJQUFNUyxNQUFNLEdBQUdULE9BQU8sQ0FBQyxTQUFELENBQXRCOztBQUVBLElBQU1VLE9BQU8sR0FBR0YsTUFBTSxDQUFDRyxXQUFQLENBQW1CO0FBQy9CQyxFQUFBQSxXQUFXLEVBQUcscUJBQUNDLEdBQUQsRUFBTUMsSUFBTixFQUFZQyxRQUFaLEVBQXlCO0FBQ25DQSxJQUFBQSxRQUFRLENBQUMsSUFBRCxFQUFPLGVBQVAsQ0FBUjtBQUNILEdBSDhCO0FBSS9CQyxFQUFBQSxRQUFRLEVBQUcsa0JBQUNILEdBQUQsRUFBTUMsSUFBTixFQUFZQyxRQUFaLEVBQXlCO0FBQ2hDO0FBQ0FBLElBQUFBLFFBQVEsQ0FBQyxJQUFELEVBQU9OLE1BQU0sS0FBS0YsSUFBSSxDQUFDVSxPQUFMLENBQWFILElBQUksQ0FBQ0ksWUFBbEIsQ0FBbEIsQ0FBUjtBQUNIO0FBUDhCLENBQW5CLENBQWhCOztBQVVBLElBQU1DLFVBQVUsR0FBSSxTQUFkQSxVQUFjLENBQUNOLEdBQUQsRUFBTUMsSUFBTixFQUFZQyxRQUFaLEVBQXlCO0FBQ3pDLE1BQUdELElBQUksQ0FBQ00sUUFBTCxJQUFpQixXQUFqQixJQUFnQ04sSUFBSSxDQUFDTSxRQUFMLElBQWlCLFdBQWpELElBQWdFTixJQUFJLENBQUNNLFFBQUwsSUFBaUIsWUFBcEYsRUFBa0c7QUFDOUZMLElBQUFBLFFBQVEsQ0FBQyxJQUFELEVBQU8sSUFBUCxDQUFSO0FBQ0gsR0FGRCxNQUVPO0FBQ0hGLElBQUFBLEdBQUcsQ0FBQ1EsbUJBQUosR0FBMEIsMEVBQTFCO0FBQ0FOLElBQUFBLFFBQVEsQ0FBQyxJQUFELEVBQU8sS0FBUCxDQUFSO0FBQ0g7QUFDSixDQVBEOztBQVNBLElBQUlPLE1BQU0sR0FBR2QsTUFBTSxDQUFDO0FBQUVFLEVBQUFBLE9BQU8sRUFBR0EsT0FBWjtBQUFxQlMsRUFBQUEsVUFBVSxFQUFHQTtBQUFsQyxDQUFELENBQW5CO0FBRUEsSUFBSUksUUFBUSxHQUFHRCxNQUFNLENBQUNFLE1BQVAsQ0FBYyxPQUFkLENBQWY7QUFFQXJCLE1BQU0sQ0FBQ3NCLEdBQVAsQ0FBVyxZQUFYLEVBQXlCbkIsbUJBQW1CLENBQUNvQixhQUE3QztBQUNBdkIsTUFBTSxDQUFDc0IsR0FBUCxDQUFXLG1CQUFYLEVBQWdDbkIsbUJBQW1CLENBQUNxQixlQUFwRDtBQUNBeEIsTUFBTSxDQUFDc0IsR0FBUCxDQUFXLGdCQUFYLEVBQTZCbkIsbUJBQW1CLENBQUNzQixZQUFqRDtBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUIzQixNQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvQWxlc3NhbmRyb19NdXNvbGluby9EZXNrdG9wL0RyZWFtTGFuZEZlc3RpdmFsL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG5jb25zdCB7IGJvZHksIHF1ZXJ5IH0gPSByZXF1aXJlKCdleHByZXNzLXZhbGlkYXRvci9jaGVjaycpO1xuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcblxuY29uc3QgaXNBdXRoID0gcmVxdWlyZSgnLi4vbWlkZGxld2FyZS9pcy1hdXRoJyk7XG5cbmNvbnN0IHBlcmZvcm1lckNvbnRyb2xsZXIgPSByZXF1aXJlKCcuLi9jb250cm9sbGVycy9wZXJmb3JtZXInKTtcblxuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbmNvbnN0IG11bHRlciA9IHJlcXVpcmUoJ211bHRlcicpO1xuY29uc3QgdXVpZHY0ID0gcmVxdWlyZSgndXVpZC92NCcpO1xuXG5jb25zdCBzdG9yYWdlID0gbXVsdGVyLmRpc2tTdG9yYWdlKHtcbiAgICBkZXN0aW5hdGlvbiA6IChyZXEsIGZpbGUsIGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIGNhbGxiYWNrKG51bGwsICdwdWJsaWMvaW1hZ2VzJyk7XG4gICAgfSxcbiAgICBmaWxlbmFtZSA6IChyZXEsIGZpbGUsIGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIC8vY2FsbGJhY2sobnVsbCwgRGF0ZS5ub3coKSArICctJyArIGZpbGUub3JpZ2luYWxuYW1lKTtcbiAgICAgICAgY2FsbGJhY2sobnVsbCwgdXVpZHY0KCkgKyBwYXRoLmV4dG5hbWUoZmlsZS5vcmlnaW5hbG5hbWUpKTtcbiAgICB9LFxufSk7XG5cbmNvbnN0IGZpbGVGaWx0ZXIgPSAoKHJlcSwgZmlsZSwgY2FsbGJhY2spID0+IHtcbiAgICBpZihmaWxlLm1pbWV0eXBlID09ICdpbWFnZS9wbmcnIHx8IGZpbGUubWltZXR5cGUgPT0gJ2ltYWdlL2pwZycgfHwgZmlsZS5taW1ldHlwZSA9PSAnaW1hZ2UvanBlZycpIHtcbiAgICAgICAgY2FsbGJhY2sobnVsbCwgdHJ1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmVxLmZpbGVWYWxpZGF0aW9uRXJyb3IgPSBcIkVzdGVuc2lvbmUgbm9uIGNvbnNlbnRpdGEgc29sbzogJ2ltYWdlL2pwZycgfCAnaW1hZ2UvcG5nJyB8ICdpbWFnZS9qcGVnJ1wiO1xuICAgICAgICBjYWxsYmFjayhudWxsLCBmYWxzZSk7XG4gICAgfVxufSk7XG5cbnZhciB1cGxvYWQgPSBtdWx0ZXIoeyBzdG9yYWdlIDogc3RvcmFnZSwgZmlsZUZpbHRlciA6IGZpbGVGaWx0ZXJ9KTtcblxudmFyIGNwVXBsb2FkID0gdXBsb2FkLnNpbmdsZSgnaW1hZ2UnKTtcblxucm91dGVyLmdldCgnL3BlcmZvcm1lcicsIHBlcmZvcm1lckNvbnRyb2xsZXIuZ2V0UGVyZm9ybWVycyk7XG5yb3V0ZXIuZ2V0KCcvcGVyZm9ybWVyL3NlYXJjaCcsIHBlcmZvcm1lckNvbnRyb2xsZXIuc2VhcmNoUGVyZm9ybWVyKTtcbnJvdXRlci5nZXQoJy9wZXJmb3JtZXIvOmlkJywgcGVyZm9ybWVyQ29udHJvbGxlci5nZXRQZXJmb3JtZXIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "performer.js"
      ],
      "names": [
        "express",
        "require",
        "body",
        "query",
        "router",
        "Router",
        "isAuth",
        "performerController",
        "path",
        "multer",
        "uuidv4",
        "storage",
        "diskStorage",
        "destination",
        "req",
        "file",
        "callback",
        "filename",
        "extname",
        "originalname",
        "fileFilter",
        "mimetype",
        "fileValidationError",
        "upload",
        "cpUpload",
        "single",
        "get",
        "getPerformers",
        "searchPerformer",
        "getPerformer",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;eACwBA,OAAO,CAAC,yBAAD,C;IAAvBC,I,YAAAA,I;IAAMC,K,YAAAA,K;;AACd,IAAMC,MAAM,GAAGJ,OAAO,CAACK,MAAR,EAAf;;AAEA,IAAMC,MAAM,GAAGL,OAAO,CAAC,uBAAD,CAAtB;;AAEA,IAAMM,mBAAmB,GAAGN,OAAO,CAAC,0BAAD,CAAnC;;AAEA,IAAMO,IAAI,GAAGP,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMQ,MAAM,GAAGR,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMS,MAAM,GAAGT,OAAO,CAAC,SAAD,CAAtB;;AAEA,IAAMU,OAAO,GAAGF,MAAM,CAACG,WAAP,CAAmB;AAC/BC,EAAAA,WAAW,EAAG,qBAACC,GAAD,EAAMC,IAAN,EAAYC,QAAZ,EAAyB;AACnCA,IAAAA,QAAQ,CAAC,IAAD,EAAO,eAAP,CAAR;AACH,GAH8B;AAI/BC,EAAAA,QAAQ,EAAG,kBAACH,GAAD,EAAMC,IAAN,EAAYC,QAAZ,EAAyB;AAChC;AACAA,IAAAA,QAAQ,CAAC,IAAD,EAAON,MAAM,KAAKF,IAAI,CAACU,OAAL,CAAaH,IAAI,CAACI,YAAlB,CAAlB,CAAR;AACH;AAP8B,CAAnB,CAAhB;;AAUA,IAAMC,UAAU,GAAI,SAAdA,UAAc,CAACN,GAAD,EAAMC,IAAN,EAAYC,QAAZ,EAAyB;AACzC,MAAGD,IAAI,CAACM,QAAL,IAAiB,WAAjB,IAAgCN,IAAI,CAACM,QAAL,IAAiB,WAAjD,IAAgEN,IAAI,CAACM,QAAL,IAAiB,YAApF,EAAkG;AAC9FL,IAAAA,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAR;AACH,GAFD,MAEO;AACHF,IAAAA,GAAG,CAACQ,mBAAJ,GAA0B,0EAA1B;AACAN,IAAAA,QAAQ,CAAC,IAAD,EAAO,KAAP,CAAR;AACH;AACJ,CAPD;;AASA,IAAIO,MAAM,GAAGd,MAAM,CAAC;AAAEE,EAAAA,OAAO,EAAGA,OAAZ;AAAqBS,EAAAA,UAAU,EAAGA;AAAlC,CAAD,CAAnB;AAEA,IAAII,QAAQ,GAAGD,MAAM,CAACE,MAAP,CAAc,OAAd,CAAf;AAEArB,MAAM,CAACsB,GAAP,CAAW,YAAX,EAAyBnB,mBAAmB,CAACoB,aAA7C;AACAvB,MAAM,CAACsB,GAAP,CAAW,mBAAX,EAAgCnB,mBAAmB,CAACqB,eAApD;AACAxB,MAAM,CAACsB,GAAP,CAAW,gBAAX,EAA6BnB,mBAAmB,CAACsB,YAAjD;AAEAC,MAAM,CAACC,OAAP,GAAiB3B,MAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes",
      "sourcesContent": [
        "const express = require('express');\nconst { body, query } = require('express-validator/check');\nconst router = express.Router();\n\nconst isAuth = require('../middleware/is-auth');\n\nconst performerController = require('../controllers/performer');\n\nconst path = require('path');\nconst multer = require('multer');\nconst uuidv4 = require('uuid/v4');\n\nconst storage = multer.diskStorage({\n    destination : (req, file, callback) => {\n        callback(null, 'public/images');\n    },\n    filename : (req, file, callback) => {\n        //callback(null, Date.now() + '-' + file.originalname);\n        callback(null, uuidv4() + path.extname(file.originalname));\n    },\n});\n\nconst fileFilter = ((req, file, callback) => {\n    if(file.mimetype == 'image/png' || file.mimetype == 'image/jpg' || file.mimetype == 'image/jpeg') {\n        callback(null, true);\n    } else {\n        req.fileValidationError = \"Estensione non consentita solo: 'image/jpg' | 'image/png' | 'image/jpeg'\";\n        callback(null, false);\n    }\n});\n\nvar upload = multer({ storage : storage, fileFilter : fileFilter});\n\nvar cpUpload = upload.single('image');\n\nrouter.get('/performer', performerController.getPerformers);\nrouter.get('/performer/search', performerController.searchPerformer);\nrouter.get('/performer/:id', performerController.getPerformer);\n\nmodule.exports = router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1577442367269
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers/performer.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers/performer.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers/performer.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers/performer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers",
        "sourceFileName": "performer.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _require = require('express-validator/check'),\n    validationResult = _require.validationResult;\n\nvar Sequelize = require('sequelize');\n\nvar Op = Sequelize.Op;\n\nvar path = require('path');\n\nvar fs = require('fs');\n\nvar Performer = require('../models/performer');\n\nvar Artisticevent = require('../models/artisticevent');\n\nvar Performance = require('../models/performance');\n\nvar User = require('../models/user');\n\nexports.getPerformers = function (req, res, next) {\n  Performer.findAll().then(function (performers) {\n    var promises = [];\n    performers.forEach(function (performer) {\n      var performerWithArtisticEvents = performer.getArtisticevents().then(function (artisticevents) {\n        performer.dataValues.artisticevents = artisticevents;\n      }).then(function () {\n        return performer;\n      });\n      promises.push(performerWithArtisticEvents);\n    });\n    return Promise.all(promises);\n  }).then(function (performers) {\n    res.json({\n      performers: performers\n    });\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\n\nexports.getPerformer = function (req, res, next) {\n  var performerId = req.params.id;\n  Performer.findByPk(performerId).then(function (performer) {\n    if (!performer) {\n      res.status(404).json({\n        messages: 'Performer Not Found'\n      });\n    }\n\n    var promises = [];\n    var performerWithArtisticEvents = performer.getArtisticevents().then(function (artisticevents) {\n      performer.dataValues.artisticevents = artisticevents;\n    }).then(function () {\n      return performer;\n    });\n    promises.push(performerWithArtisticEvents);\n    return Promise.all(promises);\n  }).then(function (performer) {\n    res.json({\n      performer: performer\n    });\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\n\nexports.searchPerformer = function (req, res, next) {\n  var name = '%' + req.query.name + '%';\n  Performer.findAll({\n    where: {\n      name: _defineProperty({}, Op.like, name)\n    }\n  }).then(function (performers) {\n    var promises = [];\n    performers.forEach(function (performer) {\n      var performerWithArtisticEvents = performer.getArtisticevents().then(function (artisticevents) {\n        performer.dataValues.artisticevents = artisticevents;\n      }).then(function () {\n        return performer;\n      });\n      promises.push(performerWithArtisticEvents);\n    });\n    return Promise.all(promises);\n  }).then(function (performers) {\n    res.json({\n      performers: performers\n    });\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "performer.js"
      ],
      "names": [
        "require",
        "validationResult",
        "Sequelize",
        "Op",
        "path",
        "fs",
        "Performer",
        "Artisticevent",
        "Performance",
        "User",
        "exports",
        "getPerformers",
        "req",
        "res",
        "next",
        "findAll",
        "then",
        "performers",
        "promises",
        "forEach",
        "performer",
        "performerWithArtisticEvents",
        "getArtisticevents",
        "artisticevents",
        "dataValues",
        "push",
        "Promise",
        "all",
        "json",
        "err",
        "console",
        "log",
        "getPerformer",
        "performerId",
        "params",
        "id",
        "findByPk",
        "status",
        "messages",
        "searchPerformer",
        "name",
        "query",
        "where",
        "like"
      ],
      "mappings": ";;;;eAA6BA,OAAO,CAAC,yBAAD,C;IAA5BC,gB,YAAAA,gB;;AACR,IAAMC,SAAS,GAAGF,OAAO,CAAC,WAAD,CAAzB;;AACA,IAAMG,EAAE,GAAGD,SAAS,CAACC,EAArB;;AACA,IAAMC,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMK,EAAE,GAAGL,OAAO,CAAC,IAAD,CAAlB;;AAEA,IAAMM,SAAS,GAAGN,OAAO,CAAC,qBAAD,CAAzB;;AACA,IAAMO,aAAa,GAAGP,OAAO,CAAC,yBAAD,CAA7B;;AACA,IAAMQ,WAAW,GAAGR,OAAO,CAAC,uBAAD,CAA3B;;AACA,IAAMS,IAAI,GAAGT,OAAO,CAAC,gBAAD,CAApB;;AAEAU,OAAO,CAACC,aAAR,GAAwB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxCR,EAAAA,SAAS,CAACS,OAAV,GACCC,IADD,CACM,UAAAC,UAAU,EAAI;AAChB,QAAIC,QAAQ,GAAG,EAAf;AACAD,IAAAA,UAAU,CAACE,OAAX,CAAmB,UAAAC,SAAS,EAAI;AAChC,UAAMC,2BAA2B,GAAGD,SAAS,CAACE,iBAAV,GAC5BN,IAD4B,CACvB,UAAAO,cAAc,EAAI;AACnBH,QAAAA,SAAS,CAACI,UAAV,CAAqBD,cAArB,GAAsCA,cAAtC;AACH,OAH2B,EAI5BP,IAJ4B,CAIvB,YAAM;AACX,eAAOI,SAAP;AACA,OAN4B,CAApC;AAOAF,MAAAA,QAAQ,CAACO,IAAT,CAAcJ,2BAAd;AACC,KATD;AAUA,WAAOK,OAAO,CAACC,GAAR,CAAYT,QAAZ,CAAP;AACH,GAdD,EAcGF,IAdH,CAcQ,UAACC,UAAD,EAAgB;AACpBJ,IAAAA,GAAG,CAACe,IAAJ,CAAS;AAACX,MAAAA,UAAU,EAAGA;AAAd,KAAT;AACH,GAhBD,WAiBI,UAAAY,GAAG;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,GAjBP;AAmBH,CApBD;;AAsBAnB,OAAO,CAACsB,YAAR,GAAuB,UAACpB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACvC,MAAMmB,WAAW,GAAGrB,GAAG,CAACsB,MAAJ,CAAWC,EAA/B;AACA7B,EAAAA,SAAS,CAAC8B,QAAV,CAAmBH,WAAnB,EACCjB,IADD,CACM,UAAAI,SAAS,EAAI;AACf,QAAG,CAACA,SAAJ,EAAe;AACXP,MAAAA,GAAG,CAACwB,MAAJ,CAAW,GAAX,EAAgBT,IAAhB,CAAqB;AACjBU,QAAAA,QAAQ,EAAG;AADM,OAArB;AAGH;;AACD,QAAIpB,QAAQ,GAAG,EAAf;AACA,QAAMG,2BAA2B,GAAGD,SAAS,CAACE,iBAAV,GACnCN,IADmC,CAC9B,UAAAO,cAAc,EAAI;AACpBH,MAAAA,SAAS,CAACI,UAAV,CAAqBD,cAArB,GAAsCA,cAAtC;AACF,KAHkC,EAInCP,IAJmC,CAI9B,YAAM;AACP,aAAOI,SAAP;AACJ,KANmC,CAApC;AAOAF,IAAAA,QAAQ,CAACO,IAAT,CAAcJ,2BAAd;AACA,WAAOK,OAAO,CAACC,GAAR,CAAYT,QAAZ,CAAP;AACC,GAjBL,EAiBOF,IAjBP,CAiBY,UAACI,SAAD,EAAe;AACnBP,IAAAA,GAAG,CAACe,IAAJ,CAAS;AAACR,MAAAA,SAAS,EAAGA;AAAb,KAAT;AACH,GAnBL,WAoBQ,UAAAS,GAAG;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,GApBX;AAsBH,CAxBD;;AA0BAnB,OAAO,CAAC6B,eAAR,GAA0B,UAAC3B,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1C,MAAM0B,IAAI,GAAG,MAAM5B,GAAG,CAAC6B,KAAJ,CAAUD,IAAhB,GAAuB,GAApC;AACAlC,EAAAA,SAAS,CAACS,OAAV,CAAkB;AAAC2B,IAAAA,KAAK,EAAG;AAACF,MAAAA,IAAI,sBAAKrC,EAAE,CAACwC,IAAR,EAAgBH,IAAhB;AAAL;AAAT,GAAlB,EACCxB,IADD,CACM,UAAAC,UAAU,EAAI;AAChB,QAAIC,QAAQ,GAAG,EAAf;AACAD,IAAAA,UAAU,CAACE,OAAX,CAAmB,UAAAC,SAAS,EAAI;AAChC,UAAMC,2BAA2B,GAAGD,SAAS,CAACE,iBAAV,GAC5BN,IAD4B,CACvB,UAAAO,cAAc,EAAI;AACvBH,QAAAA,SAAS,CAACI,UAAV,CAAqBD,cAArB,GAAsCA,cAAtC;AACC,OAH2B,EAI5BP,IAJ4B,CAIvB,YAAM;AACX,eAAOI,SAAP;AACA,OAN4B,CAApC;AAOAF,MAAAA,QAAQ,CAACO,IAAT,CAAcJ,2BAAd;AACC,KATD;AAUA,WAAOK,OAAO,CAACC,GAAR,CAAYT,QAAZ,CAAP;AACH,GAdD,EAcGF,IAdH,CAcQ,UAACC,UAAD,EAAgB;AAChBJ,IAAAA,GAAG,CAACe,IAAJ,CAAS;AAACX,MAAAA,UAAU,EAAGA;AAAd,KAAT;AACP,GAhBD,WAiBQ,UAAAY,GAAG;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,GAjBX;AAmBH,CArBD",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers",
      "sourcesContent": [
        "const { validationResult } = require('express-validator/check');\nconst Sequelize = require('sequelize');\nconst Op = Sequelize.Op;\nconst path = require('path');\nconst fs = require('fs');\n\nconst Performer = require('../models/performer');\nconst Artisticevent = require('../models/artisticevent');\nconst Performance = require('../models/performance');\nconst User = require('../models/user');\n\nexports.getPerformers = (req, res, next) => {\n    Performer.findAll()\n    .then(performers => {\n        var promises = [];\n        performers.forEach(performer => {\n        const performerWithArtisticEvents = performer.getArtisticevents()\n               .then(artisticevents => {\n                    performer.dataValues.artisticevents = artisticevents;\n                })\n               .then(() => {\n                return performer;\n               });\n        promises.push(performerWithArtisticEvents);\n        });\n        return Promise.all(promises);\n    }).then((performers) => {\n        res.json({performers : performers});\n    }).catch(\n        err => console.log(err)\n    );\n};\n\nexports.getPerformer = (req, res, next) => {\n    const performerId = req.params.id;\n    Performer.findByPk(performerId)\n    .then(performer => {\n        if(!performer) {\n            res.status(404).json({\n                messages : 'Performer Not Found',\n            });\n        }\n        var promises = [];\n        const performerWithArtisticEvents = performer.getArtisticevents()\n        .then(artisticevents => {\n            performer.dataValues.artisticevents = artisticevents;\n         })\n        .then(() => {\n             return performer;\n        });\n        promises.push(performerWithArtisticEvents);\n        return Promise.all(promises);\n        }).then((performer) => {\n            res.json({performer : performer});\n        }).catch(\n            err => console.log(err)\n        );\n};\n\nexports.searchPerformer = (req, res, next) => {\n    const name = '%' + req.query.name + '%';\n    Performer.findAll({where : {name : {[Op.like] : name}}})\n    .then(performers => {\n        var promises = [];\n        performers.forEach(performer => {\n        const performerWithArtisticEvents = performer.getArtisticevents()\n               .then(artisticevents => {\n                performer.dataValues.artisticevents = artisticevents;\n                })\n               .then(() => {\n                return performer;\n               });\n        promises.push(performerWithArtisticEvents);\n        });\n        return Promise.all(promises);\n    }).then((performers) => {\n            res.json({performers : performers});\n    }).catch(\n            err => console.log(err)\n    );\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1577794638587
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/performer.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/performer.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/performer.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/performer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models",
        "sourceFileName": "performer.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar Sequelize = require('sequelize');\n\nvar sequelize = require('../utils/database');\n\nvar Performer = sequelize.define('performer', {\n  id: {\n    type: Sequelize.INTEGER,\n    autoIncrement: true,\n    allowNull: false,\n    primaryKey: true\n  },\n  name: {\n    type: Sequelize.STRING,\n    allowNull: false\n  },\n  company_members: {\n    type: Sequelize.STRING,\n    allowNull: true\n  },\n  current_affiliation: {\n    type: Sequelize.STRING,\n    allowNull: true\n  },\n  main_achievements: {\n    type: Sequelize.STRING,\n    allowNull: true\n  },\n  image: {\n    //photo gallery\n    type: Sequelize.STRING,\n    allowNull: true\n  },\n  details: {\n    type: Sequelize.STRING,\n    allowNull: true\n  },\n  isCompany: {\n    type: Sequelize.BOOLEAN,\n    allowNull: false\n  }\n});\nmodule.exports = Performer;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBlcmZvcm1lci5qcyJdLCJuYW1lcyI6WyJTZXF1ZWxpemUiLCJyZXF1aXJlIiwic2VxdWVsaXplIiwiUGVyZm9ybWVyIiwiZGVmaW5lIiwiaWQiLCJ0eXBlIiwiSU5URUdFUiIsImF1dG9JbmNyZW1lbnQiLCJhbGxvd051bGwiLCJwcmltYXJ5S2V5IiwibmFtZSIsIlNUUklORyIsImNvbXBhbnlfbWVtYmVycyIsImN1cnJlbnRfYWZmaWxpYXRpb24iLCJtYWluX2FjaGlldmVtZW50cyIsImltYWdlIiwiZGV0YWlscyIsImlzQ29tcGFueSIsIkJPT0xFQU4iLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLFNBQVMsR0FBR0MsT0FBTyxDQUFDLFdBQUQsQ0FBekI7O0FBRUEsSUFBTUMsU0FBUyxHQUFHRCxPQUFPLENBQUMsbUJBQUQsQ0FBekI7O0FBRUEsSUFBTUUsU0FBUyxHQUFHRCxTQUFTLENBQUNFLE1BQVYsQ0FBaUIsV0FBakIsRUFBOEI7QUFDNUNDLEVBQUFBLEVBQUUsRUFBRztBQUNEQyxJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ08sT0FEaEI7QUFFREMsSUFBQUEsYUFBYSxFQUFHLElBRmY7QUFHREMsSUFBQUEsU0FBUyxFQUFHLEtBSFg7QUFJREMsSUFBQUEsVUFBVSxFQUFHO0FBSlosR0FEdUM7QUFPNUNDLEVBQUFBLElBQUksRUFBRztBQUNITCxJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ1ksTUFEZDtBQUVISCxJQUFBQSxTQUFTLEVBQUc7QUFGVCxHQVBxQztBQVc1Q0ksRUFBQUEsZUFBZSxFQUFHO0FBQ2RQLElBQUFBLElBQUksRUFBR04sU0FBUyxDQUFDWSxNQURIO0FBRWRILElBQUFBLFNBQVMsRUFBRztBQUZFLEdBWDBCO0FBZTVDSyxFQUFBQSxtQkFBbUIsRUFBRztBQUNsQlIsSUFBQUEsSUFBSSxFQUFHTixTQUFTLENBQUNZLE1BREM7QUFFbEJILElBQUFBLFNBQVMsRUFBRztBQUZNLEdBZnNCO0FBbUI1Q00sRUFBQUEsaUJBQWlCLEVBQUc7QUFDaEJULElBQUFBLElBQUksRUFBR04sU0FBUyxDQUFDWSxNQUREO0FBRWhCSCxJQUFBQSxTQUFTLEVBQUc7QUFGSSxHQW5Cd0I7QUF1QjVDTyxFQUFBQSxLQUFLLEVBQUc7QUFBRTtBQUNOVixJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ1ksTUFEYjtBQUVKSCxJQUFBQSxTQUFTLEVBQUc7QUFGUixHQXZCb0M7QUEyQjVDUSxFQUFBQSxPQUFPLEVBQUc7QUFDTlgsSUFBQUEsSUFBSSxFQUFHTixTQUFTLENBQUNZLE1BRFg7QUFFTkgsSUFBQUEsU0FBUyxFQUFHO0FBRk4sR0EzQmtDO0FBK0I1Q1MsRUFBQUEsU0FBUyxFQUFHO0FBQ1JaLElBQUFBLElBQUksRUFBR04sU0FBUyxDQUFDbUIsT0FEVDtBQUVSVixJQUFBQSxTQUFTLEVBQUc7QUFGSjtBQS9CZ0MsQ0FBOUIsQ0FBbEI7QUFxQ0FXLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmxCLFNBQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9BbGVzc2FuZHJvX011c29saW5vL0Rlc2t0b3AvRHJlYW1MYW5kRmVzdGl2YWwvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU2VxdWVsaXplID0gcmVxdWlyZSgnc2VxdWVsaXplJyk7XG5cbmNvbnN0IHNlcXVlbGl6ZSA9IHJlcXVpcmUoJy4uL3V0aWxzL2RhdGFiYXNlJyk7XG5cbmNvbnN0IFBlcmZvcm1lciA9IHNlcXVlbGl6ZS5kZWZpbmUoJ3BlcmZvcm1lcicsIHtcbiAgICBpZCA6IHtcbiAgICAgICAgdHlwZSA6IFNlcXVlbGl6ZS5JTlRFR0VSLFxuICAgICAgICBhdXRvSW5jcmVtZW50IDogdHJ1ZSxcbiAgICAgICAgYWxsb3dOdWxsIDogZmFsc2UsXG4gICAgICAgIHByaW1hcnlLZXkgOiB0cnVlXG4gICAgfSxcbiAgICBuYW1lIDoge1xuICAgICAgICB0eXBlIDogU2VxdWVsaXplLlNUUklORyxcbiAgICAgICAgYWxsb3dOdWxsIDogZmFsc2UsXG4gICAgfSxcbiAgICBjb21wYW55X21lbWJlcnMgOiB7XG4gICAgICAgIHR5cGUgOiBTZXF1ZWxpemUuU1RSSU5HLFxuICAgICAgICBhbGxvd051bGwgOiB0cnVlLFxuICAgIH0sXG4gICAgY3VycmVudF9hZmZpbGlhdGlvbiA6IHtcbiAgICAgICAgdHlwZSA6IFNlcXVlbGl6ZS5TVFJJTkcsXG4gICAgICAgIGFsbG93TnVsbCA6IHRydWUsXG4gICAgfSxcbiAgICBtYWluX2FjaGlldmVtZW50cyA6IHtcbiAgICAgICAgdHlwZSA6IFNlcXVlbGl6ZS5TVFJJTkcsXG4gICAgICAgIGFsbG93TnVsbCA6IHRydWUsXG4gICAgfSxcbiAgICBpbWFnZSA6IHsgLy9waG90byBnYWxsZXJ5XG4gICAgICAgIHR5cGUgOiBTZXF1ZWxpemUuU1RSSU5HLFxuICAgICAgICBhbGxvd051bGwgOiB0cnVlXG4gICAgfSxcbiAgICBkZXRhaWxzIDoge1xuICAgICAgICB0eXBlIDogU2VxdWVsaXplLlNUUklORyxcbiAgICAgICAgYWxsb3dOdWxsIDogdHJ1ZSxcbiAgICB9LFxuICAgIGlzQ29tcGFueSA6IHtcbiAgICAgICAgdHlwZSA6IFNlcXVlbGl6ZS5CT09MRUFOLFxuICAgICAgICBhbGxvd051bGwgOiBmYWxzZSxcbiAgICB9XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBQZXJmb3JtZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "performer.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "sequelize",
        "Performer",
        "define",
        "id",
        "type",
        "INTEGER",
        "autoIncrement",
        "allowNull",
        "primaryKey",
        "name",
        "STRING",
        "company_members",
        "current_affiliation",
        "main_achievements",
        "image",
        "details",
        "isCompany",
        "BOOLEAN",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,IAAMC,SAAS,GAAGD,OAAO,CAAC,mBAAD,CAAzB;;AAEA,IAAME,SAAS,GAAGD,SAAS,CAACE,MAAV,CAAiB,WAAjB,EAA8B;AAC5CC,EAAAA,EAAE,EAAG;AACDC,IAAAA,IAAI,EAAGN,SAAS,CAACO,OADhB;AAEDC,IAAAA,aAAa,EAAG,IAFf;AAGDC,IAAAA,SAAS,EAAG,KAHX;AAIDC,IAAAA,UAAU,EAAG;AAJZ,GADuC;AAO5CC,EAAAA,IAAI,EAAG;AACHL,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADd;AAEHH,IAAAA,SAAS,EAAG;AAFT,GAPqC;AAW5CI,EAAAA,eAAe,EAAG;AACdP,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADH;AAEdH,IAAAA,SAAS,EAAG;AAFE,GAX0B;AAe5CK,EAAAA,mBAAmB,EAAG;AAClBR,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADC;AAElBH,IAAAA,SAAS,EAAG;AAFM,GAfsB;AAmB5CM,EAAAA,iBAAiB,EAAG;AAChBT,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADD;AAEhBH,IAAAA,SAAS,EAAG;AAFI,GAnBwB;AAuB5CO,EAAAA,KAAK,EAAG;AAAE;AACNV,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADb;AAEJH,IAAAA,SAAS,EAAG;AAFR,GAvBoC;AA2B5CQ,EAAAA,OAAO,EAAG;AACNX,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADX;AAENH,IAAAA,SAAS,EAAG;AAFN,GA3BkC;AA+B5CS,EAAAA,SAAS,EAAG;AACRZ,IAAAA,IAAI,EAAGN,SAAS,CAACmB,OADT;AAERV,IAAAA,SAAS,EAAG;AAFJ;AA/BgC,CAA9B,CAAlB;AAqCAW,MAAM,CAACC,OAAP,GAAiBlB,SAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst Performer = sequelize.define('performer', {\n    id : {\n        type : Sequelize.INTEGER,\n        autoIncrement : true,\n        allowNull : false,\n        primaryKey : true\n    },\n    name : {\n        type : Sequelize.STRING,\n        allowNull : false,\n    },\n    company_members : {\n        type : Sequelize.STRING,\n        allowNull : true,\n    },\n    current_affiliation : {\n        type : Sequelize.STRING,\n        allowNull : true,\n    },\n    main_achievements : {\n        type : Sequelize.STRING,\n        allowNull : true,\n    },\n    image : { //photo gallery\n        type : Sequelize.STRING,\n        allowNull : true\n    },\n    details : {\n        type : Sequelize.STRING,\n        allowNull : true,\n    },\n    isCompany : {\n        type : Sequelize.BOOLEAN,\n        allowNull : false,\n    }\n});\n\nmodule.exports = Performer;"
      ]
    },
    "sourceType": "script",
    "mtime": 1577528863974
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes/seminary.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes/seminary.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes/seminary.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes/seminary.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes",
        "sourceFileName": "seminary.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar _require = require('express-validator/check'),\n    body = _require.body,\n    query = _require.query;\n\nvar router = express.Router();\n\nvar isAuth = require('../middleware/is-auth');\n\nvar seminaryController = require('../controllers/seminary');\n\nvar path = require('path');\n\nvar multer = require('multer');\n\nvar uuidv4 = require('uuid/v4');\n\nvar storage = multer.diskStorage({\n  destination: function destination(req, file, callback) {\n    callback(null, 'public/images');\n  },\n  filename: function filename(req, file, callback) {\n    //callback(null, Date.now() + '-' + file.originalname);\n    callback(null, uuidv4() + path.extname(file.originalname));\n  }\n});\n\nvar fileFilter = function fileFilter(req, file, callback) {\n  if (file.mimetype == 'image/png' || file.mimetype == 'image/jpg' || file.mimetype == 'image/jpeg') {\n    callback(null, true);\n  } else {\n    req.fileValidationError = \"Estensione non consentita solo: 'image/jpg' | 'image/png' | 'image/jpeg'\";\n    callback(null, false);\n  }\n};\n\nvar upload = multer({\n  storage: storage,\n  fileFilter: fileFilter\n});\nvar cpUpload = upload.single('image');\nrouter.get('/seminary', seminaryController.getSeminaries);\nrouter.get('/seminary/search', seminaryController.searchSeminary);\nrouter.get('/seminary/:id', seminaryController.getSeminary);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlbWluYXJ5LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwiYm9keSIsInF1ZXJ5Iiwicm91dGVyIiwiUm91dGVyIiwiaXNBdXRoIiwic2VtaW5hcnlDb250cm9sbGVyIiwicGF0aCIsIm11bHRlciIsInV1aWR2NCIsInN0b3JhZ2UiLCJkaXNrU3RvcmFnZSIsImRlc3RpbmF0aW9uIiwicmVxIiwiZmlsZSIsImNhbGxiYWNrIiwiZmlsZW5hbWUiLCJleHRuYW1lIiwib3JpZ2luYWxuYW1lIiwiZmlsZUZpbHRlciIsIm1pbWV0eXBlIiwiZmlsZVZhbGlkYXRpb25FcnJvciIsInVwbG9hZCIsImNwVXBsb2FkIiwic2luZ2xlIiwiZ2V0IiwiZ2V0U2VtaW5hcmllcyIsInNlYXJjaFNlbWluYXJ5IiwiZ2V0U2VtaW5hcnkiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O2VBQ3dCQSxPQUFPLENBQUMseUJBQUQsQztJQUF2QkMsSSxZQUFBQSxJO0lBQU1DLEssWUFBQUEsSzs7QUFDZCxJQUFNQyxNQUFNLEdBQUdKLE9BQU8sQ0FBQ0ssTUFBUixFQUFmOztBQUVBLElBQU1DLE1BQU0sR0FBR0wsT0FBTyxDQUFDLHVCQUFELENBQXRCOztBQUVBLElBQU1NLGtCQUFrQixHQUFHTixPQUFPLENBQUMseUJBQUQsQ0FBbEM7O0FBRUEsSUFBTU8sSUFBSSxHQUFHUCxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxJQUFNUSxNQUFNLEdBQUdSLE9BQU8sQ0FBQyxRQUFELENBQXRCOztBQUNBLElBQU1TLE1BQU0sR0FBR1QsT0FBTyxDQUFDLFNBQUQsQ0FBdEI7O0FBRUEsSUFBTVUsT0FBTyxHQUFHRixNQUFNLENBQUNHLFdBQVAsQ0FBbUI7QUFDL0JDLEVBQUFBLFdBQVcsRUFBRyxxQkFBQ0MsR0FBRCxFQUFNQyxJQUFOLEVBQVlDLFFBQVosRUFBeUI7QUFDbkNBLElBQUFBLFFBQVEsQ0FBQyxJQUFELEVBQU8sZUFBUCxDQUFSO0FBQ0gsR0FIOEI7QUFJL0JDLEVBQUFBLFFBQVEsRUFBRyxrQkFBQ0gsR0FBRCxFQUFNQyxJQUFOLEVBQVlDLFFBQVosRUFBeUI7QUFDaEM7QUFDQUEsSUFBQUEsUUFBUSxDQUFDLElBQUQsRUFBT04sTUFBTSxLQUFLRixJQUFJLENBQUNVLE9BQUwsQ0FBYUgsSUFBSSxDQUFDSSxZQUFsQixDQUFsQixDQUFSO0FBQ0g7QUFQOEIsQ0FBbkIsQ0FBaEI7O0FBVUEsSUFBTUMsVUFBVSxHQUFJLFNBQWRBLFVBQWMsQ0FBQ04sR0FBRCxFQUFNQyxJQUFOLEVBQVlDLFFBQVosRUFBeUI7QUFDekMsTUFBR0QsSUFBSSxDQUFDTSxRQUFMLElBQWlCLFdBQWpCLElBQWdDTixJQUFJLENBQUNNLFFBQUwsSUFBaUIsV0FBakQsSUFBZ0VOLElBQUksQ0FBQ00sUUFBTCxJQUFpQixZQUFwRixFQUFrRztBQUM5RkwsSUFBQUEsUUFBUSxDQUFDLElBQUQsRUFBTyxJQUFQLENBQVI7QUFDSCxHQUZELE1BRU87QUFDSEYsSUFBQUEsR0FBRyxDQUFDUSxtQkFBSixHQUEwQiwwRUFBMUI7QUFDQU4sSUFBQUEsUUFBUSxDQUFDLElBQUQsRUFBTyxLQUFQLENBQVI7QUFDSDtBQUNKLENBUEQ7O0FBU0EsSUFBSU8sTUFBTSxHQUFHZCxNQUFNLENBQUM7QUFBRUUsRUFBQUEsT0FBTyxFQUFHQSxPQUFaO0FBQXFCUyxFQUFBQSxVQUFVLEVBQUdBO0FBQWxDLENBQUQsQ0FBbkI7QUFFQSxJQUFJSSxRQUFRLEdBQUdELE1BQU0sQ0FBQ0UsTUFBUCxDQUFjLE9BQWQsQ0FBZjtBQUVBckIsTUFBTSxDQUFDc0IsR0FBUCxDQUFXLFdBQVgsRUFBd0JuQixrQkFBa0IsQ0FBQ29CLGFBQTNDO0FBQ0F2QixNQUFNLENBQUNzQixHQUFQLENBQVcsa0JBQVgsRUFBK0JuQixrQkFBa0IsQ0FBQ3FCLGNBQWxEO0FBQ0F4QixNQUFNLENBQUNzQixHQUFQLENBQVcsZUFBWCxFQUE0Qm5CLGtCQUFrQixDQUFDc0IsV0FBL0M7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCM0IsTUFBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL0FsZXNzYW5kcm9fTXVzb2xpbm8vRGVza3RvcC9EcmVhbUxhbmRGZXN0aXZhbC9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xuY29uc3QgeyBib2R5LCBxdWVyeSB9ID0gcmVxdWlyZSgnZXhwcmVzcy12YWxpZGF0b3IvY2hlY2snKTtcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbmNvbnN0IGlzQXV0aCA9IHJlcXVpcmUoJy4uL21pZGRsZXdhcmUvaXMtYXV0aCcpO1xuXG5jb25zdCBzZW1pbmFyeUNvbnRyb2xsZXIgPSByZXF1aXJlKCcuLi9jb250cm9sbGVycy9zZW1pbmFyeScpO1xuXG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuY29uc3QgbXVsdGVyID0gcmVxdWlyZSgnbXVsdGVyJyk7XG5jb25zdCB1dWlkdjQgPSByZXF1aXJlKCd1dWlkL3Y0Jyk7XG5cbmNvbnN0IHN0b3JhZ2UgPSBtdWx0ZXIuZGlza1N0b3JhZ2Uoe1xuICAgIGRlc3RpbmF0aW9uIDogKHJlcSwgZmlsZSwgY2FsbGJhY2spID0+IHtcbiAgICAgICAgY2FsbGJhY2sobnVsbCwgJ3B1YmxpYy9pbWFnZXMnKTtcbiAgICB9LFxuICAgIGZpbGVuYW1lIDogKHJlcSwgZmlsZSwgY2FsbGJhY2spID0+IHtcbiAgICAgICAgLy9jYWxsYmFjayhudWxsLCBEYXRlLm5vdygpICsgJy0nICsgZmlsZS5vcmlnaW5hbG5hbWUpO1xuICAgICAgICBjYWxsYmFjayhudWxsLCB1dWlkdjQoKSArIHBhdGguZXh0bmFtZShmaWxlLm9yaWdpbmFsbmFtZSkpO1xuICAgIH0sXG59KTtcblxuY29uc3QgZmlsZUZpbHRlciA9ICgocmVxLCBmaWxlLCBjYWxsYmFjaykgPT4ge1xuICAgIGlmKGZpbGUubWltZXR5cGUgPT0gJ2ltYWdlL3BuZycgfHwgZmlsZS5taW1ldHlwZSA9PSAnaW1hZ2UvanBnJyB8fCBmaWxlLm1pbWV0eXBlID09ICdpbWFnZS9qcGVnJykge1xuICAgICAgICBjYWxsYmFjayhudWxsLCB0cnVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXEuZmlsZVZhbGlkYXRpb25FcnJvciA9IFwiRXN0ZW5zaW9uZSBub24gY29uc2VudGl0YSBzb2xvOiAnaW1hZ2UvanBnJyB8ICdpbWFnZS9wbmcnIHwgJ2ltYWdlL2pwZWcnXCI7XG4gICAgICAgIGNhbGxiYWNrKG51bGwsIGZhbHNlKTtcbiAgICB9XG59KTtcblxudmFyIHVwbG9hZCA9IG11bHRlcih7IHN0b3JhZ2UgOiBzdG9yYWdlLCBmaWxlRmlsdGVyIDogZmlsZUZpbHRlcn0pO1xuXG52YXIgY3BVcGxvYWQgPSB1cGxvYWQuc2luZ2xlKCdpbWFnZScpO1xuXG5yb3V0ZXIuZ2V0KCcvc2VtaW5hcnknLCBzZW1pbmFyeUNvbnRyb2xsZXIuZ2V0U2VtaW5hcmllcyk7XG5yb3V0ZXIuZ2V0KCcvc2VtaW5hcnkvc2VhcmNoJywgc2VtaW5hcnlDb250cm9sbGVyLnNlYXJjaFNlbWluYXJ5KTtcbnJvdXRlci5nZXQoJy9zZW1pbmFyeS86aWQnLCBzZW1pbmFyeUNvbnRyb2xsZXIuZ2V0U2VtaW5hcnkpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "seminary.js"
      ],
      "names": [
        "express",
        "require",
        "body",
        "query",
        "router",
        "Router",
        "isAuth",
        "seminaryController",
        "path",
        "multer",
        "uuidv4",
        "storage",
        "diskStorage",
        "destination",
        "req",
        "file",
        "callback",
        "filename",
        "extname",
        "originalname",
        "fileFilter",
        "mimetype",
        "fileValidationError",
        "upload",
        "cpUpload",
        "single",
        "get",
        "getSeminaries",
        "searchSeminary",
        "getSeminary",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;eACwBA,OAAO,CAAC,yBAAD,C;IAAvBC,I,YAAAA,I;IAAMC,K,YAAAA,K;;AACd,IAAMC,MAAM,GAAGJ,OAAO,CAACK,MAAR,EAAf;;AAEA,IAAMC,MAAM,GAAGL,OAAO,CAAC,uBAAD,CAAtB;;AAEA,IAAMM,kBAAkB,GAAGN,OAAO,CAAC,yBAAD,CAAlC;;AAEA,IAAMO,IAAI,GAAGP,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMQ,MAAM,GAAGR,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMS,MAAM,GAAGT,OAAO,CAAC,SAAD,CAAtB;;AAEA,IAAMU,OAAO,GAAGF,MAAM,CAACG,WAAP,CAAmB;AAC/BC,EAAAA,WAAW,EAAG,qBAACC,GAAD,EAAMC,IAAN,EAAYC,QAAZ,EAAyB;AACnCA,IAAAA,QAAQ,CAAC,IAAD,EAAO,eAAP,CAAR;AACH,GAH8B;AAI/BC,EAAAA,QAAQ,EAAG,kBAACH,GAAD,EAAMC,IAAN,EAAYC,QAAZ,EAAyB;AAChC;AACAA,IAAAA,QAAQ,CAAC,IAAD,EAAON,MAAM,KAAKF,IAAI,CAACU,OAAL,CAAaH,IAAI,CAACI,YAAlB,CAAlB,CAAR;AACH;AAP8B,CAAnB,CAAhB;;AAUA,IAAMC,UAAU,GAAI,SAAdA,UAAc,CAACN,GAAD,EAAMC,IAAN,EAAYC,QAAZ,EAAyB;AACzC,MAAGD,IAAI,CAACM,QAAL,IAAiB,WAAjB,IAAgCN,IAAI,CAACM,QAAL,IAAiB,WAAjD,IAAgEN,IAAI,CAACM,QAAL,IAAiB,YAApF,EAAkG;AAC9FL,IAAAA,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAR;AACH,GAFD,MAEO;AACHF,IAAAA,GAAG,CAACQ,mBAAJ,GAA0B,0EAA1B;AACAN,IAAAA,QAAQ,CAAC,IAAD,EAAO,KAAP,CAAR;AACH;AACJ,CAPD;;AASA,IAAIO,MAAM,GAAGd,MAAM,CAAC;AAAEE,EAAAA,OAAO,EAAGA,OAAZ;AAAqBS,EAAAA,UAAU,EAAGA;AAAlC,CAAD,CAAnB;AAEA,IAAII,QAAQ,GAAGD,MAAM,CAACE,MAAP,CAAc,OAAd,CAAf;AAEArB,MAAM,CAACsB,GAAP,CAAW,WAAX,EAAwBnB,kBAAkB,CAACoB,aAA3C;AACAvB,MAAM,CAACsB,GAAP,CAAW,kBAAX,EAA+BnB,kBAAkB,CAACqB,cAAlD;AACAxB,MAAM,CAACsB,GAAP,CAAW,eAAX,EAA4BnB,kBAAkB,CAACsB,WAA/C;AAEAC,MAAM,CAACC,OAAP,GAAiB3B,MAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes",
      "sourcesContent": [
        "const express = require('express');\nconst { body, query } = require('express-validator/check');\nconst router = express.Router();\n\nconst isAuth = require('../middleware/is-auth');\n\nconst seminaryController = require('../controllers/seminary');\n\nconst path = require('path');\nconst multer = require('multer');\nconst uuidv4 = require('uuid/v4');\n\nconst storage = multer.diskStorage({\n    destination : (req, file, callback) => {\n        callback(null, 'public/images');\n    },\n    filename : (req, file, callback) => {\n        //callback(null, Date.now() + '-' + file.originalname);\n        callback(null, uuidv4() + path.extname(file.originalname));\n    },\n});\n\nconst fileFilter = ((req, file, callback) => {\n    if(file.mimetype == 'image/png' || file.mimetype == 'image/jpg' || file.mimetype == 'image/jpeg') {\n        callback(null, true);\n    } else {\n        req.fileValidationError = \"Estensione non consentita solo: 'image/jpg' | 'image/png' | 'image/jpeg'\";\n        callback(null, false);\n    }\n});\n\nvar upload = multer({ storage : storage, fileFilter : fileFilter});\n\nvar cpUpload = upload.single('image');\n\nrouter.get('/seminary', seminaryController.getSeminaries);\nrouter.get('/seminary/search', seminaryController.searchSeminary);\nrouter.get('/seminary/:id', seminaryController.getSeminary);\n\nmodule.exports = router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1577442390794
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers/seminary.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers/seminary.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers/seminary.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers/seminary.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers",
        "sourceFileName": "seminary.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _require = require('express-validator/check'),\n    validationResult = _require.validationResult;\n\nvar Sequelize = require('sequelize');\n\nvar Op = Sequelize.Op;\n\nvar path = require('path');\n\nvar fs = require('fs');\n\nvar Seminary = require('../models/seminary');\n\nvar User = require('../models/user');\n\nexports.getSeminaries = function (req, res, next) {\n  Seminary.findAll().then(function (seminaries) {\n    var promises = [];\n    seminaries.forEach(function (seminary) {\n      var seminaryWithArtisticEvents = seminary.getArtisticevents().then(function (artisticevents) {\n        seminary.dataValues.artisticevents = artisticevents;\n      }).then(function () {\n        return seminary;\n      });\n      promises.push(seminaryWithArtisticEvents);\n    });\n    return Promise.all(promises);\n  }).then(function (seminaries) {\n    res.json({\n      seminaries: seminaries\n    });\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\n\nexports.getSeminary = function (req, res, next) {\n  var seminaryId = req.params.id;\n  Seminary.findByPk(seminaryId).then(function (seminary) {\n    if (!seminary) {\n      res.status(404).json({\n        messages: 'Seminary Not Found'\n      });\n    }\n\n    var promises = [];\n    var seminaryWithArtisticEvents = seminary.getArtisticevents().then(function (artisticevents) {\n      seminary.dataValues.artisticevents = artisticevents;\n    }).then(function () {\n      return seminary;\n    });\n    promises.push(seminaryWithArtisticEvents);\n    return Promise.all(promises);\n  }).then(function (seminary) {\n    res.json({\n      seminary: seminary\n    });\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\n\nexports.searchSeminary = function (req, res, next) {\n  var title = '%' + req.query.title + '%';\n  Seminary.findAll({\n    where: {\n      title: _defineProperty({}, Op.like, title)\n    }\n  }).then(function (seminaries) {\n    var promises = [];\n    seminaries.forEach(function (seminary) {\n      var seminaryWithArtisticEvents = seminary.getArtisticevents().then(function (artisticevents) {\n        seminary.dataValues.artisticevents = artisticevents;\n      }).then(function () {\n        return seminary;\n      });\n      promises.push(seminaryWithArtisticEvents);\n    });\n    return Promise.all(promises);\n  }).then(function (seminaries) {\n    res.json({\n      seminaries: seminaries\n    });\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlbWluYXJ5LmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJ2YWxpZGF0aW9uUmVzdWx0IiwiU2VxdWVsaXplIiwiT3AiLCJwYXRoIiwiZnMiLCJTZW1pbmFyeSIsIlVzZXIiLCJleHBvcnRzIiwiZ2V0U2VtaW5hcmllcyIsInJlcSIsInJlcyIsIm5leHQiLCJmaW5kQWxsIiwidGhlbiIsInNlbWluYXJpZXMiLCJwcm9taXNlcyIsImZvckVhY2giLCJzZW1pbmFyeSIsInNlbWluYXJ5V2l0aEFydGlzdGljRXZlbnRzIiwiZ2V0QXJ0aXN0aWNldmVudHMiLCJhcnRpc3RpY2V2ZW50cyIsImRhdGFWYWx1ZXMiLCJwdXNoIiwiUHJvbWlzZSIsImFsbCIsImpzb24iLCJlcnIiLCJjb25zb2xlIiwibG9nIiwiZ2V0U2VtaW5hcnkiLCJzZW1pbmFyeUlkIiwicGFyYW1zIiwiaWQiLCJmaW5kQnlQayIsInN0YXR1cyIsIm1lc3NhZ2VzIiwic2VhcmNoU2VtaW5hcnkiLCJ0aXRsZSIsInF1ZXJ5Iiwid2hlcmUiLCJsaWtlIl0sIm1hcHBpbmdzIjoiOzs7O2VBQTZCQSxPQUFPLENBQUMseUJBQUQsQztJQUE1QkMsZ0IsWUFBQUEsZ0I7O0FBQ1IsSUFBTUMsU0FBUyxHQUFHRixPQUFPLENBQUMsV0FBRCxDQUF6Qjs7QUFDQSxJQUFNRyxFQUFFLEdBQUdELFNBQVMsQ0FBQ0MsRUFBckI7O0FBQ0EsSUFBTUMsSUFBSSxHQUFHSixPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxJQUFNSyxFQUFFLEdBQUdMLE9BQU8sQ0FBQyxJQUFELENBQWxCOztBQUVBLElBQU1NLFFBQVEsR0FBR04sT0FBTyxDQUFDLG9CQUFELENBQXhCOztBQUNBLElBQU1PLElBQUksR0FBR1AsT0FBTyxDQUFDLGdCQUFELENBQXBCOztBQUVBUSxPQUFPLENBQUNDLGFBQVIsR0FBd0IsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsRUFBb0I7QUFDeENOLEVBQUFBLFFBQVEsQ0FBQ08sT0FBVCxHQUNDQyxJQURELENBQ00sVUFBQUMsVUFBVSxFQUFJO0FBQ2hCLFFBQUlDLFFBQVEsR0FBRyxFQUFmO0FBQ0FELElBQUFBLFVBQVUsQ0FBQ0UsT0FBWCxDQUFtQixVQUFBQyxRQUFRLEVBQUk7QUFDL0IsVUFBTUMsMEJBQTBCLEdBQUdELFFBQVEsQ0FBQ0UsaUJBQVQsR0FDM0JOLElBRDJCLENBQ3RCLFVBQUFPLGNBQWMsRUFBSTtBQUNuQkgsUUFBQUEsUUFBUSxDQUFDSSxVQUFULENBQW9CRCxjQUFwQixHQUFxQ0EsY0FBckM7QUFDSCxPQUgwQixFQUkzQlAsSUFKMkIsQ0FJdEIsWUFBTTtBQUNYLGVBQU9JLFFBQVA7QUFDQSxPQU4yQixDQUFuQztBQU9BRixNQUFBQSxRQUFRLENBQUNPLElBQVQsQ0FBY0osMEJBQWQ7QUFDQyxLQVREO0FBVUEsV0FBT0ssT0FBTyxDQUFDQyxHQUFSLENBQVlULFFBQVosQ0FBUDtBQUNILEdBZEQsRUFjR0YsSUFkSCxDQWNRLFVBQUNDLFVBQUQsRUFBZ0I7QUFDcEJKLElBQUFBLEdBQUcsQ0FBQ2UsSUFBSixDQUFTO0FBQUNYLE1BQUFBLFVBQVUsRUFBR0E7QUFBZCxLQUFUO0FBQ0gsR0FoQkQsV0FpQkksVUFBQVksR0FBRztBQUFBLFdBQUlDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixHQUFaLENBQUo7QUFBQSxHQWpCUDtBQW1CSCxDQXBCRDs7QUFzQkFuQixPQUFPLENBQUNzQixXQUFSLEdBQXNCLFVBQUNwQixHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFvQjtBQUN0QyxNQUFNbUIsVUFBVSxHQUFHckIsR0FBRyxDQUFDc0IsTUFBSixDQUFXQyxFQUE5QjtBQUNBM0IsRUFBQUEsUUFBUSxDQUFDNEIsUUFBVCxDQUFrQkgsVUFBbEIsRUFDQ2pCLElBREQsQ0FDTSxVQUFBSSxRQUFRLEVBQUk7QUFDZCxRQUFHLENBQUNBLFFBQUosRUFBYztBQUNWUCxNQUFBQSxHQUFHLENBQUN3QixNQUFKLENBQVcsR0FBWCxFQUFnQlQsSUFBaEIsQ0FBcUI7QUFDakJVLFFBQUFBLFFBQVEsRUFBRztBQURNLE9BQXJCO0FBR0g7O0FBQ0QsUUFBSXBCLFFBQVEsR0FBRyxFQUFmO0FBQ0EsUUFBTUcsMEJBQTBCLEdBQUdELFFBQVEsQ0FBQ0UsaUJBQVQsR0FDbENOLElBRGtDLENBQzdCLFVBQUFPLGNBQWMsRUFBSTtBQUNwQkgsTUFBQUEsUUFBUSxDQUFDSSxVQUFULENBQW9CRCxjQUFwQixHQUFxQ0EsY0FBckM7QUFDRixLQUhpQyxFQUlsQ1AsSUFKa0MsQ0FJN0IsWUFBTTtBQUNQLGFBQU9JLFFBQVA7QUFDSixLQU5rQyxDQUFuQztBQU9BRixJQUFBQSxRQUFRLENBQUNPLElBQVQsQ0FBY0osMEJBQWQ7QUFDQSxXQUFPSyxPQUFPLENBQUNDLEdBQVIsQ0FBWVQsUUFBWixDQUFQO0FBQ0MsR0FqQkwsRUFpQk9GLElBakJQLENBaUJZLFVBQUNJLFFBQUQsRUFBYztBQUNsQlAsSUFBQUEsR0FBRyxDQUFDZSxJQUFKLENBQVM7QUFBQ1IsTUFBQUEsUUFBUSxFQUFHQTtBQUFaLEtBQVQ7QUFDSCxHQW5CTCxXQW9CUSxVQUFBUyxHQUFHO0FBQUEsV0FBSUMsT0FBTyxDQUFDQyxHQUFSLENBQVlGLEdBQVosQ0FBSjtBQUFBLEdBcEJYO0FBc0JILENBeEJEOztBQTBCQW5CLE9BQU8sQ0FBQzZCLGNBQVIsR0FBeUIsVUFBQzNCLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEVBQW9CO0FBQ3pDLE1BQU0wQixLQUFLLEdBQUcsTUFBTTVCLEdBQUcsQ0FBQzZCLEtBQUosQ0FBVUQsS0FBaEIsR0FBd0IsR0FBdEM7QUFDQWhDLEVBQUFBLFFBQVEsQ0FBQ08sT0FBVCxDQUFpQjtBQUFDMkIsSUFBQUEsS0FBSyxFQUFHO0FBQUNGLE1BQUFBLEtBQUssc0JBQUtuQyxFQUFFLENBQUNzQyxJQUFSLEVBQWdCSCxLQUFoQjtBQUFOO0FBQVQsR0FBakIsRUFDQ3hCLElBREQsQ0FDTSxVQUFBQyxVQUFVLEVBQUk7QUFDaEIsUUFBSUMsUUFBUSxHQUFHLEVBQWY7QUFDQUQsSUFBQUEsVUFBVSxDQUFDRSxPQUFYLENBQW1CLFVBQUFDLFFBQVEsRUFBSTtBQUMvQixVQUFNQywwQkFBMEIsR0FBR0QsUUFBUSxDQUFDRSxpQkFBVCxHQUMzQk4sSUFEMkIsQ0FDdEIsVUFBQU8sY0FBYyxFQUFJO0FBQ25CSCxRQUFBQSxRQUFRLENBQUNJLFVBQVQsQ0FBb0JELGNBQXBCLEdBQXFDQSxjQUFyQztBQUNILE9BSDBCLEVBSTNCUCxJQUoyQixDQUl0QixZQUFNO0FBQ1gsZUFBT0ksUUFBUDtBQUNBLE9BTjJCLENBQW5DO0FBT0FGLE1BQUFBLFFBQVEsQ0FBQ08sSUFBVCxDQUFjSiwwQkFBZDtBQUNDLEtBVEQ7QUFVQSxXQUFPSyxPQUFPLENBQUNDLEdBQVIsQ0FBWVQsUUFBWixDQUFQO0FBQ0gsR0FkRCxFQWNHRixJQWRILENBY1EsVUFBQ0MsVUFBRCxFQUFnQjtBQUNoQkosSUFBQUEsR0FBRyxDQUFDZSxJQUFKLENBQVM7QUFBQ1gsTUFBQUEsVUFBVSxFQUFHQTtBQUFkLEtBQVQ7QUFDUCxHQWhCRCxXQWlCUSxVQUFBWSxHQUFHO0FBQUEsV0FBSUMsT0FBTyxDQUFDQyxHQUFSLENBQVlGLEdBQVosQ0FBSjtBQUFBLEdBakJYO0FBbUJILENBckJEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9BbGVzc2FuZHJvX011c29saW5vL0Rlc2t0b3AvRHJlYW1MYW5kRmVzdGl2YWwvY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IHZhbGlkYXRpb25SZXN1bHQgfSA9IHJlcXVpcmUoJ2V4cHJlc3MtdmFsaWRhdG9yL2NoZWNrJyk7XG5jb25zdCBTZXF1ZWxpemUgPSByZXF1aXJlKCdzZXF1ZWxpemUnKTtcbmNvbnN0IE9wID0gU2VxdWVsaXplLk9wO1xuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKTtcblxuY29uc3QgU2VtaW5hcnkgPSByZXF1aXJlKCcuLi9tb2RlbHMvc2VtaW5hcnknKTtcbmNvbnN0IFVzZXIgPSByZXF1aXJlKCcuLi9tb2RlbHMvdXNlcicpO1xuXG5leHBvcnRzLmdldFNlbWluYXJpZXMgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBTZW1pbmFyeS5maW5kQWxsKClcbiAgICAudGhlbihzZW1pbmFyaWVzID0+IHtcbiAgICAgICAgdmFyIHByb21pc2VzID0gW107XG4gICAgICAgIHNlbWluYXJpZXMuZm9yRWFjaChzZW1pbmFyeSA9PiB7XG4gICAgICAgIGNvbnN0IHNlbWluYXJ5V2l0aEFydGlzdGljRXZlbnRzID0gc2VtaW5hcnkuZ2V0QXJ0aXN0aWNldmVudHMoKVxuICAgICAgICAgICAgICAgLnRoZW4oYXJ0aXN0aWNldmVudHMgPT4ge1xuICAgICAgICAgICAgICAgICAgICBzZW1pbmFyeS5kYXRhVmFsdWVzLmFydGlzdGljZXZlbnRzID0gYXJ0aXN0aWNldmVudHM7XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gc2VtaW5hcnk7XG4gICAgICAgICAgICAgICB9KTtcbiAgICAgICAgcHJvbWlzZXMucHVzaChzZW1pbmFyeVdpdGhBcnRpc3RpY0V2ZW50cyk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5hbGwocHJvbWlzZXMpO1xuICAgIH0pLnRoZW4oKHNlbWluYXJpZXMpID0+IHtcbiAgICAgICAgcmVzLmpzb24oe3NlbWluYXJpZXMgOiBzZW1pbmFyaWVzfSk7XG4gICAgfSkuY2F0Y2goXG4gICAgICAgIGVyciA9PiBjb25zb2xlLmxvZyhlcnIpXG4gICAgKTtcbn07XG5cbmV4cG9ydHMuZ2V0U2VtaW5hcnkgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBjb25zdCBzZW1pbmFyeUlkID0gcmVxLnBhcmFtcy5pZDtcbiAgICBTZW1pbmFyeS5maW5kQnlQayhzZW1pbmFyeUlkKVxuICAgIC50aGVuKHNlbWluYXJ5ID0+IHtcbiAgICAgICAgaWYoIXNlbWluYXJ5KSB7XG4gICAgICAgICAgICByZXMuc3RhdHVzKDQwNCkuanNvbih7XG4gICAgICAgICAgICAgICAgbWVzc2FnZXMgOiAnU2VtaW5hcnkgTm90IEZvdW5kJyxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHZhciBwcm9taXNlcyA9IFtdO1xuICAgICAgICBjb25zdCBzZW1pbmFyeVdpdGhBcnRpc3RpY0V2ZW50cyA9IHNlbWluYXJ5LmdldEFydGlzdGljZXZlbnRzKClcbiAgICAgICAgLnRoZW4oYXJ0aXN0aWNldmVudHMgPT4ge1xuICAgICAgICAgICAgc2VtaW5hcnkuZGF0YVZhbHVlcy5hcnRpc3RpY2V2ZW50cyA9IGFydGlzdGljZXZlbnRzO1xuICAgICAgICAgfSlcbiAgICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgIHJldHVybiBzZW1pbmFyeTtcbiAgICAgICAgfSk7XG4gICAgICAgIHByb21pc2VzLnB1c2goc2VtaW5hcnlXaXRoQXJ0aXN0aWNFdmVudHMpO1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5hbGwocHJvbWlzZXMpO1xuICAgICAgICB9KS50aGVuKChzZW1pbmFyeSkgPT4ge1xuICAgICAgICAgICAgcmVzLmpzb24oe3NlbWluYXJ5IDogc2VtaW5hcnl9KTtcbiAgICAgICAgfSkuY2F0Y2goXG4gICAgICAgICAgICBlcnIgPT4gY29uc29sZS5sb2coZXJyKVxuICAgICAgICApO1xufTtcblxuZXhwb3J0cy5zZWFyY2hTZW1pbmFyeSA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIGNvbnN0IHRpdGxlID0gJyUnICsgcmVxLnF1ZXJ5LnRpdGxlICsgJyUnO1xuICAgIFNlbWluYXJ5LmZpbmRBbGwoe3doZXJlIDoge3RpdGxlIDoge1tPcC5saWtlXSA6IHRpdGxlfX19KVxuICAgIC50aGVuKHNlbWluYXJpZXMgPT4ge1xuICAgICAgICB2YXIgcHJvbWlzZXMgPSBbXTtcbiAgICAgICAgc2VtaW5hcmllcy5mb3JFYWNoKHNlbWluYXJ5ID0+IHtcbiAgICAgICAgY29uc3Qgc2VtaW5hcnlXaXRoQXJ0aXN0aWNFdmVudHMgPSBzZW1pbmFyeS5nZXRBcnRpc3RpY2V2ZW50cygpXG4gICAgICAgICAgICAgICAudGhlbihhcnRpc3RpY2V2ZW50cyA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHNlbWluYXJ5LmRhdGFWYWx1ZXMuYXJ0aXN0aWNldmVudHMgPSBhcnRpc3RpY2V2ZW50cztcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiBzZW1pbmFyeTtcbiAgICAgICAgICAgICAgIH0pO1xuICAgICAgICBwcm9taXNlcy5wdXNoKHNlbWluYXJ5V2l0aEFydGlzdGljRXZlbnRzKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBQcm9taXNlLmFsbChwcm9taXNlcyk7XG4gICAgfSkudGhlbigoc2VtaW5hcmllcykgPT4ge1xuICAgICAgICAgICAgcmVzLmpzb24oe3NlbWluYXJpZXMgOiBzZW1pbmFyaWVzfSk7XG4gICAgfSkuY2F0Y2goXG4gICAgICAgICAgICBlcnIgPT4gY29uc29sZS5sb2coZXJyKVxuICAgICk7XG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "seminary.js"
      ],
      "names": [
        "require",
        "validationResult",
        "Sequelize",
        "Op",
        "path",
        "fs",
        "Seminary",
        "User",
        "exports",
        "getSeminaries",
        "req",
        "res",
        "next",
        "findAll",
        "then",
        "seminaries",
        "promises",
        "forEach",
        "seminary",
        "seminaryWithArtisticEvents",
        "getArtisticevents",
        "artisticevents",
        "dataValues",
        "push",
        "Promise",
        "all",
        "json",
        "err",
        "console",
        "log",
        "getSeminary",
        "seminaryId",
        "params",
        "id",
        "findByPk",
        "status",
        "messages",
        "searchSeminary",
        "title",
        "query",
        "where",
        "like"
      ],
      "mappings": ";;;;eAA6BA,OAAO,CAAC,yBAAD,C;IAA5BC,gB,YAAAA,gB;;AACR,IAAMC,SAAS,GAAGF,OAAO,CAAC,WAAD,CAAzB;;AACA,IAAMG,EAAE,GAAGD,SAAS,CAACC,EAArB;;AACA,IAAMC,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMK,EAAE,GAAGL,OAAO,CAAC,IAAD,CAAlB;;AAEA,IAAMM,QAAQ,GAAGN,OAAO,CAAC,oBAAD,CAAxB;;AACA,IAAMO,IAAI,GAAGP,OAAO,CAAC,gBAAD,CAApB;;AAEAQ,OAAO,CAACC,aAAR,GAAwB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxCN,EAAAA,QAAQ,CAACO,OAAT,GACCC,IADD,CACM,UAAAC,UAAU,EAAI;AAChB,QAAIC,QAAQ,GAAG,EAAf;AACAD,IAAAA,UAAU,CAACE,OAAX,CAAmB,UAAAC,QAAQ,EAAI;AAC/B,UAAMC,0BAA0B,GAAGD,QAAQ,CAACE,iBAAT,GAC3BN,IAD2B,CACtB,UAAAO,cAAc,EAAI;AACnBH,QAAAA,QAAQ,CAACI,UAAT,CAAoBD,cAApB,GAAqCA,cAArC;AACH,OAH0B,EAI3BP,IAJ2B,CAItB,YAAM;AACX,eAAOI,QAAP;AACA,OAN2B,CAAnC;AAOAF,MAAAA,QAAQ,CAACO,IAAT,CAAcJ,0BAAd;AACC,KATD;AAUA,WAAOK,OAAO,CAACC,GAAR,CAAYT,QAAZ,CAAP;AACH,GAdD,EAcGF,IAdH,CAcQ,UAACC,UAAD,EAAgB;AACpBJ,IAAAA,GAAG,CAACe,IAAJ,CAAS;AAACX,MAAAA,UAAU,EAAGA;AAAd,KAAT;AACH,GAhBD,WAiBI,UAAAY,GAAG;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,GAjBP;AAmBH,CApBD;;AAsBAnB,OAAO,CAACsB,WAAR,GAAsB,UAACpB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACtC,MAAMmB,UAAU,GAAGrB,GAAG,CAACsB,MAAJ,CAAWC,EAA9B;AACA3B,EAAAA,QAAQ,CAAC4B,QAAT,CAAkBH,UAAlB,EACCjB,IADD,CACM,UAAAI,QAAQ,EAAI;AACd,QAAG,CAACA,QAAJ,EAAc;AACVP,MAAAA,GAAG,CAACwB,MAAJ,CAAW,GAAX,EAAgBT,IAAhB,CAAqB;AACjBU,QAAAA,QAAQ,EAAG;AADM,OAArB;AAGH;;AACD,QAAIpB,QAAQ,GAAG,EAAf;AACA,QAAMG,0BAA0B,GAAGD,QAAQ,CAACE,iBAAT,GAClCN,IADkC,CAC7B,UAAAO,cAAc,EAAI;AACpBH,MAAAA,QAAQ,CAACI,UAAT,CAAoBD,cAApB,GAAqCA,cAArC;AACF,KAHiC,EAIlCP,IAJkC,CAI7B,YAAM;AACP,aAAOI,QAAP;AACJ,KANkC,CAAnC;AAOAF,IAAAA,QAAQ,CAACO,IAAT,CAAcJ,0BAAd;AACA,WAAOK,OAAO,CAACC,GAAR,CAAYT,QAAZ,CAAP;AACC,GAjBL,EAiBOF,IAjBP,CAiBY,UAACI,QAAD,EAAc;AAClBP,IAAAA,GAAG,CAACe,IAAJ,CAAS;AAACR,MAAAA,QAAQ,EAAGA;AAAZ,KAAT;AACH,GAnBL,WAoBQ,UAAAS,GAAG;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,GApBX;AAsBH,CAxBD;;AA0BAnB,OAAO,CAAC6B,cAAR,GAAyB,UAAC3B,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACzC,MAAM0B,KAAK,GAAG,MAAM5B,GAAG,CAAC6B,KAAJ,CAAUD,KAAhB,GAAwB,GAAtC;AACAhC,EAAAA,QAAQ,CAACO,OAAT,CAAiB;AAAC2B,IAAAA,KAAK,EAAG;AAACF,MAAAA,KAAK,sBAAKnC,EAAE,CAACsC,IAAR,EAAgBH,KAAhB;AAAN;AAAT,GAAjB,EACCxB,IADD,CACM,UAAAC,UAAU,EAAI;AAChB,QAAIC,QAAQ,GAAG,EAAf;AACAD,IAAAA,UAAU,CAACE,OAAX,CAAmB,UAAAC,QAAQ,EAAI;AAC/B,UAAMC,0BAA0B,GAAGD,QAAQ,CAACE,iBAAT,GAC3BN,IAD2B,CACtB,UAAAO,cAAc,EAAI;AACnBH,QAAAA,QAAQ,CAACI,UAAT,CAAoBD,cAApB,GAAqCA,cAArC;AACH,OAH0B,EAI3BP,IAJ2B,CAItB,YAAM;AACX,eAAOI,QAAP;AACA,OAN2B,CAAnC;AAOAF,MAAAA,QAAQ,CAACO,IAAT,CAAcJ,0BAAd;AACC,KATD;AAUA,WAAOK,OAAO,CAACC,GAAR,CAAYT,QAAZ,CAAP;AACH,GAdD,EAcGF,IAdH,CAcQ,UAACC,UAAD,EAAgB;AAChBJ,IAAAA,GAAG,CAACe,IAAJ,CAAS;AAACX,MAAAA,UAAU,EAAGA;AAAd,KAAT;AACP,GAhBD,WAiBQ,UAAAY,GAAG;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,GAjBX;AAmBH,CArBD",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers",
      "sourcesContent": [
        "const { validationResult } = require('express-validator/check');\nconst Sequelize = require('sequelize');\nconst Op = Sequelize.Op;\nconst path = require('path');\nconst fs = require('fs');\n\nconst Seminary = require('../models/seminary');\nconst User = require('../models/user');\n\nexports.getSeminaries = (req, res, next) => {\n    Seminary.findAll()\n    .then(seminaries => {\n        var promises = [];\n        seminaries.forEach(seminary => {\n        const seminaryWithArtisticEvents = seminary.getArtisticevents()\n               .then(artisticevents => {\n                    seminary.dataValues.artisticevents = artisticevents;\n                })\n               .then(() => {\n                return seminary;\n               });\n        promises.push(seminaryWithArtisticEvents);\n        });\n        return Promise.all(promises);\n    }).then((seminaries) => {\n        res.json({seminaries : seminaries});\n    }).catch(\n        err => console.log(err)\n    );\n};\n\nexports.getSeminary = (req, res, next) => {\n    const seminaryId = req.params.id;\n    Seminary.findByPk(seminaryId)\n    .then(seminary => {\n        if(!seminary) {\n            res.status(404).json({\n                messages : 'Seminary Not Found',\n            });\n        }\n        var promises = [];\n        const seminaryWithArtisticEvents = seminary.getArtisticevents()\n        .then(artisticevents => {\n            seminary.dataValues.artisticevents = artisticevents;\n         })\n        .then(() => {\n             return seminary;\n        });\n        promises.push(seminaryWithArtisticEvents);\n        return Promise.all(promises);\n        }).then((seminary) => {\n            res.json({seminary : seminary});\n        }).catch(\n            err => console.log(err)\n        );\n};\n\nexports.searchSeminary = (req, res, next) => {\n    const title = '%' + req.query.title + '%';\n    Seminary.findAll({where : {title : {[Op.like] : title}}})\n    .then(seminaries => {\n        var promises = [];\n        seminaries.forEach(seminary => {\n        const seminaryWithArtisticEvents = seminary.getArtisticevents()\n               .then(artisticevents => {\n                    seminary.dataValues.artisticevents = artisticevents;\n                })\n               .then(() => {\n                return seminary;\n               });\n        promises.push(seminaryWithArtisticEvents);\n        });\n        return Promise.all(promises);\n    }).then((seminaries) => {\n            res.json({seminaries : seminaries});\n    }).catch(\n            err => console.log(err)\n    );\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1577794666511
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/seminary.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/seminary.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/seminary.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/seminary.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models",
        "sourceFileName": "seminary.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar Sequelize = require('sequelize');\n\nvar sequelize = require('../utils/database');\n\nvar Seminary = sequelize.define('seminary', {\n  id: {\n    type: Sequelize.INTEGER,\n    autoIncrement: true,\n    allowNull: false,\n    primaryKey: true\n  },\n  title: {\n    type: Sequelize.STRING,\n    allowNull: false\n  },\n  date: {\n    type: Sequelize.STRING,\n    allowNull: true\n  },\n  location: {\n    type: Sequelize.STRING,\n    allowNull: true\n  }\n});\nmodule.exports = Seminary;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlbWluYXJ5LmpzIl0sIm5hbWVzIjpbIlNlcXVlbGl6ZSIsInJlcXVpcmUiLCJzZXF1ZWxpemUiLCJTZW1pbmFyeSIsImRlZmluZSIsImlkIiwidHlwZSIsIklOVEVHRVIiLCJhdXRvSW5jcmVtZW50IiwiYWxsb3dOdWxsIiwicHJpbWFyeUtleSIsInRpdGxlIiwiU1RSSU5HIiwiZGF0ZSIsImxvY2F0aW9uIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxTQUFTLEdBQUdDLE9BQU8sQ0FBQyxXQUFELENBQXpCOztBQUVBLElBQU1DLFNBQVMsR0FBR0QsT0FBTyxDQUFDLG1CQUFELENBQXpCOztBQUVBLElBQU1FLFFBQVEsR0FBR0QsU0FBUyxDQUFDRSxNQUFWLENBQWlCLFVBQWpCLEVBQTZCO0FBQzFDQyxFQUFBQSxFQUFFLEVBQUc7QUFDREMsSUFBQUEsSUFBSSxFQUFHTixTQUFTLENBQUNPLE9BRGhCO0FBRURDLElBQUFBLGFBQWEsRUFBRyxJQUZmO0FBR0RDLElBQUFBLFNBQVMsRUFBRyxLQUhYO0FBSURDLElBQUFBLFVBQVUsRUFBRztBQUpaLEdBRHFDO0FBTzFDQyxFQUFBQSxLQUFLLEVBQUc7QUFDSkwsSUFBQUEsSUFBSSxFQUFHTixTQUFTLENBQUNZLE1BRGI7QUFFSkgsSUFBQUEsU0FBUyxFQUFHO0FBRlIsR0FQa0M7QUFXMUNJLEVBQUFBLElBQUksRUFBRztBQUNIUCxJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ1ksTUFEZDtBQUVISCxJQUFBQSxTQUFTLEVBQUc7QUFGVCxHQVhtQztBQWUxQ0ssRUFBQUEsUUFBUSxFQUFHO0FBQ1BSLElBQUFBLElBQUksRUFBR04sU0FBUyxDQUFDWSxNQURWO0FBRVBILElBQUFBLFNBQVMsRUFBRztBQUZMO0FBZitCLENBQTdCLENBQWpCO0FBcUJBTSxNQUFNLENBQUNDLE9BQVAsR0FBaUJiLFFBQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9BbGVzc2FuZHJvX011c29saW5vL0Rlc2t0b3AvRHJlYW1MYW5kRmVzdGl2YWwvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU2VxdWVsaXplID0gcmVxdWlyZSgnc2VxdWVsaXplJyk7XG5cbmNvbnN0IHNlcXVlbGl6ZSA9IHJlcXVpcmUoJy4uL3V0aWxzL2RhdGFiYXNlJyk7XG5cbmNvbnN0IFNlbWluYXJ5ID0gc2VxdWVsaXplLmRlZmluZSgnc2VtaW5hcnknLCB7XG4gICAgaWQgOiB7XG4gICAgICAgIHR5cGUgOiBTZXF1ZWxpemUuSU5URUdFUixcbiAgICAgICAgYXV0b0luY3JlbWVudCA6IHRydWUsXG4gICAgICAgIGFsbG93TnVsbCA6IGZhbHNlLFxuICAgICAgICBwcmltYXJ5S2V5IDogdHJ1ZVxuICAgIH0sXG4gICAgdGl0bGUgOiB7XG4gICAgICAgIHR5cGUgOiBTZXF1ZWxpemUuU1RSSU5HLFxuICAgICAgICBhbGxvd051bGwgOiBmYWxzZSxcbiAgICB9LFxuICAgIGRhdGUgOiB7XG4gICAgICAgIHR5cGUgOiBTZXF1ZWxpemUuU1RSSU5HLFxuICAgICAgICBhbGxvd051bGwgOiB0cnVlLFxuICAgIH0sXG4gICAgbG9jYXRpb24gOiB7XG4gICAgICAgIHR5cGUgOiBTZXF1ZWxpemUuU1RSSU5HLFxuICAgICAgICBhbGxvd051bGwgOiB0cnVlXG4gICAgfVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gU2VtaW5hcnk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "seminary.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "sequelize",
        "Seminary",
        "define",
        "id",
        "type",
        "INTEGER",
        "autoIncrement",
        "allowNull",
        "primaryKey",
        "title",
        "STRING",
        "date",
        "location",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,IAAMC,SAAS,GAAGD,OAAO,CAAC,mBAAD,CAAzB;;AAEA,IAAME,QAAQ,GAAGD,SAAS,CAACE,MAAV,CAAiB,UAAjB,EAA6B;AAC1CC,EAAAA,EAAE,EAAG;AACDC,IAAAA,IAAI,EAAGN,SAAS,CAACO,OADhB;AAEDC,IAAAA,aAAa,EAAG,IAFf;AAGDC,IAAAA,SAAS,EAAG,KAHX;AAIDC,IAAAA,UAAU,EAAG;AAJZ,GADqC;AAO1CC,EAAAA,KAAK,EAAG;AACJL,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADb;AAEJH,IAAAA,SAAS,EAAG;AAFR,GAPkC;AAW1CI,EAAAA,IAAI,EAAG;AACHP,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADd;AAEHH,IAAAA,SAAS,EAAG;AAFT,GAXmC;AAe1CK,EAAAA,QAAQ,EAAG;AACPR,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADV;AAEPH,IAAAA,SAAS,EAAG;AAFL;AAf+B,CAA7B,CAAjB;AAqBAM,MAAM,CAACC,OAAP,GAAiBb,QAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst Seminary = sequelize.define('seminary', {\n    id : {\n        type : Sequelize.INTEGER,\n        autoIncrement : true,\n        allowNull : false,\n        primaryKey : true\n    },\n    title : {\n        type : Sequelize.STRING,\n        allowNull : false,\n    },\n    date : {\n        type : Sequelize.STRING,\n        allowNull : true,\n    },\n    location : {\n        type : Sequelize.STRING,\n        allowNull : true\n    }\n});\n\nmodule.exports = Seminary;"
      ]
    },
    "sourceType": "script",
    "mtime": 1577803119054
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes/gallery.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes/gallery.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes/gallery.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes/gallery.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes",
        "sourceFileName": "gallery.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar _require = require('express-validator/check'),\n    body = _require.body,\n    query = _require.query;\n\nvar router = express.Router();\n\nvar isAuth = require('../middleware/is-auth');\n\nvar galleryController = require('../controllers/gallery');\n\nvar path = require('path');\n\nvar multer = require('multer');\n\nvar uuidv4 = require('uuid/v4');\n\nvar storage = multer.diskStorage({\n  destination: function destination(req, file, callback) {\n    callback(null, 'public/gallery');\n  },\n  filename: function filename(req, file, callback) {\n    //callback(null, Date.now() + '-' + file.originalname);\n    callback(null, uuidv4() + path.extname(file.originalname));\n  }\n});\n\nvar fileFilter = function fileFilter(req, file, callback) {\n  if (file.mimetype == 'image/png' || file.mimetype == 'image/jpg' || file.mimetype == 'image/jpeg') {\n    callback(null, true);\n  } else {\n    req.fileValidationError = \"Estensione non consentita solo: 'image/jpg' | 'image/png' | 'image/jpeg'\";\n    callback(null, false);\n  }\n};\n\nvar upload = multer({\n  storage: storage,\n  fileFilter: fileFilter\n});\nvar cpUpload = upload.fields([{\n  name: 'avatar',\n  maxCount: 1\n}, {\n  name: 'gallery',\n  maxCount: 8\n}]);\nrouter.post('/', [isAuth, cpUpload], galleryController.createGallery);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhbGxlcnkuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJib2R5IiwicXVlcnkiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJpc0F1dGgiLCJnYWxsZXJ5Q29udHJvbGxlciIsInBhdGgiLCJtdWx0ZXIiLCJ1dWlkdjQiLCJzdG9yYWdlIiwiZGlza1N0b3JhZ2UiLCJkZXN0aW5hdGlvbiIsInJlcSIsImZpbGUiLCJjYWxsYmFjayIsImZpbGVuYW1lIiwiZXh0bmFtZSIsIm9yaWdpbmFsbmFtZSIsImZpbGVGaWx0ZXIiLCJtaW1ldHlwZSIsImZpbGVWYWxpZGF0aW9uRXJyb3IiLCJ1cGxvYWQiLCJjcFVwbG9hZCIsImZpZWxkcyIsIm5hbWUiLCJtYXhDb3VudCIsInBvc3QiLCJjcmVhdGVHYWxsZXJ5IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztlQUN3QkEsT0FBTyxDQUFDLHlCQUFELEM7SUFBdkJDLEksWUFBQUEsSTtJQUFNQyxLLFlBQUFBLEs7O0FBQ2QsSUFBTUMsTUFBTSxHQUFHSixPQUFPLENBQUNLLE1BQVIsRUFBZjs7QUFFQSxJQUFNQyxNQUFNLEdBQUdMLE9BQU8sQ0FBQyx1QkFBRCxDQUF0Qjs7QUFFQSxJQUFNTSxpQkFBaUIsR0FBR04sT0FBTyxDQUFDLHdCQUFELENBQWpDOztBQUVBLElBQU1PLElBQUksR0FBR1AsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTVEsTUFBTSxHQUFHUixPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFDQSxJQUFNUyxNQUFNLEdBQUdULE9BQU8sQ0FBQyxTQUFELENBQXRCOztBQUVBLElBQU1VLE9BQU8sR0FBR0YsTUFBTSxDQUFDRyxXQUFQLENBQW1CO0FBQy9CQyxFQUFBQSxXQUFXLEVBQUcscUJBQUNDLEdBQUQsRUFBTUMsSUFBTixFQUFZQyxRQUFaLEVBQXlCO0FBQ25DQSxJQUFBQSxRQUFRLENBQUMsSUFBRCxFQUFPLGdCQUFQLENBQVI7QUFDSCxHQUg4QjtBQUkvQkMsRUFBQUEsUUFBUSxFQUFHLGtCQUFDSCxHQUFELEVBQU1DLElBQU4sRUFBWUMsUUFBWixFQUF5QjtBQUNoQztBQUNBQSxJQUFBQSxRQUFRLENBQUMsSUFBRCxFQUFPTixNQUFNLEtBQUtGLElBQUksQ0FBQ1UsT0FBTCxDQUFhSCxJQUFJLENBQUNJLFlBQWxCLENBQWxCLENBQVI7QUFDSDtBQVA4QixDQUFuQixDQUFoQjs7QUFVQSxJQUFNQyxVQUFVLEdBQUksU0FBZEEsVUFBYyxDQUFDTixHQUFELEVBQU1DLElBQU4sRUFBWUMsUUFBWixFQUF5QjtBQUN6QyxNQUFHRCxJQUFJLENBQUNNLFFBQUwsSUFBaUIsV0FBakIsSUFBZ0NOLElBQUksQ0FBQ00sUUFBTCxJQUFpQixXQUFqRCxJQUFnRU4sSUFBSSxDQUFDTSxRQUFMLElBQWlCLFlBQXBGLEVBQWtHO0FBQzlGTCxJQUFBQSxRQUFRLENBQUMsSUFBRCxFQUFPLElBQVAsQ0FBUjtBQUNILEdBRkQsTUFFTztBQUNIRixJQUFBQSxHQUFHLENBQUNRLG1CQUFKLEdBQTBCLDBFQUExQjtBQUNBTixJQUFBQSxRQUFRLENBQUMsSUFBRCxFQUFPLEtBQVAsQ0FBUjtBQUNIO0FBQ0osQ0FQRDs7QUFTQSxJQUFJTyxNQUFNLEdBQUdkLE1BQU0sQ0FBQztBQUFFRSxFQUFBQSxPQUFPLEVBQUdBLE9BQVo7QUFBcUJTLEVBQUFBLFVBQVUsRUFBR0E7QUFBbEMsQ0FBRCxDQUFuQjtBQUVBLElBQUlJLFFBQVEsR0FBR0QsTUFBTSxDQUFDRSxNQUFQLENBQWMsQ0FDekI7QUFBQ0MsRUFBQUEsSUFBSSxFQUFHLFFBQVI7QUFBa0JDLEVBQUFBLFFBQVEsRUFBRztBQUE3QixDQUR5QixFQUV6QjtBQUFDRCxFQUFBQSxJQUFJLEVBQUcsU0FBUjtBQUFtQkMsRUFBQUEsUUFBUSxFQUFHO0FBQTlCLENBRnlCLENBQWQsQ0FBZjtBQUtBdkIsTUFBTSxDQUFDd0IsSUFBUCxDQUFZLEdBQVosRUFBaUIsQ0FBQ3RCLE1BQUQsRUFBU2tCLFFBQVQsQ0FBakIsRUFBcUNqQixpQkFBaUIsQ0FBQ3NCLGFBQXZEO0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjNCLE1BQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9BbGVzc2FuZHJvX011c29saW5vL0Rlc2t0b3AvRHJlYW1MYW5kRmVzdGl2YWwvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbmNvbnN0IHsgYm9keSwgcXVlcnkgfSA9IHJlcXVpcmUoJ2V4cHJlc3MtdmFsaWRhdG9yL2NoZWNrJyk7XG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuXG5jb25zdCBpc0F1dGggPSByZXF1aXJlKCcuLi9taWRkbGV3YXJlL2lzLWF1dGgnKTtcblxuY29uc3QgZ2FsbGVyeUNvbnRyb2xsZXIgPSByZXF1aXJlKCcuLi9jb250cm9sbGVycy9nYWxsZXJ5Jyk7XG5cbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5jb25zdCBtdWx0ZXIgPSByZXF1aXJlKCdtdWx0ZXInKTtcbmNvbnN0IHV1aWR2NCA9IHJlcXVpcmUoJ3V1aWQvdjQnKTtcblxuY29uc3Qgc3RvcmFnZSA9IG11bHRlci5kaXNrU3RvcmFnZSh7XG4gICAgZGVzdGluYXRpb24gOiAocmVxLCBmaWxlLCBjYWxsYmFjaykgPT4ge1xuICAgICAgICBjYWxsYmFjayhudWxsLCAncHVibGljL2dhbGxlcnknKTtcbiAgICB9LFxuICAgIGZpbGVuYW1lIDogKHJlcSwgZmlsZSwgY2FsbGJhY2spID0+IHtcbiAgICAgICAgLy9jYWxsYmFjayhudWxsLCBEYXRlLm5vdygpICsgJy0nICsgZmlsZS5vcmlnaW5hbG5hbWUpO1xuICAgICAgICBjYWxsYmFjayhudWxsLCB1dWlkdjQoKSArIHBhdGguZXh0bmFtZShmaWxlLm9yaWdpbmFsbmFtZSkpO1xuICAgIH0sXG59KTtcblxuY29uc3QgZmlsZUZpbHRlciA9ICgocmVxLCBmaWxlLCBjYWxsYmFjaykgPT4ge1xuICAgIGlmKGZpbGUubWltZXR5cGUgPT0gJ2ltYWdlL3BuZycgfHwgZmlsZS5taW1ldHlwZSA9PSAnaW1hZ2UvanBnJyB8fCBmaWxlLm1pbWV0eXBlID09ICdpbWFnZS9qcGVnJykge1xuICAgICAgICBjYWxsYmFjayhudWxsLCB0cnVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXEuZmlsZVZhbGlkYXRpb25FcnJvciA9IFwiRXN0ZW5zaW9uZSBub24gY29uc2VudGl0YSBzb2xvOiAnaW1hZ2UvanBnJyB8ICdpbWFnZS9wbmcnIHwgJ2ltYWdlL2pwZWcnXCI7XG4gICAgICAgIGNhbGxiYWNrKG51bGwsIGZhbHNlKTtcbiAgICB9XG59KTtcblxudmFyIHVwbG9hZCA9IG11bHRlcih7IHN0b3JhZ2UgOiBzdG9yYWdlLCBmaWxlRmlsdGVyIDogZmlsZUZpbHRlcn0pO1xuXG52YXIgY3BVcGxvYWQgPSB1cGxvYWQuZmllbGRzKFtcbiAgICB7bmFtZSA6ICdhdmF0YXInLCBtYXhDb3VudCA6IDF9LFxuICAgIHtuYW1lIDogJ2dhbGxlcnknLCBtYXhDb3VudCA6IDh9XG5dKTtcblxucm91dGVyLnBvc3QoJy8nLCBbaXNBdXRoLCBjcFVwbG9hZF0sIGdhbGxlcnlDb250cm9sbGVyLmNyZWF0ZUdhbGxlcnkpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "gallery.js"
      ],
      "names": [
        "express",
        "require",
        "body",
        "query",
        "router",
        "Router",
        "isAuth",
        "galleryController",
        "path",
        "multer",
        "uuidv4",
        "storage",
        "diskStorage",
        "destination",
        "req",
        "file",
        "callback",
        "filename",
        "extname",
        "originalname",
        "fileFilter",
        "mimetype",
        "fileValidationError",
        "upload",
        "cpUpload",
        "fields",
        "name",
        "maxCount",
        "post",
        "createGallery",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;eACwBA,OAAO,CAAC,yBAAD,C;IAAvBC,I,YAAAA,I;IAAMC,K,YAAAA,K;;AACd,IAAMC,MAAM,GAAGJ,OAAO,CAACK,MAAR,EAAf;;AAEA,IAAMC,MAAM,GAAGL,OAAO,CAAC,uBAAD,CAAtB;;AAEA,IAAMM,iBAAiB,GAAGN,OAAO,CAAC,wBAAD,CAAjC;;AAEA,IAAMO,IAAI,GAAGP,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMQ,MAAM,GAAGR,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMS,MAAM,GAAGT,OAAO,CAAC,SAAD,CAAtB;;AAEA,IAAMU,OAAO,GAAGF,MAAM,CAACG,WAAP,CAAmB;AAC/BC,EAAAA,WAAW,EAAG,qBAACC,GAAD,EAAMC,IAAN,EAAYC,QAAZ,EAAyB;AACnCA,IAAAA,QAAQ,CAAC,IAAD,EAAO,gBAAP,CAAR;AACH,GAH8B;AAI/BC,EAAAA,QAAQ,EAAG,kBAACH,GAAD,EAAMC,IAAN,EAAYC,QAAZ,EAAyB;AAChC;AACAA,IAAAA,QAAQ,CAAC,IAAD,EAAON,MAAM,KAAKF,IAAI,CAACU,OAAL,CAAaH,IAAI,CAACI,YAAlB,CAAlB,CAAR;AACH;AAP8B,CAAnB,CAAhB;;AAUA,IAAMC,UAAU,GAAI,SAAdA,UAAc,CAACN,GAAD,EAAMC,IAAN,EAAYC,QAAZ,EAAyB;AACzC,MAAGD,IAAI,CAACM,QAAL,IAAiB,WAAjB,IAAgCN,IAAI,CAACM,QAAL,IAAiB,WAAjD,IAAgEN,IAAI,CAACM,QAAL,IAAiB,YAApF,EAAkG;AAC9FL,IAAAA,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAR;AACH,GAFD,MAEO;AACHF,IAAAA,GAAG,CAACQ,mBAAJ,GAA0B,0EAA1B;AACAN,IAAAA,QAAQ,CAAC,IAAD,EAAO,KAAP,CAAR;AACH;AACJ,CAPD;;AASA,IAAIO,MAAM,GAAGd,MAAM,CAAC;AAAEE,EAAAA,OAAO,EAAGA,OAAZ;AAAqBS,EAAAA,UAAU,EAAGA;AAAlC,CAAD,CAAnB;AAEA,IAAII,QAAQ,GAAGD,MAAM,CAACE,MAAP,CAAc,CACzB;AAACC,EAAAA,IAAI,EAAG,QAAR;AAAkBC,EAAAA,QAAQ,EAAG;AAA7B,CADyB,EAEzB;AAACD,EAAAA,IAAI,EAAG,SAAR;AAAmBC,EAAAA,QAAQ,EAAG;AAA9B,CAFyB,CAAd,CAAf;AAKAvB,MAAM,CAACwB,IAAP,CAAY,GAAZ,EAAiB,CAACtB,MAAD,EAASkB,QAAT,CAAjB,EAAqCjB,iBAAiB,CAACsB,aAAvD;AAEAC,MAAM,CAACC,OAAP,GAAiB3B,MAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/routes",
      "sourcesContent": [
        "const express = require('express');\nconst { body, query } = require('express-validator/check');\nconst router = express.Router();\n\nconst isAuth = require('../middleware/is-auth');\n\nconst galleryController = require('../controllers/gallery');\n\nconst path = require('path');\nconst multer = require('multer');\nconst uuidv4 = require('uuid/v4');\n\nconst storage = multer.diskStorage({\n    destination : (req, file, callback) => {\n        callback(null, 'public/gallery');\n    },\n    filename : (req, file, callback) => {\n        //callback(null, Date.now() + '-' + file.originalname);\n        callback(null, uuidv4() + path.extname(file.originalname));\n    },\n});\n\nconst fileFilter = ((req, file, callback) => {\n    if(file.mimetype == 'image/png' || file.mimetype == 'image/jpg' || file.mimetype == 'image/jpeg') {\n        callback(null, true);\n    } else {\n        req.fileValidationError = \"Estensione non consentita solo: 'image/jpg' | 'image/png' | 'image/jpeg'\";\n        callback(null, false);\n    }\n});\n\nvar upload = multer({ storage : storage, fileFilter : fileFilter});\n\nvar cpUpload = upload.fields([\n    {name : 'avatar', maxCount : 1},\n    {name : 'gallery', maxCount : 8}\n]);\n\nrouter.post('/', [isAuth, cpUpload], galleryController.createGallery);\n\nmodule.exports = router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1576678459101
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers/gallery.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers/gallery.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers/gallery.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers/gallery.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers",
        "sourceFileName": "gallery.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar path = require('path');\n\nexports.createGallery = function (req, res, next) {\n  res.status(201).json({\n    messages: 'Success Operation'\n  });\n\n  if (req.files.length == 0) {\n    return res.status(422).json({\n      message: req.fileValidationError ? req.fileValidationError : 'Nessun immagine allegata'\n    });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhbGxlcnkuanMiXSwibmFtZXMiOlsicGF0aCIsInJlcXVpcmUiLCJleHBvcnRzIiwiY3JlYXRlR2FsbGVyeSIsInJlcSIsInJlcyIsIm5leHQiLCJzdGF0dXMiLCJqc29uIiwibWVzc2FnZXMiLCJmaWxlcyIsImxlbmd0aCIsIm1lc3NhZ2UiLCJmaWxlVmFsaWRhdGlvbkVycm9yIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBRUFDLE9BQU8sQ0FBQ0MsYUFBUixHQUF3QixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFvQjtBQUV4Q0QsRUFBQUEsR0FBRyxDQUFDRSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDakJDLElBQUFBLFFBQVEsRUFBRztBQURNLEdBQXJCOztBQUlBLE1BQUdMLEdBQUcsQ0FBQ00sS0FBSixDQUFVQyxNQUFWLElBQW9CLENBQXZCLEVBQTBCO0FBQ3RCLFdBQU9OLEdBQUcsQ0FBQ0UsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ3hCSSxNQUFBQSxPQUFPLEVBQUdSLEdBQUcsQ0FBQ1MsbUJBQUosR0FBMEJULEdBQUcsQ0FBQ1MsbUJBQTlCLEdBQW9EO0FBRHRDLEtBQXJCLENBQVA7QUFHSDtBQUNKLENBWEQiLCJzb3VyY2VSb290IjoiL1VzZXJzL0FsZXNzYW5kcm9fTXVzb2xpbm8vRGVza3RvcC9EcmVhbUxhbmRGZXN0aXZhbC9jb250cm9sbGVycyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5cbmV4cG9ydHMuY3JlYXRlR2FsbGVyeSA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuXG4gICAgcmVzLnN0YXR1cygyMDEpLmpzb24oe1xuICAgICAgICBtZXNzYWdlcyA6ICdTdWNjZXNzIE9wZXJhdGlvbicsXG4gICAgfSk7XG5cbiAgICBpZihyZXEuZmlsZXMubGVuZ3RoID09IDApIHtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDIyKS5qc29uKHtcbiAgICAgICAgICAgIG1lc3NhZ2UgOiByZXEuZmlsZVZhbGlkYXRpb25FcnJvciA/IHJlcS5maWxlVmFsaWRhdGlvbkVycm9yIDogJ05lc3N1biBpbW1hZ2luZSBhbGxlZ2F0YScsXG4gICAgICAgIH0pO1xuICAgIH1cbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "gallery.js"
      ],
      "names": [
        "path",
        "require",
        "exports",
        "createGallery",
        "req",
        "res",
        "next",
        "status",
        "json",
        "messages",
        "files",
        "length",
        "message",
        "fileValidationError"
      ],
      "mappings": ";;AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AAEAC,OAAO,CAACC,aAAR,GAAwB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAExCD,EAAAA,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,IAAAA,QAAQ,EAAG;AADM,GAArB;;AAIA,MAAGL,GAAG,CAACM,KAAJ,CAAUC,MAAV,IAAoB,CAAvB,EAA0B;AACtB,WAAON,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBI,MAAAA,OAAO,EAAGR,GAAG,CAACS,mBAAJ,GAA0BT,GAAG,CAACS,mBAA9B,GAAoD;AADtC,KAArB,CAAP;AAGH;AACJ,CAXD",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/controllers",
      "sourcesContent": [
        "const path = require('path');\n\nexports.createGallery = (req, res, next) => {\n\n    res.status(201).json({\n        messages : 'Success Operation',\n    });\n\n    if(req.files.length == 0) {\n        return res.status(422).json({\n            message : req.fileValidationError ? req.fileValidationError : 'Nessun immagine allegata',\n        });\n    }\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1577794622688
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/similarity.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/similarity.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/similarity.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/similarity.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models",
        "sourceFileName": "similarity.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar Sequelize = require('sequelize');\n\nvar sequelize = require('../utils/database');\n\nvar Similarity = sequelize.define('similarity', {\n  id: {\n    type: Sequelize.INTEGER,\n    autoIncrement: true,\n    allowNull: false,\n    primaryKey: true\n  }\n});\nmodule.exports = Similarity;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpbWlsYXJpdHkuanMiXSwibmFtZXMiOlsiU2VxdWVsaXplIiwicmVxdWlyZSIsInNlcXVlbGl6ZSIsIlNpbWlsYXJpdHkiLCJkZWZpbmUiLCJpZCIsInR5cGUiLCJJTlRFR0VSIiwiYXV0b0luY3JlbWVudCIsImFsbG93TnVsbCIsInByaW1hcnlLZXkiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLFNBQVMsR0FBR0MsT0FBTyxDQUFDLFdBQUQsQ0FBekI7O0FBRUEsSUFBTUMsU0FBUyxHQUFHRCxPQUFPLENBQUMsbUJBQUQsQ0FBekI7O0FBRUEsSUFBTUUsVUFBVSxHQUFHRCxTQUFTLENBQUNFLE1BQVYsQ0FBaUIsWUFBakIsRUFBK0I7QUFDOUNDLEVBQUFBLEVBQUUsRUFBRztBQUNEQyxJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ08sT0FEaEI7QUFFREMsSUFBQUEsYUFBYSxFQUFHLElBRmY7QUFHREMsSUFBQUEsU0FBUyxFQUFHLEtBSFg7QUFJREMsSUFBQUEsVUFBVSxFQUFHO0FBSlo7QUFEeUMsQ0FBL0IsQ0FBbkI7QUFTQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCVCxVQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvQWxlc3NhbmRyb19NdXNvbGluby9EZXNrdG9wL0RyZWFtTGFuZEZlc3RpdmFsL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFNlcXVlbGl6ZSA9IHJlcXVpcmUoJ3NlcXVlbGl6ZScpO1xuXG5jb25zdCBzZXF1ZWxpemUgPSByZXF1aXJlKCcuLi91dGlscy9kYXRhYmFzZScpO1xuXG5jb25zdCBTaW1pbGFyaXR5ID0gc2VxdWVsaXplLmRlZmluZSgnc2ltaWxhcml0eScsIHtcbiAgICBpZCA6IHtcbiAgICAgICAgdHlwZSA6IFNlcXVlbGl6ZS5JTlRFR0VSLFxuICAgICAgICBhdXRvSW5jcmVtZW50IDogdHJ1ZSxcbiAgICAgICAgYWxsb3dOdWxsIDogZmFsc2UsXG4gICAgICAgIHByaW1hcnlLZXkgOiB0cnVlXG4gICAgfVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gU2ltaWxhcml0eTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "similarity.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "sequelize",
        "Similarity",
        "define",
        "id",
        "type",
        "INTEGER",
        "autoIncrement",
        "allowNull",
        "primaryKey",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,IAAMC,SAAS,GAAGD,OAAO,CAAC,mBAAD,CAAzB;;AAEA,IAAME,UAAU,GAAGD,SAAS,CAACE,MAAV,CAAiB,YAAjB,EAA+B;AAC9CC,EAAAA,EAAE,EAAG;AACDC,IAAAA,IAAI,EAAGN,SAAS,CAACO,OADhB;AAEDC,IAAAA,aAAa,EAAG,IAFf;AAGDC,IAAAA,SAAS,EAAG,KAHX;AAIDC,IAAAA,UAAU,EAAG;AAJZ;AADyC,CAA/B,CAAnB;AASAC,MAAM,CAACC,OAAP,GAAiBT,UAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst Similarity = sequelize.define('similarity', {\n    id : {\n        type : Sequelize.INTEGER,\n        autoIncrement : true,\n        allowNull : false,\n        primaryKey : true\n    }\n});\n\nmodule.exports = Similarity;"
      ]
    },
    "sourceType": "script",
    "mtime": 1576867651255
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/performance.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/performance.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/performance.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/performance.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models",
        "sourceFileName": "performance.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar Sequelize = require('sequelize');\n\nvar sequelize = require('../utils/database');\n\nvar Performance = sequelize.define('performance', {\n  id: {\n    type: Sequelize.INTEGER,\n    autoIncrement: true,\n    allowNull: false,\n    primaryKey: true\n  }\n});\nmodule.exports = Performance;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBlcmZvcm1hbmNlLmpzIl0sIm5hbWVzIjpbIlNlcXVlbGl6ZSIsInJlcXVpcmUiLCJzZXF1ZWxpemUiLCJQZXJmb3JtYW5jZSIsImRlZmluZSIsImlkIiwidHlwZSIsIklOVEVHRVIiLCJhdXRvSW5jcmVtZW50IiwiYWxsb3dOdWxsIiwicHJpbWFyeUtleSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsU0FBUyxHQUFHQyxPQUFPLENBQUMsV0FBRCxDQUF6Qjs7QUFFQSxJQUFNQyxTQUFTLEdBQUdELE9BQU8sQ0FBQyxtQkFBRCxDQUF6Qjs7QUFFQSxJQUFNRSxXQUFXLEdBQUdELFNBQVMsQ0FBQ0UsTUFBVixDQUFpQixhQUFqQixFQUFnQztBQUNoREMsRUFBQUEsRUFBRSxFQUFHO0FBQ0RDLElBQUFBLElBQUksRUFBR04sU0FBUyxDQUFDTyxPQURoQjtBQUVEQyxJQUFBQSxhQUFhLEVBQUcsSUFGZjtBQUdEQyxJQUFBQSxTQUFTLEVBQUcsS0FIWDtBQUlEQyxJQUFBQSxVQUFVLEVBQUc7QUFKWjtBQUQyQyxDQUFoQyxDQUFwQjtBQVNBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJULFdBQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9BbGVzc2FuZHJvX011c29saW5vL0Rlc2t0b3AvRHJlYW1MYW5kRmVzdGl2YWwvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU2VxdWVsaXplID0gcmVxdWlyZSgnc2VxdWVsaXplJyk7XG5cbmNvbnN0IHNlcXVlbGl6ZSA9IHJlcXVpcmUoJy4uL3V0aWxzL2RhdGFiYXNlJyk7XG5cbmNvbnN0IFBlcmZvcm1hbmNlID0gc2VxdWVsaXplLmRlZmluZSgncGVyZm9ybWFuY2UnLCB7XG4gICAgaWQgOiB7XG4gICAgICAgIHR5cGUgOiBTZXF1ZWxpemUuSU5URUdFUixcbiAgICAgICAgYXV0b0luY3JlbWVudCA6IHRydWUsXG4gICAgICAgIGFsbG93TnVsbCA6IGZhbHNlLFxuICAgICAgICBwcmltYXJ5S2V5IDogdHJ1ZVxuICAgIH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFBlcmZvcm1hbmNlOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "performance.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "sequelize",
        "Performance",
        "define",
        "id",
        "type",
        "INTEGER",
        "autoIncrement",
        "allowNull",
        "primaryKey",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,IAAMC,SAAS,GAAGD,OAAO,CAAC,mBAAD,CAAzB;;AAEA,IAAME,WAAW,GAAGD,SAAS,CAACE,MAAV,CAAiB,aAAjB,EAAgC;AAChDC,EAAAA,EAAE,EAAG;AACDC,IAAAA,IAAI,EAAGN,SAAS,CAACO,OADhB;AAEDC,IAAAA,aAAa,EAAG,IAFf;AAGDC,IAAAA,SAAS,EAAG,KAHX;AAIDC,IAAAA,UAAU,EAAG;AAJZ;AAD2C,CAAhC,CAApB;AASAC,MAAM,CAACC,OAAP,GAAiBT,WAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst Performance = sequelize.define('performance', {\n    id : {\n        type : Sequelize.INTEGER,\n        autoIncrement : true,\n        allowNull : false,\n        primaryKey : true\n    }\n});\n\nmodule.exports = Performance;"
      ]
    },
    "sourceType": "script",
    "mtime": 1576866381903
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/similar.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/similar.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/similar.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/similar.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models",
        "sourceFileName": "similar.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar Sequelize = require('sequelize');\n\nvar sequelize = require('../utils/database');\n\nvar Similar = sequelize.define('similar', {\n  id: {\n    type: Sequelize.INTEGER,\n    autoIncrement: true,\n    allowNull: false,\n    primaryKey: true\n  },\n  title: {\n    type: Sequelize.STRING,\n    allowNull: false\n  },\n  date: {\n    type: Sequelize.DATE,\n    allowNull: true\n  },\n  factsheet: {\n    //it must include the date\n    type: Sequelize.STRING,\n    allowNull: true\n  },\n  \"abstract\": {\n    type: Sequelize.STRING,\n    allowNull: true\n  },\n  image: {\n    //photo gallery\n    type: Sequelize.STRING,\n    allowNull: true\n  }\n});\nmodule.exports = Similar;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpbWlsYXIuanMiXSwibmFtZXMiOlsiU2VxdWVsaXplIiwicmVxdWlyZSIsInNlcXVlbGl6ZSIsIlNpbWlsYXIiLCJkZWZpbmUiLCJpZCIsInR5cGUiLCJJTlRFR0VSIiwiYXV0b0luY3JlbWVudCIsImFsbG93TnVsbCIsInByaW1hcnlLZXkiLCJ0aXRsZSIsIlNUUklORyIsImRhdGUiLCJEQVRFIiwiZmFjdHNoZWV0IiwiaW1hZ2UiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLFNBQVMsR0FBR0MsT0FBTyxDQUFDLFdBQUQsQ0FBekI7O0FBRUEsSUFBTUMsU0FBUyxHQUFHRCxPQUFPLENBQUMsbUJBQUQsQ0FBekI7O0FBRUEsSUFBTUUsT0FBTyxHQUFHRCxTQUFTLENBQUNFLE1BQVYsQ0FBaUIsU0FBakIsRUFBNEI7QUFDeENDLEVBQUFBLEVBQUUsRUFBRztBQUNEQyxJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ08sT0FEaEI7QUFFREMsSUFBQUEsYUFBYSxFQUFHLElBRmY7QUFHREMsSUFBQUEsU0FBUyxFQUFHLEtBSFg7QUFJREMsSUFBQUEsVUFBVSxFQUFHO0FBSlosR0FEbUM7QUFPeENDLEVBQUFBLEtBQUssRUFBRztBQUNKTCxJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ1ksTUFEYjtBQUVKSCxJQUFBQSxTQUFTLEVBQUc7QUFGUixHQVBnQztBQVd4Q0ksRUFBQUEsSUFBSSxFQUFHO0FBQ0hQLElBQUFBLElBQUksRUFBR04sU0FBUyxDQUFDYyxJQURkO0FBRUhMLElBQUFBLFNBQVMsRUFBRztBQUZULEdBWGlDO0FBZXhDTSxFQUFBQSxTQUFTLEVBQUc7QUFBRTtBQUNWVCxJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ1ksTUFEVDtBQUVSSCxJQUFBQSxTQUFTLEVBQUc7QUFGSixHQWY0QjtBQW1CeEMsY0FBVztBQUNQSCxJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ1ksTUFEVjtBQUVQSCxJQUFBQSxTQUFTLEVBQUc7QUFGTCxHQW5CNkI7QUF1QnhDTyxFQUFBQSxLQUFLLEVBQUc7QUFBRTtBQUNOVixJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ1ksTUFEYjtBQUVKSCxJQUFBQSxTQUFTLEVBQUc7QUFGUjtBQXZCZ0MsQ0FBNUIsQ0FBaEI7QUE2QkFRLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmYsT0FBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL0FsZXNzYW5kcm9fTXVzb2xpbm8vRGVza3RvcC9EcmVhbUxhbmRGZXN0aXZhbC9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBTZXF1ZWxpemUgPSByZXF1aXJlKCdzZXF1ZWxpemUnKTtcblxuY29uc3Qgc2VxdWVsaXplID0gcmVxdWlyZSgnLi4vdXRpbHMvZGF0YWJhc2UnKTtcblxuY29uc3QgU2ltaWxhciA9IHNlcXVlbGl6ZS5kZWZpbmUoJ3NpbWlsYXInLCB7XG4gICAgaWQgOiB7XG4gICAgICAgIHR5cGUgOiBTZXF1ZWxpemUuSU5URUdFUixcbiAgICAgICAgYXV0b0luY3JlbWVudCA6IHRydWUsXG4gICAgICAgIGFsbG93TnVsbCA6IGZhbHNlLFxuICAgICAgICBwcmltYXJ5S2V5IDogdHJ1ZVxuICAgIH0sXG4gICAgdGl0bGUgOiB7XG4gICAgICAgIHR5cGUgOiBTZXF1ZWxpemUuU1RSSU5HLFxuICAgICAgICBhbGxvd051bGwgOiBmYWxzZSxcbiAgICB9LFxuICAgIGRhdGUgOiB7XG4gICAgICAgIHR5cGUgOiBTZXF1ZWxpemUuREFURSxcbiAgICAgICAgYWxsb3dOdWxsIDogdHJ1ZSxcbiAgICB9LFxuICAgIGZhY3RzaGVldCA6IHsgLy9pdCBtdXN0IGluY2x1ZGUgdGhlIGRhdGVcbiAgICAgICAgdHlwZSA6IFNlcXVlbGl6ZS5TVFJJTkcsXG4gICAgICAgIGFsbG93TnVsbCA6IHRydWUsXG4gICAgfSxcbiAgICBhYnN0cmFjdCA6IHtcbiAgICAgICAgdHlwZSA6IFNlcXVlbGl6ZS5TVFJJTkcsXG4gICAgICAgIGFsbG93TnVsbCA6IHRydWUsXG4gICAgfSxcbiAgICBpbWFnZSA6IHsgLy9waG90byBnYWxsZXJ5XG4gICAgICAgIHR5cGUgOiBTZXF1ZWxpemUuU1RSSU5HLFxuICAgICAgICBhbGxvd051bGwgOiB0cnVlXG4gICAgfVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gU2ltaWxhcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "similar.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "sequelize",
        "Similar",
        "define",
        "id",
        "type",
        "INTEGER",
        "autoIncrement",
        "allowNull",
        "primaryKey",
        "title",
        "STRING",
        "date",
        "DATE",
        "factsheet",
        "image",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,IAAMC,SAAS,GAAGD,OAAO,CAAC,mBAAD,CAAzB;;AAEA,IAAME,OAAO,GAAGD,SAAS,CAACE,MAAV,CAAiB,SAAjB,EAA4B;AACxCC,EAAAA,EAAE,EAAG;AACDC,IAAAA,IAAI,EAAGN,SAAS,CAACO,OADhB;AAEDC,IAAAA,aAAa,EAAG,IAFf;AAGDC,IAAAA,SAAS,EAAG,KAHX;AAIDC,IAAAA,UAAU,EAAG;AAJZ,GADmC;AAOxCC,EAAAA,KAAK,EAAG;AACJL,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADb;AAEJH,IAAAA,SAAS,EAAG;AAFR,GAPgC;AAWxCI,EAAAA,IAAI,EAAG;AACHP,IAAAA,IAAI,EAAGN,SAAS,CAACc,IADd;AAEHL,IAAAA,SAAS,EAAG;AAFT,GAXiC;AAexCM,EAAAA,SAAS,EAAG;AAAE;AACVT,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADT;AAERH,IAAAA,SAAS,EAAG;AAFJ,GAf4B;AAmBxC,cAAW;AACPH,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADV;AAEPH,IAAAA,SAAS,EAAG;AAFL,GAnB6B;AAuBxCO,EAAAA,KAAK,EAAG;AAAE;AACNV,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADb;AAEJH,IAAAA,SAAS,EAAG;AAFR;AAvBgC,CAA5B,CAAhB;AA6BAQ,MAAM,CAACC,OAAP,GAAiBf,OAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst Similar = sequelize.define('similar', {\n    id : {\n        type : Sequelize.INTEGER,\n        autoIncrement : true,\n        allowNull : false,\n        primaryKey : true\n    },\n    title : {\n        type : Sequelize.STRING,\n        allowNull : false,\n    },\n    date : {\n        type : Sequelize.DATE,\n        allowNull : true,\n    },\n    factsheet : { //it must include the date\n        type : Sequelize.STRING,\n        allowNull : true,\n    },\n    abstract : {\n        type : Sequelize.STRING,\n        allowNull : true,\n    },\n    image : { //photo gallery\n        type : Sequelize.STRING,\n        allowNull : true\n    }\n});\n\nmodule.exports = Similar;"
      ]
    },
    "sourceType": "script",
    "mtime": 1577705010558
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/discussion.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/discussion.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/discussion.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/discussion.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models",
        "sourceFileName": "discussion.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar Sequelize = require('sequelize');\n\nvar sequelize = require('../utils/database');\n\nvar Discussion = sequelize.define('discussion', {\n  id: {\n    type: Sequelize.INTEGER,\n    autoIncrement: true,\n    allowNull: false,\n    primaryKey: true\n  }\n});\nmodule.exports = Discussion;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRpc2N1c3Npb24uanMiXSwibmFtZXMiOlsiU2VxdWVsaXplIiwicmVxdWlyZSIsInNlcXVlbGl6ZSIsIkRpc2N1c3Npb24iLCJkZWZpbmUiLCJpZCIsInR5cGUiLCJJTlRFR0VSIiwiYXV0b0luY3JlbWVudCIsImFsbG93TnVsbCIsInByaW1hcnlLZXkiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLFNBQVMsR0FBR0MsT0FBTyxDQUFDLFdBQUQsQ0FBekI7O0FBRUEsSUFBTUMsU0FBUyxHQUFHRCxPQUFPLENBQUMsbUJBQUQsQ0FBekI7O0FBRUEsSUFBTUUsVUFBVSxHQUFHRCxTQUFTLENBQUNFLE1BQVYsQ0FBaUIsWUFBakIsRUFBK0I7QUFDOUNDLEVBQUFBLEVBQUUsRUFBRztBQUNEQyxJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ08sT0FEaEI7QUFFREMsSUFBQUEsYUFBYSxFQUFHLElBRmY7QUFHREMsSUFBQUEsU0FBUyxFQUFHLEtBSFg7QUFJREMsSUFBQUEsVUFBVSxFQUFHO0FBSlo7QUFEeUMsQ0FBL0IsQ0FBbkI7QUFTQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCVCxVQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvQWxlc3NhbmRyb19NdXNvbGluby9EZXNrdG9wL0RyZWFtTGFuZEZlc3RpdmFsL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFNlcXVlbGl6ZSA9IHJlcXVpcmUoJ3NlcXVlbGl6ZScpO1xuXG5jb25zdCBzZXF1ZWxpemUgPSByZXF1aXJlKCcuLi91dGlscy9kYXRhYmFzZScpO1xuXG5jb25zdCBEaXNjdXNzaW9uID0gc2VxdWVsaXplLmRlZmluZSgnZGlzY3Vzc2lvbicsIHtcbiAgICBpZCA6IHtcbiAgICAgICAgdHlwZSA6IFNlcXVlbGl6ZS5JTlRFR0VSLFxuICAgICAgICBhdXRvSW5jcmVtZW50IDogdHJ1ZSxcbiAgICAgICAgYWxsb3dOdWxsIDogZmFsc2UsXG4gICAgICAgIHByaW1hcnlLZXkgOiB0cnVlXG4gICAgfVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gRGlzY3Vzc2lvbjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "discussion.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "sequelize",
        "Discussion",
        "define",
        "id",
        "type",
        "INTEGER",
        "autoIncrement",
        "allowNull",
        "primaryKey",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,IAAMC,SAAS,GAAGD,OAAO,CAAC,mBAAD,CAAzB;;AAEA,IAAME,UAAU,GAAGD,SAAS,CAACE,MAAV,CAAiB,YAAjB,EAA+B;AAC9CC,EAAAA,EAAE,EAAG;AACDC,IAAAA,IAAI,EAAGN,SAAS,CAACO,OADhB;AAEDC,IAAAA,aAAa,EAAG,IAFf;AAGDC,IAAAA,SAAS,EAAG,KAHX;AAIDC,IAAAA,UAAU,EAAG;AAJZ;AADyC,CAA/B,CAAnB;AASAC,MAAM,CAACC,OAAP,GAAiBT,UAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst Discussion = sequelize.define('discussion', {\n    id : {\n        type : Sequelize.INTEGER,\n        autoIncrement : true,\n        allowNull : false,\n        primaryKey : true\n    }\n});\n\nmodule.exports = Discussion;"
      ]
    },
    "sourceType": "script",
    "mtime": 1577730494693
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/type.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/type.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/type.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/type.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models",
        "sourceFileName": "type.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar Sequelize = require('sequelize');\n\nvar sequelize = require('../utils/database');\n\nvar Type = sequelize.define('type', {\n  id: {\n    type: Sequelize.INTEGER,\n    autoIncrement: true,\n    allowNull: false,\n    primaryKey: true\n  },\n  name: {\n    type: Sequelize.STRING,\n    allowNull: false\n  }\n});\nmodule.exports = Type;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInR5cGUuanMiXSwibmFtZXMiOlsiU2VxdWVsaXplIiwicmVxdWlyZSIsInNlcXVlbGl6ZSIsIlR5cGUiLCJkZWZpbmUiLCJpZCIsInR5cGUiLCJJTlRFR0VSIiwiYXV0b0luY3JlbWVudCIsImFsbG93TnVsbCIsInByaW1hcnlLZXkiLCJuYW1lIiwiU1RSSU5HIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxTQUFTLEdBQUdDLE9BQU8sQ0FBQyxXQUFELENBQXpCOztBQUVBLElBQU1DLFNBQVMsR0FBR0QsT0FBTyxDQUFDLG1CQUFELENBQXpCOztBQUVBLElBQU1FLElBQUksR0FBR0QsU0FBUyxDQUFDRSxNQUFWLENBQWlCLE1BQWpCLEVBQXlCO0FBQ2xDQyxFQUFBQSxFQUFFLEVBQUc7QUFDREMsSUFBQUEsSUFBSSxFQUFHTixTQUFTLENBQUNPLE9BRGhCO0FBRURDLElBQUFBLGFBQWEsRUFBRyxJQUZmO0FBR0RDLElBQUFBLFNBQVMsRUFBRyxLQUhYO0FBSURDLElBQUFBLFVBQVUsRUFBRztBQUpaLEdBRDZCO0FBT2xDQyxFQUFBQSxJQUFJLEVBQUc7QUFDSEwsSUFBQUEsSUFBSSxFQUFHTixTQUFTLENBQUNZLE1BRGQ7QUFFSEgsSUFBQUEsU0FBUyxFQUFHO0FBRlQ7QUFQMkIsQ0FBekIsQ0FBYjtBQWNBSSxNQUFNLENBQUNDLE9BQVAsR0FBaUJYLElBQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9BbGVzc2FuZHJvX011c29saW5vL0Rlc2t0b3AvRHJlYW1MYW5kRmVzdGl2YWwvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU2VxdWVsaXplID0gcmVxdWlyZSgnc2VxdWVsaXplJyk7XG5cbmNvbnN0IHNlcXVlbGl6ZSA9IHJlcXVpcmUoJy4uL3V0aWxzL2RhdGFiYXNlJyk7XG5cbmNvbnN0IFR5cGUgPSBzZXF1ZWxpemUuZGVmaW5lKCd0eXBlJywge1xuICAgIGlkIDoge1xuICAgICAgICB0eXBlIDogU2VxdWVsaXplLklOVEVHRVIsXG4gICAgICAgIGF1dG9JbmNyZW1lbnQgOiB0cnVlLFxuICAgICAgICBhbGxvd051bGwgOiBmYWxzZSxcbiAgICAgICAgcHJpbWFyeUtleSA6IHRydWVcbiAgICB9LFxuICAgIG5hbWUgOiB7XG4gICAgICAgIHR5cGUgOiBTZXF1ZWxpemUuU1RSSU5HLFxuICAgICAgICBhbGxvd051bGwgOiBmYWxzZSxcbiAgICB9LFxuXG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBUeXBlOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "type.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "sequelize",
        "Type",
        "define",
        "id",
        "type",
        "INTEGER",
        "autoIncrement",
        "allowNull",
        "primaryKey",
        "name",
        "STRING",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,IAAMC,SAAS,GAAGD,OAAO,CAAC,mBAAD,CAAzB;;AAEA,IAAME,IAAI,GAAGD,SAAS,CAACE,MAAV,CAAiB,MAAjB,EAAyB;AAClCC,EAAAA,EAAE,EAAG;AACDC,IAAAA,IAAI,EAAGN,SAAS,CAACO,OADhB;AAEDC,IAAAA,aAAa,EAAG,IAFf;AAGDC,IAAAA,SAAS,EAAG,KAHX;AAIDC,IAAAA,UAAU,EAAG;AAJZ,GAD6B;AAOlCC,EAAAA,IAAI,EAAG;AACHL,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADd;AAEHH,IAAAA,SAAS,EAAG;AAFT;AAP2B,CAAzB,CAAb;AAcAI,MAAM,CAACC,OAAP,GAAiBX,IAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst Type = sequelize.define('type', {\n    id : {\n        type : Sequelize.INTEGER,\n        autoIncrement : true,\n        allowNull : false,\n        primaryKey : true\n    },\n    name : {\n        type : Sequelize.STRING,\n        allowNull : false,\n    },\n\n});\n\nmodule.exports = Type;"
      ]
    },
    "sourceType": "script",
    "mtime": 1577896630473
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/typology.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/typology.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/typology.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/typology.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models",
        "sourceFileName": "typology.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar Sequelize = require('sequelize');\n\nvar sequelize = require('../utils/database');\n\nvar Typology = sequelize.define('typology', {\n  id: {\n    type: Sequelize.INTEGER,\n    autoIncrement: true,\n    allowNull: false,\n    primaryKey: true\n  }\n});\nmodule.exports = Typology;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInR5cG9sb2d5LmpzIl0sIm5hbWVzIjpbIlNlcXVlbGl6ZSIsInJlcXVpcmUiLCJzZXF1ZWxpemUiLCJUeXBvbG9neSIsImRlZmluZSIsImlkIiwidHlwZSIsIklOVEVHRVIiLCJhdXRvSW5jcmVtZW50IiwiYWxsb3dOdWxsIiwicHJpbWFyeUtleSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsU0FBUyxHQUFHQyxPQUFPLENBQUMsV0FBRCxDQUF6Qjs7QUFFQSxJQUFNQyxTQUFTLEdBQUdELE9BQU8sQ0FBQyxtQkFBRCxDQUF6Qjs7QUFFQSxJQUFNRSxRQUFRLEdBQUdELFNBQVMsQ0FBQ0UsTUFBVixDQUFpQixVQUFqQixFQUE2QjtBQUMxQ0MsRUFBQUEsRUFBRSxFQUFHO0FBQ0RDLElBQUFBLElBQUksRUFBR04sU0FBUyxDQUFDTyxPQURoQjtBQUVEQyxJQUFBQSxhQUFhLEVBQUcsSUFGZjtBQUdEQyxJQUFBQSxTQUFTLEVBQUcsS0FIWDtBQUlEQyxJQUFBQSxVQUFVLEVBQUc7QUFKWjtBQURxQyxDQUE3QixDQUFqQjtBQVNBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJULFFBQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9BbGVzc2FuZHJvX011c29saW5vL0Rlc2t0b3AvRHJlYW1MYW5kRmVzdGl2YWwvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU2VxdWVsaXplID0gcmVxdWlyZSgnc2VxdWVsaXplJyk7XG5cbmNvbnN0IHNlcXVlbGl6ZSA9IHJlcXVpcmUoJy4uL3V0aWxzL2RhdGFiYXNlJyk7XG5cbmNvbnN0IFR5cG9sb2d5ID0gc2VxdWVsaXplLmRlZmluZSgndHlwb2xvZ3knLCB7XG4gICAgaWQgOiB7XG4gICAgICAgIHR5cGUgOiBTZXF1ZWxpemUuSU5URUdFUixcbiAgICAgICAgYXV0b0luY3JlbWVudCA6IHRydWUsXG4gICAgICAgIGFsbG93TnVsbCA6IGZhbHNlLFxuICAgICAgICBwcmltYXJ5S2V5IDogdHJ1ZVxuICAgIH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFR5cG9sb2d5OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "typology.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "sequelize",
        "Typology",
        "define",
        "id",
        "type",
        "INTEGER",
        "autoIncrement",
        "allowNull",
        "primaryKey",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,IAAMC,SAAS,GAAGD,OAAO,CAAC,mBAAD,CAAzB;;AAEA,IAAME,QAAQ,GAAGD,SAAS,CAACE,MAAV,CAAiB,UAAjB,EAA6B;AAC1CC,EAAAA,EAAE,EAAG;AACDC,IAAAA,IAAI,EAAGN,SAAS,CAACO,OADhB;AAEDC,IAAAA,aAAa,EAAG,IAFf;AAGDC,IAAAA,SAAS,EAAG,KAHX;AAIDC,IAAAA,UAAU,EAAG;AAJZ;AADqC,CAA7B,CAAjB;AASAC,MAAM,CAACC,OAAP,GAAiBT,QAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst Typology = sequelize.define('typology', {\n    id : {\n        type : Sequelize.INTEGER,\n        autoIncrement : true,\n        allowNull : false,\n        primaryKey : true\n    }\n});\n\nmodule.exports = Typology;"
      ]
    },
    "sourceType": "script",
    "mtime": 1577896701422
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/typologyse.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/typologyse.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/typologyse.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/typologyse.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models",
        "sourceFileName": "typologyse.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar Sequelize = require('sequelize');\n\nvar sequelize = require('../utils/database');\n\nvar Typologyse = sequelize.define('typologyse', {\n  id: {\n    type: Sequelize.INTEGER,\n    autoIncrement: true,\n    allowNull: false,\n    primaryKey: true\n  }\n});\nmodule.exports = Typologyse;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInR5cG9sb2d5c2UuanMiXSwibmFtZXMiOlsiU2VxdWVsaXplIiwicmVxdWlyZSIsInNlcXVlbGl6ZSIsIlR5cG9sb2d5c2UiLCJkZWZpbmUiLCJpZCIsInR5cGUiLCJJTlRFR0VSIiwiYXV0b0luY3JlbWVudCIsImFsbG93TnVsbCIsInByaW1hcnlLZXkiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLFNBQVMsR0FBR0MsT0FBTyxDQUFDLFdBQUQsQ0FBekI7O0FBRUEsSUFBTUMsU0FBUyxHQUFHRCxPQUFPLENBQUMsbUJBQUQsQ0FBekI7O0FBRUEsSUFBTUUsVUFBVSxHQUFHRCxTQUFTLENBQUNFLE1BQVYsQ0FBaUIsWUFBakIsRUFBK0I7QUFDOUNDLEVBQUFBLEVBQUUsRUFBRztBQUNEQyxJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ08sT0FEaEI7QUFFREMsSUFBQUEsYUFBYSxFQUFHLElBRmY7QUFHREMsSUFBQUEsU0FBUyxFQUFHLEtBSFg7QUFJREMsSUFBQUEsVUFBVSxFQUFHO0FBSlo7QUFEeUMsQ0FBL0IsQ0FBbkI7QUFTQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCVCxVQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvQWxlc3NhbmRyb19NdXNvbGluby9EZXNrdG9wL0RyZWFtTGFuZEZlc3RpdmFsL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFNlcXVlbGl6ZSA9IHJlcXVpcmUoJ3NlcXVlbGl6ZScpO1xuXG5jb25zdCBzZXF1ZWxpemUgPSByZXF1aXJlKCcuLi91dGlscy9kYXRhYmFzZScpO1xuXG5jb25zdCBUeXBvbG9neXNlID0gc2VxdWVsaXplLmRlZmluZSgndHlwb2xvZ3lzZScsIHtcbiAgICBpZCA6IHtcbiAgICAgICAgdHlwZSA6IFNlcXVlbGl6ZS5JTlRFR0VSLFxuICAgICAgICBhdXRvSW5jcmVtZW50IDogdHJ1ZSxcbiAgICAgICAgYWxsb3dOdWxsIDogZmFsc2UsXG4gICAgICAgIHByaW1hcnlLZXkgOiB0cnVlXG4gICAgfVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gVHlwb2xvZ3lzZTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "typologyse.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "sequelize",
        "Typologyse",
        "define",
        "id",
        "type",
        "INTEGER",
        "autoIncrement",
        "allowNull",
        "primaryKey",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,IAAMC,SAAS,GAAGD,OAAO,CAAC,mBAAD,CAAzB;;AAEA,IAAME,UAAU,GAAGD,SAAS,CAACE,MAAV,CAAiB,YAAjB,EAA+B;AAC9CC,EAAAA,EAAE,EAAG;AACDC,IAAAA,IAAI,EAAGN,SAAS,CAACO,OADhB;AAEDC,IAAAA,aAAa,EAAG,IAFf;AAGDC,IAAAA,SAAS,EAAG,KAHX;AAIDC,IAAAA,UAAU,EAAG;AAJZ;AADyC,CAA/B,CAAnB;AASAC,MAAM,CAACC,OAAP,GAAiBT,UAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst Typologyse = sequelize.define('typologyse', {\n    id : {\n        type : Sequelize.INTEGER,\n        autoIncrement : true,\n        allowNull : false,\n        primaryKey : true\n    }\n});\n\nmodule.exports = Typologyse;"
      ]
    },
    "sourceType": "script",
    "mtime": 1577897316258
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/typologyae.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/DreamLandFestival\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/typologyae.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/typologyae.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models/typologyae.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models",
        "sourceFileName": "typologyae.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar Sequelize = require('sequelize');\n\nvar sequelize = require('../utils/database');\n\nvar Typologyae = sequelize.define('typologyae', {\n  id: {\n    type: Sequelize.INTEGER,\n    autoIncrement: true,\n    allowNull: false,\n    primaryKey: true\n  }\n});\nmodule.exports = Typologyae;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInR5cG9sb2d5YWUuanMiXSwibmFtZXMiOlsiU2VxdWVsaXplIiwicmVxdWlyZSIsInNlcXVlbGl6ZSIsIlR5cG9sb2d5YWUiLCJkZWZpbmUiLCJpZCIsInR5cGUiLCJJTlRFR0VSIiwiYXV0b0luY3JlbWVudCIsImFsbG93TnVsbCIsInByaW1hcnlLZXkiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLFNBQVMsR0FBR0MsT0FBTyxDQUFDLFdBQUQsQ0FBekI7O0FBRUEsSUFBTUMsU0FBUyxHQUFHRCxPQUFPLENBQUMsbUJBQUQsQ0FBekI7O0FBRUEsSUFBTUUsVUFBVSxHQUFHRCxTQUFTLENBQUNFLE1BQVYsQ0FBaUIsWUFBakIsRUFBK0I7QUFDOUNDLEVBQUFBLEVBQUUsRUFBRztBQUNEQyxJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ08sT0FEaEI7QUFFREMsSUFBQUEsYUFBYSxFQUFHLElBRmY7QUFHREMsSUFBQUEsU0FBUyxFQUFHLEtBSFg7QUFJREMsSUFBQUEsVUFBVSxFQUFHO0FBSlo7QUFEeUMsQ0FBL0IsQ0FBbkI7QUFTQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCVCxVQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvQWxlc3NhbmRyb19NdXNvbGluby9EZXNrdG9wL0RyZWFtTGFuZEZlc3RpdmFsL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFNlcXVlbGl6ZSA9IHJlcXVpcmUoJ3NlcXVlbGl6ZScpO1xuXG5jb25zdCBzZXF1ZWxpemUgPSByZXF1aXJlKCcuLi91dGlscy9kYXRhYmFzZScpO1xuXG5jb25zdCBUeXBvbG9neWFlID0gc2VxdWVsaXplLmRlZmluZSgndHlwb2xvZ3lhZScsIHtcbiAgICBpZCA6IHtcbiAgICAgICAgdHlwZSA6IFNlcXVlbGl6ZS5JTlRFR0VSLFxuICAgICAgICBhdXRvSW5jcmVtZW50IDogdHJ1ZSxcbiAgICAgICAgYWxsb3dOdWxsIDogZmFsc2UsXG4gICAgICAgIHByaW1hcnlLZXkgOiB0cnVlXG4gICAgfVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gVHlwb2xvZ3lhZTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "typologyae.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "sequelize",
        "Typologyae",
        "define",
        "id",
        "type",
        "INTEGER",
        "autoIncrement",
        "allowNull",
        "primaryKey",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,IAAMC,SAAS,GAAGD,OAAO,CAAC,mBAAD,CAAzB;;AAEA,IAAME,UAAU,GAAGD,SAAS,CAACE,MAAV,CAAiB,YAAjB,EAA+B;AAC9CC,EAAAA,EAAE,EAAG;AACDC,IAAAA,IAAI,EAAGN,SAAS,CAACO,OADhB;AAEDC,IAAAA,aAAa,EAAG,IAFf;AAGDC,IAAAA,SAAS,EAAG,KAHX;AAIDC,IAAAA,UAAU,EAAG;AAJZ;AADyC,CAA/B,CAAnB;AASAC,MAAM,CAACC,OAAP,GAAiBT,UAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/DreamLandFestival/models",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst Typologyae = sequelize.define('typologyae', {\n    id : {\n        type : Sequelize.INTEGER,\n        autoIncrement : true,\n        allowNull : false,\n        primaryKey : true\n    }\n});\n\nmodule.exports = Typologyae;"
      ]
    },
    "sourceType": "script",
    "mtime": 1577897304683
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"plugins\":[],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/app.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst router = express.Router();\n\nconst path = require('path');\n\nconst uuidv4 = require('uuid/v4');\n\nconst bodyParser = require('body-parser');\n\nconst reservationRoutes = require('./routes/reservation');\n\nconst fs = require('fs');\n\nvar helmet = require('helmet');\n\nvar morgan = require('morgan');\n\nconst sequelize = require('./utils/database');\n\nconst app = express();\napp.use(helmet());\nconst logStream = fs.createWriteStream(path.join(__dirname, 'access.log'), {\n  flags: 'a'\n});\napp.use(morgan('combined', {\n  stream: logStream\n}));\napp.use(bodyParser.json());\napp.use((req, res, next) => {\n  res.setHeader('Access-Control-Allow-Origin', '*');\n  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, PATCH, DELETE');\n  res.setHeader('Access-Control-Allow-Headers', 'Content-Type, Authorization');\n  next();\n});\napp.use(express.static('public'));\nrouter.get('/', function (req, res) {\n  res.sendFile(path.join(__dirname + '/index.html'));\n}); //Routing\n\napp.use('/', router);\n\nrequire(\"./routes\")(app);\n\nconst User = require('./models/user');\n\nconst Ticket = require('./models/ticket');\n\nconst Artistic_Event = require('./models/artisticevent');\n\nconst Performer = require('./models/performer');\n\nconst Seminary = require('./models/seminary');\n\nconst Type = require('./models/type');\n\nconst Similarity = require('./models/similarity');\n\nconst Performance = require('./models/performance');\n\nconst Typologyae = require('./models/typologyae');\n\nconst Typologyse = require('./models/typologyse'); //user and ticket\n\n\nUser.hasMany(Ticket);\nTicket.belongsTo(User, {\n  constraints: true,\n  onDelete: 'CASCADE'\n}); //artistic event and performer\n\nArtistic_Event.belongsToMany(Performer, {\n  through: Performance\n});\nPerformer.belongsToMany(Artistic_Event, {\n  through: Performance\n}); //artistic event and seminary\n\nSeminary.hasMany(Artistic_Event);\nArtistic_Event.belongsTo(Seminary); //artistic event and similar\n\nArtistic_Event.belongsToMany(Artistic_Event, {\n  as: 'similar',\n  through: Similarity\n}); //artistic event and type\n\nArtistic_Event.belongsToMany(Type, {\n  through: Typologyae\n});\nType.belongsToMany(Artistic_Event, {\n  through: Typologyae\n}); //seminary and type\n\nSeminary.belongsToMany(Type, {\n  through: Typologyse\n});\nType.belongsToMany(Seminary, {\n  through: Typologyse\n});\nconsole.log(process.env.NODE_ENV || 'develop');\nsequelize.authenticate().then(rec => {\n  console.log('Connessione Stabilita con Successo'); //sequelize.sync({force:true})\n\n  sequelize.sync().then(user => {\n    console.log('Sync al DB con Successo');\n  }).catch(err => {\n    console.log('Sync al DB Error:', err);\n  });\n}).catch(err => {\n  console.log('Connession al DB Error:', err);\n});\napp.listen(process.env.PORT || 8081);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "path",
        "uuidv4",
        "bodyParser",
        "reservationRoutes",
        "fs",
        "helmet",
        "morgan",
        "sequelize",
        "app",
        "use",
        "logStream",
        "createWriteStream",
        "join",
        "__dirname",
        "flags",
        "stream",
        "json",
        "req",
        "res",
        "next",
        "setHeader",
        "static",
        "get",
        "sendFile",
        "User",
        "Ticket",
        "Artistic_Event",
        "Performer",
        "Seminary",
        "Type",
        "Similarity",
        "Performance",
        "Typologyae",
        "Typologyse",
        "hasMany",
        "belongsTo",
        "constraints",
        "onDelete",
        "belongsToMany",
        "through",
        "as",
        "console",
        "log",
        "process",
        "env",
        "NODE_ENV",
        "authenticate",
        "then",
        "rec",
        "sync",
        "user",
        "catch",
        "err",
        "listen",
        "PORT"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AACA,MAAMC,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMI,MAAM,GAAGJ,OAAO,CAAC,SAAD,CAAtB;;AACA,MAAMK,UAAU,GAAGL,OAAO,CAAC,aAAD,CAA1B;;AACA,MAAMM,iBAAiB,GAAGN,OAAO,CAAC,sBAAD,CAAjC;;AACA,MAAMO,EAAE,GAAGP,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAIQ,MAAM,GAAGR,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIS,MAAM,GAAGT,OAAO,CAAC,QAAD,CAApB;;AAEA,MAAMU,SAAS,GAAIV,OAAO,CAAC,kBAAD,CAA1B;;AAEA,MAAMW,GAAG,GAAGZ,OAAO,EAAnB;AAEAY,GAAG,CAACC,GAAJ,CAAQJ,MAAM,EAAd;AAEA,MAAMK,SAAS,GAAGN,EAAE,CAACO,iBAAH,CAAqBX,IAAI,CAACY,IAAL,CAAUC,SAAV,EAAqB,YAArB,CAArB,EAAyD;AAACC,EAAAA,KAAK,EAAG;AAAT,CAAzD,CAAlB;AACAN,GAAG,CAACC,GAAJ,CAAQH,MAAM,CAAC,UAAD,EAAa;AAACS,EAAAA,MAAM,EAAGL;AAAV,CAAb,CAAd;AAEAF,GAAG,CAACC,GAAJ,CAAQP,UAAU,CAACc,IAAX,EAAR;AAEAR,GAAG,CAACC,GAAJ,CAAQ,CAACQ,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACxBD,EAAAA,GAAG,CAACE,SAAJ,CAAc,6BAAd,EAA6C,GAA7C;AACAF,EAAAA,GAAG,CAACE,SAAJ,CAAc,8BAAd,EAA8C,+BAA9C;AACAF,EAAAA,GAAG,CAACE,SAAJ,CAAc,8BAAd,EAA8C,6BAA9C;AACAD,EAAAA,IAAI;AACP,CALD;AAOAX,GAAG,CAACC,GAAJ,CAAQb,OAAO,CAACyB,MAAR,CAAe,QAAf,CAAR;AAEAvB,MAAM,CAACwB,GAAP,CAAW,GAAX,EAAe,UAASL,GAAT,EAAaC,GAAb,EAAiB;AAC5BA,EAAAA,GAAG,CAACK,QAAJ,CAAavB,IAAI,CAACY,IAAL,CAAUC,SAAS,GAAG,aAAtB,CAAb;AACH,CAFD,E,CAIA;;AACAL,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAYX,MAAZ;;AACAD,OAAO,CAAC,UAAD,CAAP,CAAoBW,GAApB;;AAEA,MAAMgB,IAAI,GAAG3B,OAAO,CAAC,eAAD,CAApB;;AACA,MAAM4B,MAAM,GAAG5B,OAAO,CAAC,iBAAD,CAAtB;;AACA,MAAM6B,cAAc,GAAG7B,OAAO,CAAC,wBAAD,CAA9B;;AACA,MAAM8B,SAAS,GAAG9B,OAAO,CAAC,oBAAD,CAAzB;;AACA,MAAM+B,QAAQ,GAAG/B,OAAO,CAAC,mBAAD,CAAxB;;AACA,MAAMgC,IAAI,GAAGhC,OAAO,CAAC,eAAD,CAApB;;AACA,MAAMiC,UAAU,GAAGjC,OAAO,CAAC,qBAAD,CAA1B;;AACA,MAAMkC,WAAW,GAAGlC,OAAO,CAAC,sBAAD,CAA3B;;AACA,MAAMmC,UAAU,GAAGnC,OAAO,CAAC,qBAAD,CAA1B;;AACA,MAAMoC,UAAU,GAAGpC,OAAO,CAAC,qBAAD,CAA1B,C,CAEA;;;AACA2B,IAAI,CAACU,OAAL,CAAaT,MAAb;AACAA,MAAM,CAACU,SAAP,CAAiBX,IAAjB,EAAuB;AAAEY,EAAAA,WAAW,EAAG,IAAhB;AAAsBC,EAAAA,QAAQ,EAAG;AAAjC,CAAvB,E,CAEA;;AACAX,cAAc,CAACY,aAAf,CAA6BX,SAA7B,EAAwC;AAACY,EAAAA,OAAO,EAAGR;AAAX,CAAxC;AACAJ,SAAS,CAACW,aAAV,CAAwBZ,cAAxB,EAAwC;AAACa,EAAAA,OAAO,EAAGR;AAAX,CAAxC,E,CAEA;;AACAH,QAAQ,CAACM,OAAT,CAAiBR,cAAjB;AACAA,cAAc,CAACS,SAAf,CAAyBP,QAAzB,E,CAEA;;AACAF,cAAc,CAACY,aAAf,CAA6BZ,cAA7B,EAA6C;AAAEc,EAAAA,EAAE,EAAE,SAAN;AAAiBD,EAAAA,OAAO,EAAET;AAA1B,CAA7C,E,CAEA;;AACAJ,cAAc,CAACY,aAAf,CAA6BT,IAA7B,EAAmC;AAACU,EAAAA,OAAO,EAAGP;AAAX,CAAnC;AACAH,IAAI,CAACS,aAAL,CAAmBZ,cAAnB,EAAmC;AAACa,EAAAA,OAAO,EAAGP;AAAX,CAAnC,E,CAEA;;AACAJ,QAAQ,CAACU,aAAT,CAAuBT,IAAvB,EAA6B;AAACU,EAAAA,OAAO,EAAGN;AAAX,CAA7B;AACAJ,IAAI,CAACS,aAAL,CAAmBV,QAAnB,EAA6B;AAACW,EAAAA,OAAO,EAAGN;AAAX,CAA7B;AAEAQ,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAAR,CAAYC,QAAZ,IAAwB,SAApC;AAEAtC,SAAS,CAACuC,YAAV,GAAyBC,IAAzB,CAA+BC,GAAG,IAAI;AAClCP,EAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ,EADkC,CAElC;;AACAnC,EAAAA,SAAS,CAAC0C,IAAV,GACCF,IADD,CACMG,IAAI,IAAI;AACVT,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACH,GAHD,EAGGS,KAHH,CAGUC,GAAG,IAAI;AACbX,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgCU,GAAhC;AACH,GALD;AAMH,CATD,EASGD,KATH,CASUC,GAAG,IAAI;AACZX,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAsCU,GAAtC;AACJ,CAXD;AAaA5C,GAAG,CAAC6C,MAAJ,CAAWV,OAAO,CAACC,GAAR,CAAYU,IAAZ,IAAoB,IAA/B",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "sourcesContent": [
        "const express = require('express');\nconst router = express.Router();\nconst path = require('path');\nconst uuidv4 = require('uuid/v4');\nconst bodyParser = require('body-parser');\nconst reservationRoutes = require('./routes/reservation');\nconst fs = require('fs');\nvar helmet = require('helmet');\nvar morgan = require('morgan');\n\nconst sequelize  = require('./utils/database');\n\nconst app = express();\n\napp.use(helmet());\n\nconst logStream = fs.createWriteStream(path.join(__dirname, 'access.log'), {flags : 'a'});\napp.use(morgan('combined', {stream : logStream}));\n\napp.use(bodyParser.json());\n\napp.use((req, res, next) => {\n    res.setHeader('Access-Control-Allow-Origin', '*');\n    res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, PATCH, DELETE');\n    res.setHeader('Access-Control-Allow-Headers', 'Content-Type, Authorization');\n    next();\n});\n\napp.use(express.static('public'));\n\nrouter.get('/',function(req,res){\n    res.sendFile(path.join(__dirname + '/index.html'));\n});\n\n//Routing\napp.use('/',router);\nrequire(\"./routes\")(app);\n\nconst User = require('./models/user');\nconst Ticket = require('./models/ticket');\nconst Artistic_Event = require('./models/artisticevent');\nconst Performer = require('./models/performer');\nconst Seminary = require('./models/seminary');\nconst Type = require('./models/type');\nconst Similarity = require('./models/similarity');\nconst Performance = require('./models/performance');\nconst Typologyae = require('./models/typologyae');\nconst Typologyse = require('./models/typologyse');\n\n//user and ticket\nUser.hasMany(Ticket);\nTicket.belongsTo(User, { constraints : true, onDelete : 'CASCADE'});\n\n//artistic event and performer\nArtistic_Event.belongsToMany(Performer, {through : Performance});\nPerformer.belongsToMany(Artistic_Event, {through : Performance});\n\n//artistic event and seminary\nSeminary.hasMany(Artistic_Event);\nArtistic_Event.belongsTo(Seminary);\n\n//artistic event and similar\nArtistic_Event.belongsToMany(Artistic_Event, { as: 'similar', through: Similarity });\n\n//artistic event and type\nArtistic_Event.belongsToMany(Type, {through : Typologyae});\nType.belongsToMany(Artistic_Event, {through : Typologyae});\n\n//seminary and type\nSeminary.belongsToMany(Type, {through : Typologyse});\nType.belongsToMany(Seminary, {through : Typologyse});\n\nconsole.log(process.env.NODE_ENV || 'develop');\n\nsequelize.authenticate().then( rec => {\n    console.log('Connessione Stabilita con Successo');\n    //sequelize.sync({force:true})\n    sequelize.sync()\n    .then(user => {\n        console.log('Sync al DB con Successo');\n    }).catch( err => {\n        console.log('Sync al DB Error:',err);\n    });\n}).catch( err => {\n     console.log('Connession al DB Error:',err);\n});\n\napp.listen(process.env.PORT || 8081);"
      ]
    },
    "sourceType": "module",
    "mtime": 1577898021107
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes/reservation.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"plugins\":[],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes/reservation.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes/reservation.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes/reservation.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes",
        "sourceFileName": "reservation.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst {\n  body,\n  query\n} = require('express-validator/check');\n\nconst router = express.Router();\n\nconst isAuth = require('../middleware/is-auth');\n\nconst reservationController = require('../controllers/reservation');\n\nconst path = require('path');\n\nconst multer = require('multer');\n\nconst uuidv4 = require('uuid/v4');\n\nconst storage = multer.diskStorage({\n  destination: (req, file, callback) => {\n    callback(null, 'public/images');\n  },\n  filename: (req, file, callback) => {\n    //callback(null, Date.now() + '-' + file.originalname);\n    callback(null, uuidv4() + path.extname(file.originalname));\n  }\n});\n\nconst fileFilter = (req, file, callback) => {\n  if (file.mimetype == 'image/png' || file.mimetype == 'image/jpg' || file.mimetype == 'image/jpeg') {\n    callback(null, true);\n  } else {\n    req.fileValidationError = \"Estensione non consentita solo: 'image/jpg' | 'image/png' | 'image/jpeg'\";\n    callback(null, false);\n  }\n};\n\nvar upload = multer({\n  storage: storage,\n  fileFilter: fileFilter\n});\nvar cpUpload = upload.single('image');\nrouter.post('/ticket', [isAuth, cpUpload], [body('title').trim().isLowercase().withMessage('Titolo LowerCase').isLength({\n  min: 3\n}).withMessage('Titolo Maggiore di 3 Caratteri')], reservationController.createTicket);\nrouter.get('/ticket/user/me', isAuth, reservationController.getTicketsByMe);\nrouter.get('/ticket/user/me/search', isAuth, reservationController.searchTicketByMe);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc2VydmF0aW9uLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwiYm9keSIsInF1ZXJ5Iiwicm91dGVyIiwiUm91dGVyIiwiaXNBdXRoIiwicmVzZXJ2YXRpb25Db250cm9sbGVyIiwicGF0aCIsIm11bHRlciIsInV1aWR2NCIsInN0b3JhZ2UiLCJkaXNrU3RvcmFnZSIsImRlc3RpbmF0aW9uIiwicmVxIiwiZmlsZSIsImNhbGxiYWNrIiwiZmlsZW5hbWUiLCJleHRuYW1lIiwib3JpZ2luYWxuYW1lIiwiZmlsZUZpbHRlciIsIm1pbWV0eXBlIiwiZmlsZVZhbGlkYXRpb25FcnJvciIsInVwbG9hZCIsImNwVXBsb2FkIiwic2luZ2xlIiwicG9zdCIsInRyaW0iLCJpc0xvd2VyY2FzZSIsIndpdGhNZXNzYWdlIiwiaXNMZW5ndGgiLCJtaW4iLCJjcmVhdGVUaWNrZXQiLCJnZXQiLCJnZXRUaWNrZXRzQnlNZSIsInNlYXJjaFRpY2tldEJ5TWUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLE1BQU07QUFBRUMsRUFBQUEsSUFBRjtBQUFRQyxFQUFBQTtBQUFSLElBQWtCRixPQUFPLENBQUMseUJBQUQsQ0FBL0I7O0FBQ0EsTUFBTUcsTUFBTSxHQUFHSixPQUFPLENBQUNLLE1BQVIsRUFBZjs7QUFFQSxNQUFNQyxNQUFNLEdBQUdMLE9BQU8sQ0FBQyx1QkFBRCxDQUF0Qjs7QUFFQSxNQUFNTSxxQkFBcUIsR0FBR04sT0FBTyxDQUFDLDRCQUFELENBQXJDOztBQUVBLE1BQU1PLElBQUksR0FBR1AsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsTUFBTVEsTUFBTSxHQUFHUixPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFDQSxNQUFNUyxNQUFNLEdBQUdULE9BQU8sQ0FBQyxTQUFELENBQXRCOztBQUVBLE1BQU1VLE9BQU8sR0FBR0YsTUFBTSxDQUFDRyxXQUFQLENBQW1CO0FBQy9CQyxFQUFBQSxXQUFXLEVBQUcsQ0FBQ0MsR0FBRCxFQUFNQyxJQUFOLEVBQVlDLFFBQVosS0FBeUI7QUFDbkNBLElBQUFBLFFBQVEsQ0FBQyxJQUFELEVBQU8sZUFBUCxDQUFSO0FBQ0gsR0FIOEI7QUFJL0JDLEVBQUFBLFFBQVEsRUFBRyxDQUFDSCxHQUFELEVBQU1DLElBQU4sRUFBWUMsUUFBWixLQUF5QjtBQUNoQztBQUNBQSxJQUFBQSxRQUFRLENBQUMsSUFBRCxFQUFPTixNQUFNLEtBQUtGLElBQUksQ0FBQ1UsT0FBTCxDQUFhSCxJQUFJLENBQUNJLFlBQWxCLENBQWxCLENBQVI7QUFDSDtBQVA4QixDQUFuQixDQUFoQjs7QUFVQSxNQUFNQyxVQUFVLEdBQUksQ0FBQ04sR0FBRCxFQUFNQyxJQUFOLEVBQVlDLFFBQVosS0FBeUI7QUFDekMsTUFBR0QsSUFBSSxDQUFDTSxRQUFMLElBQWlCLFdBQWpCLElBQWdDTixJQUFJLENBQUNNLFFBQUwsSUFBaUIsV0FBakQsSUFBZ0VOLElBQUksQ0FBQ00sUUFBTCxJQUFpQixZQUFwRixFQUFrRztBQUM5RkwsSUFBQUEsUUFBUSxDQUFDLElBQUQsRUFBTyxJQUFQLENBQVI7QUFDSCxHQUZELE1BRU87QUFDSEYsSUFBQUEsR0FBRyxDQUFDUSxtQkFBSixHQUEwQiwwRUFBMUI7QUFDQU4sSUFBQUEsUUFBUSxDQUFDLElBQUQsRUFBTyxLQUFQLENBQVI7QUFDSDtBQUNKLENBUEQ7O0FBU0EsSUFBSU8sTUFBTSxHQUFHZCxNQUFNLENBQUM7QUFBRUUsRUFBQUEsT0FBTyxFQUFHQSxPQUFaO0FBQXFCUyxFQUFBQSxVQUFVLEVBQUdBO0FBQWxDLENBQUQsQ0FBbkI7QUFFQSxJQUFJSSxRQUFRLEdBQUdELE1BQU0sQ0FBQ0UsTUFBUCxDQUFjLE9BQWQsQ0FBZjtBQUVBckIsTUFBTSxDQUFDc0IsSUFBUCxDQUFZLFNBQVosRUFBdUIsQ0FBQ3BCLE1BQUQsRUFBU2tCLFFBQVQsQ0FBdkIsRUFDSSxDQUNJdEIsSUFBSSxDQUFDLE9BQUQsQ0FBSixDQUFjeUIsSUFBZCxHQUNDQyxXQURELEdBQ2VDLFdBRGYsQ0FDMkIsa0JBRDNCLEVBRUNDLFFBRkQsQ0FFVTtBQUFDQyxFQUFBQSxHQUFHLEVBQUc7QUFBUCxDQUZWLEVBRXFCRixXQUZyQixDQUVpQyxnQ0FGakMsQ0FESixDQURKLEVBTUN0QixxQkFBcUIsQ0FBQ3lCLFlBTnZCO0FBT0E1QixNQUFNLENBQUM2QixHQUFQLENBQVcsaUJBQVgsRUFBOEIzQixNQUE5QixFQUFxQ0MscUJBQXFCLENBQUMyQixjQUEzRDtBQUNBOUIsTUFBTSxDQUFDNkIsR0FBUCxDQUFXLHdCQUFYLEVBQXFDM0IsTUFBckMsRUFBNkNDLHFCQUFxQixDQUFDNEIsZ0JBQW5FO0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmpDLE1BQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9BbGVzc2FuZHJvX011c29saW5vL0Rlc2t0b3AvSHlwZXJtZWRpYS9EcmVhbUxhbmRGZXN0aXZhbF8vcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbmNvbnN0IHsgYm9keSwgcXVlcnkgfSA9IHJlcXVpcmUoJ2V4cHJlc3MtdmFsaWRhdG9yL2NoZWNrJyk7XG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuXG5jb25zdCBpc0F1dGggPSByZXF1aXJlKCcuLi9taWRkbGV3YXJlL2lzLWF1dGgnKTtcblxuY29uc3QgcmVzZXJ2YXRpb25Db250cm9sbGVyID0gcmVxdWlyZSgnLi4vY29udHJvbGxlcnMvcmVzZXJ2YXRpb24nKTtcblxuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbmNvbnN0IG11bHRlciA9IHJlcXVpcmUoJ211bHRlcicpO1xuY29uc3QgdXVpZHY0ID0gcmVxdWlyZSgndXVpZC92NCcpO1xuXG5jb25zdCBzdG9yYWdlID0gbXVsdGVyLmRpc2tTdG9yYWdlKHtcbiAgICBkZXN0aW5hdGlvbiA6IChyZXEsIGZpbGUsIGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIGNhbGxiYWNrKG51bGwsICdwdWJsaWMvaW1hZ2VzJyk7XG4gICAgfSxcbiAgICBmaWxlbmFtZSA6IChyZXEsIGZpbGUsIGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIC8vY2FsbGJhY2sobnVsbCwgRGF0ZS5ub3coKSArICctJyArIGZpbGUub3JpZ2luYWxuYW1lKTtcbiAgICAgICAgY2FsbGJhY2sobnVsbCwgdXVpZHY0KCkgKyBwYXRoLmV4dG5hbWUoZmlsZS5vcmlnaW5hbG5hbWUpKTtcbiAgICB9LFxufSk7XG5cbmNvbnN0IGZpbGVGaWx0ZXIgPSAoKHJlcSwgZmlsZSwgY2FsbGJhY2spID0+IHtcbiAgICBpZihmaWxlLm1pbWV0eXBlID09ICdpbWFnZS9wbmcnIHx8IGZpbGUubWltZXR5cGUgPT0gJ2ltYWdlL2pwZycgfHwgZmlsZS5taW1ldHlwZSA9PSAnaW1hZ2UvanBlZycpIHtcbiAgICAgICAgY2FsbGJhY2sobnVsbCwgdHJ1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmVxLmZpbGVWYWxpZGF0aW9uRXJyb3IgPSBcIkVzdGVuc2lvbmUgbm9uIGNvbnNlbnRpdGEgc29sbzogJ2ltYWdlL2pwZycgfCAnaW1hZ2UvcG5nJyB8ICdpbWFnZS9qcGVnJ1wiO1xuICAgICAgICBjYWxsYmFjayhudWxsLCBmYWxzZSk7XG4gICAgfVxufSk7XG5cbnZhciB1cGxvYWQgPSBtdWx0ZXIoeyBzdG9yYWdlIDogc3RvcmFnZSwgZmlsZUZpbHRlciA6IGZpbGVGaWx0ZXJ9KTtcblxudmFyIGNwVXBsb2FkID0gdXBsb2FkLnNpbmdsZSgnaW1hZ2UnKTtcblxucm91dGVyLnBvc3QoJy90aWNrZXQnLCBbaXNBdXRoLCBjcFVwbG9hZF0sXG4gICAgW1xuICAgICAgICBib2R5KCd0aXRsZScpLnRyaW0oKVxuICAgICAgICAuaXNMb3dlcmNhc2UoKS53aXRoTWVzc2FnZSgnVGl0b2xvIExvd2VyQ2FzZScpXG4gICAgICAgIC5pc0xlbmd0aCh7bWluIDogM30pLndpdGhNZXNzYWdlKCdUaXRvbG8gTWFnZ2lvcmUgZGkgMyBDYXJhdHRlcmknKSxcbiAgICBdXG4scmVzZXJ2YXRpb25Db250cm9sbGVyLmNyZWF0ZVRpY2tldCk7XG5yb3V0ZXIuZ2V0KCcvdGlja2V0L3VzZXIvbWUnLCBpc0F1dGgscmVzZXJ2YXRpb25Db250cm9sbGVyLmdldFRpY2tldHNCeU1lKTtcbnJvdXRlci5nZXQoJy90aWNrZXQvdXNlci9tZS9zZWFyY2gnLCBpc0F1dGgsIHJlc2VydmF0aW9uQ29udHJvbGxlci5zZWFyY2hUaWNrZXRCeU1lKTtcblxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "reservation.js"
      ],
      "names": [
        "express",
        "require",
        "body",
        "query",
        "router",
        "Router",
        "isAuth",
        "reservationController",
        "path",
        "multer",
        "uuidv4",
        "storage",
        "diskStorage",
        "destination",
        "req",
        "file",
        "callback",
        "filename",
        "extname",
        "originalname",
        "fileFilter",
        "mimetype",
        "fileValidationError",
        "upload",
        "cpUpload",
        "single",
        "post",
        "trim",
        "isLowercase",
        "withMessage",
        "isLength",
        "min",
        "createTicket",
        "get",
        "getTicketsByMe",
        "searchTicketByMe",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAM;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,IAAkBF,OAAO,CAAC,yBAAD,CAA/B;;AACA,MAAMG,MAAM,GAAGJ,OAAO,CAACK,MAAR,EAAf;;AAEA,MAAMC,MAAM,GAAGL,OAAO,CAAC,uBAAD,CAAtB;;AAEA,MAAMM,qBAAqB,GAAGN,OAAO,CAAC,4BAAD,CAArC;;AAEA,MAAMO,IAAI,GAAGP,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMQ,MAAM,GAAGR,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMS,MAAM,GAAGT,OAAO,CAAC,SAAD,CAAtB;;AAEA,MAAMU,OAAO,GAAGF,MAAM,CAACG,WAAP,CAAmB;AAC/BC,EAAAA,WAAW,EAAG,CAACC,GAAD,EAAMC,IAAN,EAAYC,QAAZ,KAAyB;AACnCA,IAAAA,QAAQ,CAAC,IAAD,EAAO,eAAP,CAAR;AACH,GAH8B;AAI/BC,EAAAA,QAAQ,EAAG,CAACH,GAAD,EAAMC,IAAN,EAAYC,QAAZ,KAAyB;AAChC;AACAA,IAAAA,QAAQ,CAAC,IAAD,EAAON,MAAM,KAAKF,IAAI,CAACU,OAAL,CAAaH,IAAI,CAACI,YAAlB,CAAlB,CAAR;AACH;AAP8B,CAAnB,CAAhB;;AAUA,MAAMC,UAAU,GAAI,CAACN,GAAD,EAAMC,IAAN,EAAYC,QAAZ,KAAyB;AACzC,MAAGD,IAAI,CAACM,QAAL,IAAiB,WAAjB,IAAgCN,IAAI,CAACM,QAAL,IAAiB,WAAjD,IAAgEN,IAAI,CAACM,QAAL,IAAiB,YAApF,EAAkG;AAC9FL,IAAAA,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAR;AACH,GAFD,MAEO;AACHF,IAAAA,GAAG,CAACQ,mBAAJ,GAA0B,0EAA1B;AACAN,IAAAA,QAAQ,CAAC,IAAD,EAAO,KAAP,CAAR;AACH;AACJ,CAPD;;AASA,IAAIO,MAAM,GAAGd,MAAM,CAAC;AAAEE,EAAAA,OAAO,EAAGA,OAAZ;AAAqBS,EAAAA,UAAU,EAAGA;AAAlC,CAAD,CAAnB;AAEA,IAAII,QAAQ,GAAGD,MAAM,CAACE,MAAP,CAAc,OAAd,CAAf;AAEArB,MAAM,CAACsB,IAAP,CAAY,SAAZ,EAAuB,CAACpB,MAAD,EAASkB,QAAT,CAAvB,EACI,CACItB,IAAI,CAAC,OAAD,CAAJ,CAAcyB,IAAd,GACCC,WADD,GACeC,WADf,CAC2B,kBAD3B,EAECC,QAFD,CAEU;AAACC,EAAAA,GAAG,EAAG;AAAP,CAFV,EAEqBF,WAFrB,CAEiC,gCAFjC,CADJ,CADJ,EAMCtB,qBAAqB,CAACyB,YANvB;AAOA5B,MAAM,CAAC6B,GAAP,CAAW,iBAAX,EAA8B3B,MAA9B,EAAqCC,qBAAqB,CAAC2B,cAA3D;AACA9B,MAAM,CAAC6B,GAAP,CAAW,wBAAX,EAAqC3B,MAArC,EAA6CC,qBAAqB,CAAC4B,gBAAnE;AAEAC,MAAM,CAACC,OAAP,GAAiBjC,MAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes",
      "sourcesContent": [
        "const express = require('express');\nconst { body, query } = require('express-validator/check');\nconst router = express.Router();\n\nconst isAuth = require('../middleware/is-auth');\n\nconst reservationController = require('../controllers/reservation');\n\nconst path = require('path');\nconst multer = require('multer');\nconst uuidv4 = require('uuid/v4');\n\nconst storage = multer.diskStorage({\n    destination : (req, file, callback) => {\n        callback(null, 'public/images');\n    },\n    filename : (req, file, callback) => {\n        //callback(null, Date.now() + '-' + file.originalname);\n        callback(null, uuidv4() + path.extname(file.originalname));\n    },\n});\n\nconst fileFilter = ((req, file, callback) => {\n    if(file.mimetype == 'image/png' || file.mimetype == 'image/jpg' || file.mimetype == 'image/jpeg') {\n        callback(null, true);\n    } else {\n        req.fileValidationError = \"Estensione non consentita solo: 'image/jpg' | 'image/png' | 'image/jpeg'\";\n        callback(null, false);\n    }\n});\n\nvar upload = multer({ storage : storage, fileFilter : fileFilter});\n\nvar cpUpload = upload.single('image');\n\nrouter.post('/ticket', [isAuth, cpUpload],\n    [\n        body('title').trim()\n        .isLowercase().withMessage('Titolo LowerCase')\n        .isLength({min : 3}).withMessage('Titolo Maggiore di 3 Caratteri'),\n    ]\n,reservationController.createTicket);\nrouter.get('/ticket/user/me', isAuth,reservationController.getTicketsByMe);\nrouter.get('/ticket/user/me/search', isAuth, reservationController.searchTicketByMe);\n\nmodule.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1577469678718
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/middleware\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/middleware/is-auth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"plugins\":[],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/middleware",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/middleware/is-auth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/middleware/is-auth.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/middleware/is-auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/middleware",
        "sourceFileName": "is-auth.js"
      }
    },
    "ast": null,
    "code": "const jwt = require('jsonwebtoken');\n\nconst User = require('../models/user');\n\nmodule.exports = (req, res, next) => {\n  console.log('AUTHORIZATION MIDDLEWARE');\n  console.log(req.get('Authorization'));\n  const auth = req.get('Authorization');\n\n  if (!auth) {\n    return res.status(401).json({\n      message: 'Non autorizzato'\n    });\n  }\n\n  const token = auth.split(' ')[1];\n  let decode;\n\n  try {\n    decode = jwt.verify(token, 'axAYgScUa4Z2UdjgirykmI3iZsSCaPGh');\n  } catch (err) {\n    return res.status(500).json({\n      message: 'Non autorizzato'\n    });\n  }\n\n  if (!decode) {\n    return res.status(401).json({\n      message: 'Non autorizzato'\n    });\n  }\n\n  let userId = decode.id;\n  User.findByPk(userId).then(user => {\n    req.user = user;\n    next();\n  }).catch(err => {\n    return res.status(401).json({\n      message: 'Non autorizzato'\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlzLWF1dGguanMiXSwibmFtZXMiOlsiand0IiwicmVxdWlyZSIsIlVzZXIiLCJtb2R1bGUiLCJleHBvcnRzIiwicmVxIiwicmVzIiwibmV4dCIsImNvbnNvbGUiLCJsb2ciLCJnZXQiLCJhdXRoIiwic3RhdHVzIiwianNvbiIsIm1lc3NhZ2UiLCJ0b2tlbiIsInNwbGl0IiwiZGVjb2RlIiwidmVyaWZ5IiwiZXJyIiwidXNlcklkIiwiaWQiLCJmaW5kQnlQayIsInRoZW4iLCJ1c2VyIiwiY2F0Y2giXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEdBQUcsR0FBR0MsT0FBTyxDQUFDLGNBQUQsQ0FBbkI7O0FBQ0EsTUFBTUMsSUFBSSxHQUFHRCxPQUFPLENBQUMsZ0JBQUQsQ0FBcEI7O0FBRUFFLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUNqQ0MsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksMEJBQVo7QUFDQUQsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlKLEdBQUcsQ0FBQ0ssR0FBSixDQUFRLGVBQVIsQ0FBWjtBQUVBLFFBQU1DLElBQUksR0FBR04sR0FBRyxDQUFDSyxHQUFKLENBQVEsZUFBUixDQUFiOztBQUVBLE1BQUcsQ0FBQ0MsSUFBSixFQUFVO0FBQ04sV0FBT0wsR0FBRyxDQUFDTSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDeEJDLE1BQUFBLE9BQU8sRUFBRztBQURjLEtBQXJCLENBQVA7QUFHSDs7QUFFRCxRQUFNQyxLQUFLLEdBQUdKLElBQUksQ0FBQ0ssS0FBTCxDQUFXLEdBQVgsRUFBZ0IsQ0FBaEIsQ0FBZDtBQUNBLE1BQUlDLE1BQUo7O0FBQ0EsTUFBRztBQUNDQSxJQUFBQSxNQUFNLEdBQUdqQixHQUFHLENBQUNrQixNQUFKLENBQVdILEtBQVgsRUFBa0Isa0NBQWxCLENBQVQ7QUFDSCxHQUZELENBRUMsT0FBTUksR0FBTixFQUFVO0FBQ1AsV0FBT2IsR0FBRyxDQUFDTSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDeEJDLE1BQUFBLE9BQU8sRUFBRztBQURjLEtBQXJCLENBQVA7QUFHSDs7QUFFRCxNQUFHLENBQUNHLE1BQUosRUFBWTtBQUNSLFdBQU9YLEdBQUcsQ0FBQ00sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ3hCQyxNQUFBQSxPQUFPLEVBQUc7QUFEYyxLQUFyQixDQUFQO0FBR0g7O0FBRUQsTUFBSU0sTUFBTSxHQUFHSCxNQUFNLENBQUNJLEVBQXBCO0FBRUFuQixFQUFBQSxJQUFJLENBQUNvQixRQUFMLENBQWNGLE1BQWQsRUFDQ0csSUFERCxDQUNNQyxJQUFJLElBQUk7QUFDVm5CLElBQUFBLEdBQUcsQ0FBQ21CLElBQUosR0FBV0EsSUFBWDtBQUNBakIsSUFBQUEsSUFBSTtBQUNQLEdBSkQsRUFJR2tCLEtBSkgsQ0FJU04sR0FBRyxJQUFJO0FBQ1osV0FBT2IsR0FBRyxDQUFDTSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDeEJDLE1BQUFBLE9BQU8sRUFBRztBQURjLEtBQXJCLENBQVA7QUFHSCxHQVJEO0FBU0gsQ0F2Q0QiLCJzb3VyY2VSb290IjoiL1VzZXJzL0FsZXNzYW5kcm9fTXVzb2xpbm8vRGVza3RvcC9IeXBlcm1lZGlhL0RyZWFtTGFuZEZlc3RpdmFsXy9taWRkbGV3YXJlIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgand0ID0gcmVxdWlyZSgnanNvbndlYnRva2VuJyk7XG5jb25zdCBVc2VyID0gcmVxdWlyZSgnLi4vbW9kZWxzL3VzZXInKTtcblxubW9kdWxlLmV4cG9ydHMgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBjb25zb2xlLmxvZygnQVVUSE9SSVpBVElPTiBNSURETEVXQVJFJyk7XG4gICAgY29uc29sZS5sb2cocmVxLmdldCgnQXV0aG9yaXphdGlvbicpKTtcblxuICAgIGNvbnN0IGF1dGggPSByZXEuZ2V0KCdBdXRob3JpemF0aW9uJyk7XG5cbiAgICBpZighYXV0aCkge1xuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmpzb24oe1xuICAgICAgICAgICAgbWVzc2FnZSA6ICdOb24gYXV0b3JpenphdG8nLFxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBjb25zdCB0b2tlbiA9IGF1dGguc3BsaXQoJyAnKVsxXTtcbiAgICBsZXQgZGVjb2RlO1xuICAgIHRyeXtcbiAgICAgICAgZGVjb2RlID0gand0LnZlcmlmeSh0b2tlbiwgJ2F4QVlnU2NVYTRaMlVkamdpcnlrbUkzaVpzU0NhUEdoJyk7XG4gICAgfWNhdGNoKGVycil7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbih7XG4gICAgICAgICAgICBtZXNzYWdlIDogJ05vbiBhdXRvcml6emF0bycsXG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGlmKCFkZWNvZGUpIHtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5qc29uKHtcbiAgICAgICAgICAgIG1lc3NhZ2UgOiAnTm9uIGF1dG9yaXp6YXRvJyxcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgbGV0IHVzZXJJZCA9IGRlY29kZS5pZDtcbiAgICBcbiAgICBVc2VyLmZpbmRCeVBrKHVzZXJJZClcbiAgICAudGhlbih1c2VyID0+IHtcbiAgICAgICAgcmVxLnVzZXIgPSB1c2VyO1xuICAgICAgICBuZXh0KCk7XG4gICAgfSkuY2F0Y2goZXJyID0+IHtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5qc29uKHtcbiAgICAgICAgICAgIG1lc3NhZ2UgOiAnTm9uIGF1dG9yaXp6YXRvJyxcbiAgICAgICAgfSk7XG4gICAgfSk7XG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "is-auth.js"
      ],
      "names": [
        "jwt",
        "require",
        "User",
        "module",
        "exports",
        "req",
        "res",
        "next",
        "console",
        "log",
        "get",
        "auth",
        "status",
        "json",
        "message",
        "token",
        "split",
        "decode",
        "verify",
        "err",
        "userId",
        "id",
        "findByPk",
        "then",
        "user",
        "catch"
      ],
      "mappings": "AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,gBAAD,CAApB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,GAAJ,CAAQ,eAAR,CAAZ;AAEA,QAAMC,IAAI,GAAGN,GAAG,CAACK,GAAJ,CAAQ,eAAR,CAAb;;AAEA,MAAG,CAACC,IAAJ,EAAU;AACN,WAAOL,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,OAAO,EAAG;AADc,KAArB,CAAP;AAGH;;AAED,QAAMC,KAAK,GAAGJ,IAAI,CAACK,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAd;AACA,MAAIC,MAAJ;;AACA,MAAG;AACCA,IAAAA,MAAM,GAAGjB,GAAG,CAACkB,MAAJ,CAAWH,KAAX,EAAkB,kCAAlB,CAAT;AACH,GAFD,CAEC,OAAMI,GAAN,EAAU;AACP,WAAOb,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,OAAO,EAAG;AADc,KAArB,CAAP;AAGH;;AAED,MAAG,CAACG,MAAJ,EAAY;AACR,WAAOX,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,OAAO,EAAG;AADc,KAArB,CAAP;AAGH;;AAED,MAAIM,MAAM,GAAGH,MAAM,CAACI,EAApB;AAEAnB,EAAAA,IAAI,CAACoB,QAAL,CAAcF,MAAd,EACCG,IADD,CACMC,IAAI,IAAI;AACVnB,IAAAA,GAAG,CAACmB,IAAJ,GAAWA,IAAX;AACAjB,IAAAA,IAAI;AACP,GAJD,EAIGkB,KAJH,CAISN,GAAG,IAAI;AACZ,WAAOb,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,OAAO,EAAG;AADc,KAArB,CAAP;AAGH,GARD;AASH,CAvCD",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/middleware",
      "sourcesContent": [
        "const jwt = require('jsonwebtoken');\nconst User = require('../models/user');\n\nmodule.exports = (req, res, next) => {\n    console.log('AUTHORIZATION MIDDLEWARE');\n    console.log(req.get('Authorization'));\n\n    const auth = req.get('Authorization');\n\n    if(!auth) {\n        return res.status(401).json({\n            message : 'Non autorizzato',\n        });\n    }\n\n    const token = auth.split(' ')[1];\n    let decode;\n    try{\n        decode = jwt.verify(token, 'axAYgScUa4Z2UdjgirykmI3iZsSCaPGh');\n    }catch(err){\n        return res.status(500).json({\n            message : 'Non autorizzato',\n        });\n    }\n\n    if(!decode) {\n        return res.status(401).json({\n            message : 'Non autorizzato',\n        });\n    }\n\n    let userId = decode.id;\n    \n    User.findByPk(userId)\n    .then(user => {\n        req.user = user;\n        next();\n    }).catch(err => {\n        return res.status(401).json({\n            message : 'Non autorizzato',\n        });\n    });\n};"
      ]
    },
    "sourceType": "module",
    "mtime": 1576239096441
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models/user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"plugins\":[],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models/user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models/user.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models/user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst User = sequelize.define('user', {\n  id: {\n    type: Sequelize.INTEGER,\n    autoIncrement: true,\n    allowNull: false,\n    primaryKey: true\n  },\n  name: {\n    type: Sequelize.STRING,\n    allowNull: false\n  },\n  email: {\n    type: Sequelize.STRING,\n    allowNull: false\n  },\n  phoneNumber: {\n    type: Sequelize.STRING,\n    allowNull: false\n  },\n  password: {\n    type: Sequelize.STRING,\n    allowNull: false\n  }\n});\nmodule.exports = User;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsiU2VxdWVsaXplIiwicmVxdWlyZSIsInNlcXVlbGl6ZSIsIlVzZXIiLCJkZWZpbmUiLCJpZCIsInR5cGUiLCJJTlRFR0VSIiwiYXV0b0luY3JlbWVudCIsImFsbG93TnVsbCIsInByaW1hcnlLZXkiLCJuYW1lIiwiU1RSSU5HIiwiZW1haWwiLCJwaG9uZU51bWJlciIsInBhc3N3b3JkIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsU0FBUyxHQUFHQyxPQUFPLENBQUMsV0FBRCxDQUF6Qjs7QUFFQSxNQUFNQyxTQUFTLEdBQUdELE9BQU8sQ0FBQyxtQkFBRCxDQUF6Qjs7QUFFQSxNQUFNRSxJQUFJLEdBQUdELFNBQVMsQ0FBQ0UsTUFBVixDQUFpQixNQUFqQixFQUF5QjtBQUNsQ0MsRUFBQUEsRUFBRSxFQUFHO0FBQ0RDLElBQUFBLElBQUksRUFBR04sU0FBUyxDQUFDTyxPQURoQjtBQUVEQyxJQUFBQSxhQUFhLEVBQUcsSUFGZjtBQUdEQyxJQUFBQSxTQUFTLEVBQUcsS0FIWDtBQUlEQyxJQUFBQSxVQUFVLEVBQUc7QUFKWixHQUQ2QjtBQU9sQ0MsRUFBQUEsSUFBSSxFQUFHO0FBQ0hMLElBQUFBLElBQUksRUFBR04sU0FBUyxDQUFDWSxNQURkO0FBRUhILElBQUFBLFNBQVMsRUFBRztBQUZULEdBUDJCO0FBV2xDSSxFQUFBQSxLQUFLLEVBQUc7QUFDSlAsSUFBQUEsSUFBSSxFQUFHTixTQUFTLENBQUNZLE1BRGI7QUFFSkgsSUFBQUEsU0FBUyxFQUFHO0FBRlIsR0FYMEI7QUFlbENLLEVBQUFBLFdBQVcsRUFBRztBQUNWUixJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ1ksTUFEUDtBQUVWSCxJQUFBQSxTQUFTLEVBQUc7QUFGRixHQWZvQjtBQW1CbENNLEVBQUFBLFFBQVEsRUFBRztBQUNQVCxJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ1ksTUFEVjtBQUVQSCxJQUFBQSxTQUFTLEVBQUc7QUFGTDtBQW5CdUIsQ0FBekIsQ0FBYjtBQXlCQU8sTUFBTSxDQUFDQyxPQUFQLEdBQWlCZCxJQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvQWxlc3NhbmRyb19NdXNvbGluby9EZXNrdG9wL0h5cGVybWVkaWEvRHJlYW1MYW5kRmVzdGl2YWxfL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFNlcXVlbGl6ZSA9IHJlcXVpcmUoJ3NlcXVlbGl6ZScpO1xuXG5jb25zdCBzZXF1ZWxpemUgPSByZXF1aXJlKCcuLi91dGlscy9kYXRhYmFzZScpO1xuXG5jb25zdCBVc2VyID0gc2VxdWVsaXplLmRlZmluZSgndXNlcicsIHtcbiAgICBpZCA6IHtcbiAgICAgICAgdHlwZSA6IFNlcXVlbGl6ZS5JTlRFR0VSLFxuICAgICAgICBhdXRvSW5jcmVtZW50IDogdHJ1ZSxcbiAgICAgICAgYWxsb3dOdWxsIDogZmFsc2UsXG4gICAgICAgIHByaW1hcnlLZXkgOiB0cnVlXG4gICAgfSxcbiAgICBuYW1lIDoge1xuICAgICAgICB0eXBlIDogU2VxdWVsaXplLlNUUklORyxcbiAgICAgICAgYWxsb3dOdWxsIDogZmFsc2UsXG4gICAgfSxcbiAgICBlbWFpbCA6IHtcbiAgICAgICAgdHlwZSA6IFNlcXVlbGl6ZS5TVFJJTkcsXG4gICAgICAgIGFsbG93TnVsbCA6IGZhbHNlLFxuICAgIH0sXG4gICAgcGhvbmVOdW1iZXIgOiB7XG4gICAgICAgIHR5cGUgOiBTZXF1ZWxpemUuU1RSSU5HLFxuICAgICAgICBhbGxvd051bGwgOiBmYWxzZSxcbiAgICB9LFxuICAgIHBhc3N3b3JkIDoge1xuICAgICAgICB0eXBlIDogU2VxdWVsaXplLlNUUklORyxcbiAgICAgICAgYWxsb3dOdWxsIDogZmFsc2UsXG4gICAgfSxcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFVzZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "sequelize",
        "User",
        "define",
        "id",
        "type",
        "INTEGER",
        "autoIncrement",
        "allowNull",
        "primaryKey",
        "name",
        "STRING",
        "email",
        "phoneNumber",
        "password",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,MAAMC,SAAS,GAAGD,OAAO,CAAC,mBAAD,CAAzB;;AAEA,MAAME,IAAI,GAAGD,SAAS,CAACE,MAAV,CAAiB,MAAjB,EAAyB;AAClCC,EAAAA,EAAE,EAAG;AACDC,IAAAA,IAAI,EAAGN,SAAS,CAACO,OADhB;AAEDC,IAAAA,aAAa,EAAG,IAFf;AAGDC,IAAAA,SAAS,EAAG,KAHX;AAIDC,IAAAA,UAAU,EAAG;AAJZ,GAD6B;AAOlCC,EAAAA,IAAI,EAAG;AACHL,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADd;AAEHH,IAAAA,SAAS,EAAG;AAFT,GAP2B;AAWlCI,EAAAA,KAAK,EAAG;AACJP,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADb;AAEJH,IAAAA,SAAS,EAAG;AAFR,GAX0B;AAelCK,EAAAA,WAAW,EAAG;AACVR,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADP;AAEVH,IAAAA,SAAS,EAAG;AAFF,GAfoB;AAmBlCM,EAAAA,QAAQ,EAAG;AACPT,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADV;AAEPH,IAAAA,SAAS,EAAG;AAFL;AAnBuB,CAAzB,CAAb;AAyBAO,MAAM,CAACC,OAAP,GAAiBd,IAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst User = sequelize.define('user', {\n    id : {\n        type : Sequelize.INTEGER,\n        autoIncrement : true,\n        allowNull : false,\n        primaryKey : true\n    },\n    name : {\n        type : Sequelize.STRING,\n        allowNull : false,\n    },\n    email : {\n        type : Sequelize.STRING,\n        allowNull : false,\n    },\n    phoneNumber : {\n        type : Sequelize.STRING,\n        allowNull : false,\n    },\n    password : {\n        type : Sequelize.STRING,\n        allowNull : false,\n    },\n});\n\nmodule.exports = User;"
      ]
    },
    "sourceType": "module",
    "mtime": 1576678769819
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/utils\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/utils/database.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"plugins\":[],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/utils",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/utils/database.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/utils/database.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/utils/database.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/utils",
        "sourceFileName": "database.js"
      }
    },
    "ast": null,
    "code": "const Sequelize = require('sequelize');\n\nconst sequelize = new Sequelize(process.env.NODE_DATABASE, process.env.NODE_DATABASE_USER, process.env.NODE_DATABASE_PW, {\n  dialect: 'mysql',\n  host: process.env.NODE_DATABASE_URL\n});\nmodule.exports = sequelize;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGFiYXNlLmpzIl0sIm5hbWVzIjpbIlNlcXVlbGl6ZSIsInJlcXVpcmUiLCJzZXF1ZWxpemUiLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9EQVRBQkFTRSIsIk5PREVfREFUQUJBU0VfVVNFUiIsIk5PREVfREFUQUJBU0VfUFciLCJkaWFsZWN0IiwiaG9zdCIsIk5PREVfREFUQUJBU0VfVVJMIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsU0FBUyxHQUFHQyxPQUFPLENBQUMsV0FBRCxDQUF6Qjs7QUFFQSxNQUFNQyxTQUFTLEdBQUcsSUFBSUYsU0FBSixDQUFjRyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsYUFBMUIsRUFDZEYsT0FBTyxDQUFDQyxHQUFSLENBQVlFLGtCQURFLEVBRWRILE9BQU8sQ0FBQ0MsR0FBUixDQUFZRyxnQkFGRSxFQUdsQjtBQUNJQyxFQUFBQSxPQUFPLEVBQUcsT0FEZDtBQUVJQyxFQUFBQSxJQUFJLEVBQUdOLE9BQU8sQ0FBQ0MsR0FBUixDQUFZTTtBQUZ2QixDQUhrQixDQUFsQjtBQVNBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJWLFNBQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9BbGVzc2FuZHJvX011c29saW5vL0Rlc2t0b3AvSHlwZXJtZWRpYS9EcmVhbUxhbmRGZXN0aXZhbF8vdXRpbHMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBTZXF1ZWxpemUgPSByZXF1aXJlKCdzZXF1ZWxpemUnKTtcblxuY29uc3Qgc2VxdWVsaXplID0gbmV3IFNlcXVlbGl6ZShwcm9jZXNzLmVudi5OT0RFX0RBVEFCQVNFLCBcbiAgICBwcm9jZXNzLmVudi5OT0RFX0RBVEFCQVNFX1VTRVIsIFxuICAgIHByb2Nlc3MuZW52Lk5PREVfREFUQUJBU0VfUFcsIFxue1xuICAgIGRpYWxlY3QgOiAnbXlzcWwnLFxuICAgIGhvc3QgOiBwcm9jZXNzLmVudi5OT0RFX0RBVEFCQVNFX1VSTFxufVxuKTtcblxubW9kdWxlLmV4cG9ydHMgPSBzZXF1ZWxpemU7Il19",
    "map": {
      "version": 3,
      "sources": [
        "database.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "sequelize",
        "process",
        "env",
        "NODE_DATABASE",
        "NODE_DATABASE_USER",
        "NODE_DATABASE_PW",
        "dialect",
        "host",
        "NODE_DATABASE_URL",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,MAAMC,SAAS,GAAG,IAAIF,SAAJ,CAAcG,OAAO,CAACC,GAAR,CAAYC,aAA1B,EACdF,OAAO,CAACC,GAAR,CAAYE,kBADE,EAEdH,OAAO,CAACC,GAAR,CAAYG,gBAFE,EAGlB;AACIC,EAAAA,OAAO,EAAG,OADd;AAEIC,EAAAA,IAAI,EAAGN,OAAO,CAACC,GAAR,CAAYM;AAFvB,CAHkB,CAAlB;AASAC,MAAM,CAACC,OAAP,GAAiBV,SAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/utils",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\n\nconst sequelize = new Sequelize(process.env.NODE_DATABASE, \n    process.env.NODE_DATABASE_USER, \n    process.env.NODE_DATABASE_PW, \n{\n    dialect : 'mysql',\n    host : process.env.NODE_DATABASE_URL\n}\n);\n\nmodule.exports = sequelize;"
      ]
    },
    "sourceType": "module",
    "mtime": 1577537061647
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers/reservation.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"plugins\":[],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers/reservation.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers/reservation.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers/reservation.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers",
        "sourceFileName": "reservation.js"
      }
    },
    "ast": null,
    "code": "const {\n  validationResult\n} = require('express-validator/check');\n\nconst Sequelize = require('sequelize');\n\nconst Op = Sequelize.Op;\n\nconst path = require('path');\n\nconst fs = require('fs');\n\nconst Ticket = require('../models/ticket');\n\nconst User = require('../models/user');\n\nexports.getTicketsByMe = (req, res, next) => {\n  req.user.getTickets().then(tickets => {\n    res.json({\n      tickets: tickets\n    });\n  }).catch(err => console.log(err));\n};\n\nexports.searchTicketByMe = (req, res, next) => {\n  const title = '%' + req.query.title + '%';\n  Ticket.findAll({\n    where: {\n      title: {\n        [Op.like]: title\n      },\n      userId: req.user.id\n    }\n  }).then(tickets => {\n    res.json({\n      tickets: tickets\n    });\n  }).catch(err => console.log(err));\n};\n\nexports.createTicket = (req, res, next) => {\n  const errors = validationResult(req);\n\n  if (!errors.isEmpty()) {\n    return res.status(422).json({\n      message: 'Errore input parametri',\n      error: errors.array()\n    });\n  }\n\n  const title = req.body.title;\n  const date = req.body.date;\n  const name = req.body.name; //INSERT NEL DATABASE  \n\n  req.user.createTicket({\n    title: title,\n    date: date,\n    name: name\n  }).then(ticket => {\n    res.status(201).json({\n      messages: 'Success Operation',\n      ticket: ticket\n    });\n  }).catch(err => {\n    return res.status(422).json({\n      message: 'Error nel Salvataggio'\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc2VydmF0aW9uLmpzIl0sIm5hbWVzIjpbInZhbGlkYXRpb25SZXN1bHQiLCJyZXF1aXJlIiwiU2VxdWVsaXplIiwiT3AiLCJwYXRoIiwiZnMiLCJUaWNrZXQiLCJVc2VyIiwiZXhwb3J0cyIsImdldFRpY2tldHNCeU1lIiwicmVxIiwicmVzIiwibmV4dCIsInVzZXIiLCJnZXRUaWNrZXRzIiwidGhlbiIsInRpY2tldHMiLCJqc29uIiwiY2F0Y2giLCJlcnIiLCJjb25zb2xlIiwibG9nIiwic2VhcmNoVGlja2V0QnlNZSIsInRpdGxlIiwicXVlcnkiLCJmaW5kQWxsIiwid2hlcmUiLCJsaWtlIiwidXNlcklkIiwiaWQiLCJjcmVhdGVUaWNrZXQiLCJlcnJvcnMiLCJpc0VtcHR5Iiwic3RhdHVzIiwibWVzc2FnZSIsImVycm9yIiwiYXJyYXkiLCJib2R5IiwiZGF0ZSIsIm5hbWUiLCJ0aWNrZXQiLCJtZXNzYWdlcyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtBQUFFQSxFQUFBQTtBQUFGLElBQXVCQyxPQUFPLENBQUMseUJBQUQsQ0FBcEM7O0FBQ0EsTUFBTUMsU0FBUyxHQUFHRCxPQUFPLENBQUMsV0FBRCxDQUF6Qjs7QUFDQSxNQUFNRSxFQUFFLEdBQUdELFNBQVMsQ0FBQ0MsRUFBckI7O0FBQ0EsTUFBTUMsSUFBSSxHQUFHSCxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxNQUFNSSxFQUFFLEdBQUdKLE9BQU8sQ0FBQyxJQUFELENBQWxCOztBQUVBLE1BQU1LLE1BQU0sR0FBR0wsT0FBTyxDQUFDLGtCQUFELENBQXRCOztBQUNBLE1BQU1NLElBQUksR0FBR04sT0FBTyxDQUFDLGdCQUFELENBQXBCOztBQUVBTyxPQUFPLENBQUNDLGNBQVIsR0FBeUIsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsS0FBb0I7QUFDekNGLEVBQUFBLEdBQUcsQ0FBQ0csSUFBSixDQUFTQyxVQUFULEdBQXNCQyxJQUF0QixDQUE0QkMsT0FBRCxJQUFhO0FBQ3BDTCxJQUFBQSxHQUFHLENBQUNNLElBQUosQ0FBUztBQUFDRCxNQUFBQSxPQUFPLEVBQUdBO0FBQVgsS0FBVDtBQUNILEdBRkQsRUFFR0UsS0FGSCxDQUdJQyxHQUFHLElBQUlDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixHQUFaLENBSFg7QUFLSCxDQU5EOztBQVFBWCxPQUFPLENBQUNjLGdCQUFSLEdBQTJCLENBQUNaLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEtBQW9CO0FBQzNDLFFBQU1XLEtBQUssR0FBRyxNQUFNYixHQUFHLENBQUNjLEtBQUosQ0FBVUQsS0FBaEIsR0FBd0IsR0FBdEM7QUFDQWpCLEVBQUFBLE1BQU0sQ0FBQ21CLE9BQVAsQ0FBZTtBQUFDQyxJQUFBQSxLQUFLLEVBQUc7QUFBQ0gsTUFBQUEsS0FBSyxFQUFHO0FBQUMsU0FBQ3BCLEVBQUUsQ0FBQ3dCLElBQUosR0FBWUo7QUFBYixPQUFUO0FBQThCSyxNQUFBQSxNQUFNLEVBQUdsQixHQUFHLENBQUNHLElBQUosQ0FBU2dCO0FBQWhEO0FBQVQsR0FBZixFQUNDZCxJQURELENBQ09DLE9BQUQsSUFBYTtBQUNmTCxJQUFBQSxHQUFHLENBQUNNLElBQUosQ0FBUztBQUFDRCxNQUFBQSxPQUFPLEVBQUdBO0FBQVgsS0FBVDtBQUNILEdBSEQsRUFHR0UsS0FISCxDQUlJQyxHQUFHLElBQUlDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixHQUFaLENBSlg7QUFNSCxDQVJEOztBQVVBWCxPQUFPLENBQUNzQixZQUFSLEdBQXVCLENBQUNwQixHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUN2QyxRQUFNbUIsTUFBTSxHQUFHL0IsZ0JBQWdCLENBQUNVLEdBQUQsQ0FBL0I7O0FBRUEsTUFBRyxDQUFDcUIsTUFBTSxDQUFDQyxPQUFQLEVBQUosRUFBc0I7QUFDbEIsV0FBT3JCLEdBQUcsQ0FBQ3NCLE1BQUosQ0FBVyxHQUFYLEVBQWdCaEIsSUFBaEIsQ0FBcUI7QUFDeEJpQixNQUFBQSxPQUFPLEVBQUcsd0JBRGM7QUFFeEJDLE1BQUFBLEtBQUssRUFBR0osTUFBTSxDQUFDSyxLQUFQO0FBRmdCLEtBQXJCLENBQVA7QUFJSDs7QUFFRCxRQUFNYixLQUFLLEdBQUdiLEdBQUcsQ0FBQzJCLElBQUosQ0FBU2QsS0FBdkI7QUFDQSxRQUFNZSxJQUFJLEdBQUc1QixHQUFHLENBQUMyQixJQUFKLENBQVNDLElBQXRCO0FBQ0EsUUFBTUMsSUFBSSxHQUFHN0IsR0FBRyxDQUFDMkIsSUFBSixDQUFTRSxJQUF0QixDQVp1QyxDQWF2Qzs7QUFDQTdCLEVBQUFBLEdBQUcsQ0FBQ0csSUFBSixDQUFTaUIsWUFBVCxDQUFzQjtBQUNsQlAsSUFBQUEsS0FBSyxFQUFHQSxLQURVO0FBRWxCZSxJQUFBQSxJQUFJLEVBQUdBLElBRlc7QUFHbEJDLElBQUFBLElBQUksRUFBR0E7QUFIVyxHQUF0QixFQUlHeEIsSUFKSCxDQUlTeUIsTUFBRCxJQUFZO0FBQ2hCN0IsSUFBQUEsR0FBRyxDQUFDc0IsTUFBSixDQUFXLEdBQVgsRUFBZ0JoQixJQUFoQixDQUFxQjtBQUNqQndCLE1BQUFBLFFBQVEsRUFBRyxtQkFETTtBQUVqQkQsTUFBQUEsTUFBTSxFQUFHQTtBQUZRLEtBQXJCO0FBSUgsR0FURCxFQVNHdEIsS0FUSCxDQVNVQyxHQUFHLElBQUk7QUFDZCxXQUFPUixHQUFHLENBQUNzQixNQUFKLENBQVcsR0FBWCxFQUFnQmhCLElBQWhCLENBQXFCO0FBQ3hCaUIsTUFBQUEsT0FBTyxFQUFHO0FBRGMsS0FBckIsQ0FBUDtBQUdGLEdBYkQ7QUFjSCxDQTVCRCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvQWxlc3NhbmRyb19NdXNvbGluby9EZXNrdG9wL0h5cGVybWVkaWEvRHJlYW1MYW5kRmVzdGl2YWxfL2NvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyB2YWxpZGF0aW9uUmVzdWx0IH0gPSByZXF1aXJlKCdleHByZXNzLXZhbGlkYXRvci9jaGVjaycpO1xuY29uc3QgU2VxdWVsaXplID0gcmVxdWlyZSgnc2VxdWVsaXplJyk7XG5jb25zdCBPcCA9IFNlcXVlbGl6ZS5PcDtcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5jb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG5cbmNvbnN0IFRpY2tldCA9IHJlcXVpcmUoJy4uL21vZGVscy90aWNrZXQnKTtcbmNvbnN0IFVzZXIgPSByZXF1aXJlKCcuLi9tb2RlbHMvdXNlcicpO1xuXG5leHBvcnRzLmdldFRpY2tldHNCeU1lID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgcmVxLnVzZXIuZ2V0VGlja2V0cygpLnRoZW4oKHRpY2tldHMpID0+IHtcbiAgICAgICAgcmVzLmpzb24oe3RpY2tldHMgOiB0aWNrZXRzfSk7XG4gICAgfSkuY2F0Y2goXG4gICAgICAgIGVyciA9PiBjb25zb2xlLmxvZyhlcnIpXG4gICAgKTtcbn07XG5cbmV4cG9ydHMuc2VhcmNoVGlja2V0QnlNZSA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIGNvbnN0IHRpdGxlID0gJyUnICsgcmVxLnF1ZXJ5LnRpdGxlICsgJyUnO1xuICAgIFRpY2tldC5maW5kQWxsKHt3aGVyZSA6IHt0aXRsZSA6IHtbT3AubGlrZV0gOiB0aXRsZX0sIHVzZXJJZCA6IHJlcS51c2VyLmlkfX0pXG4gICAgLnRoZW4oKHRpY2tldHMpID0+IHtcbiAgICAgICAgcmVzLmpzb24oe3RpY2tldHMgOiB0aWNrZXRzfSk7XG4gICAgfSkuY2F0Y2goXG4gICAgICAgIGVyciA9PiBjb25zb2xlLmxvZyhlcnIpXG4gICAgKTtcbn07XG5cbmV4cG9ydHMuY3JlYXRlVGlja2V0ID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgY29uc3QgZXJyb3JzID0gdmFsaWRhdGlvblJlc3VsdChyZXEpO1xuICAgIFxuICAgIGlmKCFlcnJvcnMuaXNFbXB0eSgpKSB7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQyMikuanNvbih7XG4gICAgICAgICAgICBtZXNzYWdlIDogJ0Vycm9yZSBpbnB1dCBwYXJhbWV0cmknLFxuICAgICAgICAgICAgZXJyb3IgOiBlcnJvcnMuYXJyYXkoKVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBjb25zdCB0aXRsZSA9IHJlcS5ib2R5LnRpdGxlO1xuICAgIGNvbnN0IGRhdGUgPSByZXEuYm9keS5kYXRlO1xuICAgIGNvbnN0IG5hbWUgPSByZXEuYm9keS5uYW1lO1xuICAgIC8vSU5TRVJUIE5FTCBEQVRBQkFTRSAgXG4gICAgcmVxLnVzZXIuY3JlYXRlVGlja2V0KHtcbiAgICAgICAgdGl0bGUgOiB0aXRsZSxcbiAgICAgICAgZGF0ZSA6IGRhdGUsXG4gICAgICAgIG5hbWUgOiBuYW1lXG4gICAgfSkudGhlbigodGlja2V0KSA9PiB7XG4gICAgICAgIHJlcy5zdGF0dXMoMjAxKS5qc29uKHtcbiAgICAgICAgICAgIG1lc3NhZ2VzIDogJ1N1Y2Nlc3MgT3BlcmF0aW9uJyxcbiAgICAgICAgICAgIHRpY2tldCA6IHRpY2tldFxuICAgICAgICB9KTtcbiAgICB9KS5jYXRjaCggZXJyID0+IHtcbiAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MjIpLmpzb24oe1xuICAgICAgICAgICBtZXNzYWdlIDogJ0Vycm9yIG5lbCBTYWx2YXRhZ2dpbydcbiAgICAgICB9KVxuICAgIH0pO1xufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "reservation.js"
      ],
      "names": [
        "validationResult",
        "require",
        "Sequelize",
        "Op",
        "path",
        "fs",
        "Ticket",
        "User",
        "exports",
        "getTicketsByMe",
        "req",
        "res",
        "next",
        "user",
        "getTickets",
        "then",
        "tickets",
        "json",
        "catch",
        "err",
        "console",
        "log",
        "searchTicketByMe",
        "title",
        "query",
        "findAll",
        "where",
        "like",
        "userId",
        "id",
        "createTicket",
        "errors",
        "isEmpty",
        "status",
        "message",
        "error",
        "array",
        "body",
        "date",
        "name",
        "ticket",
        "messages"
      ],
      "mappings": "AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAuBC,OAAO,CAAC,yBAAD,CAApC;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,WAAD,CAAzB;;AACA,MAAME,EAAE,GAAGD,SAAS,CAACC,EAArB;;AACA,MAAMC,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMI,EAAE,GAAGJ,OAAO,CAAC,IAAD,CAAlB;;AAEA,MAAMK,MAAM,GAAGL,OAAO,CAAC,kBAAD,CAAtB;;AACA,MAAMM,IAAI,GAAGN,OAAO,CAAC,gBAAD,CAApB;;AAEAO,OAAO,CAACC,cAAR,GAAyB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACzCF,EAAAA,GAAG,CAACG,IAAJ,CAASC,UAAT,GAAsBC,IAAtB,CAA4BC,OAAD,IAAa;AACpCL,IAAAA,GAAG,CAACM,IAAJ,CAAS;AAACD,MAAAA,OAAO,EAAGA;AAAX,KAAT;AACH,GAFD,EAEGE,KAFH,CAGIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAHX;AAKH,CAND;;AAQAX,OAAO,CAACc,gBAAR,GAA2B,CAACZ,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAC3C,QAAMW,KAAK,GAAG,MAAMb,GAAG,CAACc,KAAJ,CAAUD,KAAhB,GAAwB,GAAtC;AACAjB,EAAAA,MAAM,CAACmB,OAAP,CAAe;AAACC,IAAAA,KAAK,EAAG;AAACH,MAAAA,KAAK,EAAG;AAAC,SAACpB,EAAE,CAACwB,IAAJ,GAAYJ;AAAb,OAAT;AAA8BK,MAAAA,MAAM,EAAGlB,GAAG,CAACG,IAAJ,CAASgB;AAAhD;AAAT,GAAf,EACCd,IADD,CACOC,OAAD,IAAa;AACfL,IAAAA,GAAG,CAACM,IAAJ,CAAS;AAACD,MAAAA,OAAO,EAAGA;AAAX,KAAT;AACH,GAHD,EAGGE,KAHH,CAIIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJX;AAMH,CARD;;AAUAX,OAAO,CAACsB,YAAR,GAAuB,CAACpB,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACvC,QAAMmB,MAAM,GAAG/B,gBAAgB,CAACU,GAAD,CAA/B;;AAEA,MAAG,CAACqB,MAAM,CAACC,OAAP,EAAJ,EAAsB;AAClB,WAAOrB,GAAG,CAACsB,MAAJ,CAAW,GAAX,EAAgBhB,IAAhB,CAAqB;AACxBiB,MAAAA,OAAO,EAAG,wBADc;AAExBC,MAAAA,KAAK,EAAGJ,MAAM,CAACK,KAAP;AAFgB,KAArB,CAAP;AAIH;;AAED,QAAMb,KAAK,GAAGb,GAAG,CAAC2B,IAAJ,CAASd,KAAvB;AACA,QAAMe,IAAI,GAAG5B,GAAG,CAAC2B,IAAJ,CAASC,IAAtB;AACA,QAAMC,IAAI,GAAG7B,GAAG,CAAC2B,IAAJ,CAASE,IAAtB,CAZuC,CAavC;;AACA7B,EAAAA,GAAG,CAACG,IAAJ,CAASiB,YAAT,CAAsB;AAClBP,IAAAA,KAAK,EAAGA,KADU;AAElBe,IAAAA,IAAI,EAAGA,IAFW;AAGlBC,IAAAA,IAAI,EAAGA;AAHW,GAAtB,EAIGxB,IAJH,CAISyB,MAAD,IAAY;AAChB7B,IAAAA,GAAG,CAACsB,MAAJ,CAAW,GAAX,EAAgBhB,IAAhB,CAAqB;AACjBwB,MAAAA,QAAQ,EAAG,mBADM;AAEjBD,MAAAA,MAAM,EAAGA;AAFQ,KAArB;AAIH,GATD,EASGtB,KATH,CASUC,GAAG,IAAI;AACd,WAAOR,GAAG,CAACsB,MAAJ,CAAW,GAAX,EAAgBhB,IAAhB,CAAqB;AACxBiB,MAAAA,OAAO,EAAG;AADc,KAArB,CAAP;AAGF,GAbD;AAcH,CA5BD",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers",
      "sourcesContent": [
        "const { validationResult } = require('express-validator/check');\nconst Sequelize = require('sequelize');\nconst Op = Sequelize.Op;\nconst path = require('path');\nconst fs = require('fs');\n\nconst Ticket = require('../models/ticket');\nconst User = require('../models/user');\n\nexports.getTicketsByMe = (req, res, next) => {\n    req.user.getTickets().then((tickets) => {\n        res.json({tickets : tickets});\n    }).catch(\n        err => console.log(err)\n    );\n};\n\nexports.searchTicketByMe = (req, res, next) => {\n    const title = '%' + req.query.title + '%';\n    Ticket.findAll({where : {title : {[Op.like] : title}, userId : req.user.id}})\n    .then((tickets) => {\n        res.json({tickets : tickets});\n    }).catch(\n        err => console.log(err)\n    );\n};\n\nexports.createTicket = (req, res, next) => {\n    const errors = validationResult(req);\n    \n    if(!errors.isEmpty()) {\n        return res.status(422).json({\n            message : 'Errore input parametri',\n            error : errors.array()\n        });\n    }\n\n    const title = req.body.title;\n    const date = req.body.date;\n    const name = req.body.name;\n    //INSERT NEL DATABASE  \n    req.user.createTicket({\n        title : title,\n        date : date,\n        name : name\n    }).then((ticket) => {\n        res.status(201).json({\n            messages : 'Success Operation',\n            ticket : ticket\n        });\n    }).catch( err => {\n       return res.status(422).json({\n           message : 'Error nel Salvataggio'\n       })\n    });\n};"
      ]
    },
    "sourceType": "module",
    "mtime": 1577794649799
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models/ticket.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"plugins\":[],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models/ticket.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models/ticket.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models/ticket.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models",
        "sourceFileName": "ticket.js"
      }
    },
    "ast": null,
    "code": "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst Ticket = sequelize.define('ticket', {\n  id: {\n    type: Sequelize.INTEGER,\n    autoIncrement: true,\n    allowNull: false,\n    primaryKey: true\n  },\n  title: {\n    type: Sequelize.STRING,\n    allowNull: false\n  },\n  date: {\n    type: Sequelize.STRING,\n    allowNull: true\n  },\n  name: {\n    type: Sequelize.STRING,\n    allowNull: false\n  }\n});\nmodule.exports = Ticket;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRpY2tldC5qcyJdLCJuYW1lcyI6WyJTZXF1ZWxpemUiLCJyZXF1aXJlIiwic2VxdWVsaXplIiwiVGlja2V0IiwiZGVmaW5lIiwiaWQiLCJ0eXBlIiwiSU5URUdFUiIsImF1dG9JbmNyZW1lbnQiLCJhbGxvd051bGwiLCJwcmltYXJ5S2V5IiwidGl0bGUiLCJTVFJJTkciLCJkYXRlIiwibmFtZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFNBQVMsR0FBR0MsT0FBTyxDQUFDLFdBQUQsQ0FBekI7O0FBRUEsTUFBTUMsU0FBUyxHQUFHRCxPQUFPLENBQUMsbUJBQUQsQ0FBekI7O0FBRUEsTUFBTUUsTUFBTSxHQUFHRCxTQUFTLENBQUNFLE1BQVYsQ0FBaUIsUUFBakIsRUFBMkI7QUFDdENDLEVBQUFBLEVBQUUsRUFBRztBQUNEQyxJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ08sT0FEaEI7QUFFREMsSUFBQUEsYUFBYSxFQUFHLElBRmY7QUFHREMsSUFBQUEsU0FBUyxFQUFHLEtBSFg7QUFJREMsSUFBQUEsVUFBVSxFQUFHO0FBSlosR0FEaUM7QUFPdENDLEVBQUFBLEtBQUssRUFBRztBQUNKTCxJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ1ksTUFEYjtBQUVKSCxJQUFBQSxTQUFTLEVBQUc7QUFGUixHQVA4QjtBQVd0Q0ksRUFBQUEsSUFBSSxFQUFHO0FBQ0hQLElBQUFBLElBQUksRUFBR04sU0FBUyxDQUFDWSxNQURkO0FBRUhILElBQUFBLFNBQVMsRUFBRztBQUZULEdBWCtCO0FBZXRDSyxFQUFBQSxJQUFJLEVBQUc7QUFDSFIsSUFBQUEsSUFBSSxFQUFHTixTQUFTLENBQUNZLE1BRGQ7QUFFSEgsSUFBQUEsU0FBUyxFQUFHO0FBRlQ7QUFmK0IsQ0FBM0IsQ0FBZjtBQXFCQU0sTUFBTSxDQUFDQyxPQUFQLEdBQWlCYixNQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvQWxlc3NhbmRyb19NdXNvbGluby9EZXNrdG9wL0h5cGVybWVkaWEvRHJlYW1MYW5kRmVzdGl2YWxfL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFNlcXVlbGl6ZSA9IHJlcXVpcmUoJ3NlcXVlbGl6ZScpO1xuXG5jb25zdCBzZXF1ZWxpemUgPSByZXF1aXJlKCcuLi91dGlscy9kYXRhYmFzZScpO1xuXG5jb25zdCBUaWNrZXQgPSBzZXF1ZWxpemUuZGVmaW5lKCd0aWNrZXQnLCB7XG4gICAgaWQgOiB7XG4gICAgICAgIHR5cGUgOiBTZXF1ZWxpemUuSU5URUdFUixcbiAgICAgICAgYXV0b0luY3JlbWVudCA6IHRydWUsXG4gICAgICAgIGFsbG93TnVsbCA6IGZhbHNlLFxuICAgICAgICBwcmltYXJ5S2V5IDogdHJ1ZVxuICAgIH0sXG4gICAgdGl0bGUgOiB7XG4gICAgICAgIHR5cGUgOiBTZXF1ZWxpemUuU1RSSU5HLFxuICAgICAgICBhbGxvd051bGwgOiBmYWxzZSxcbiAgICB9LFxuICAgIGRhdGUgOiB7XG4gICAgICAgIHR5cGUgOiBTZXF1ZWxpemUuU1RSSU5HLFxuICAgICAgICBhbGxvd051bGwgOiB0cnVlLFxuICAgIH0sXG4gICAgbmFtZSA6IHtcbiAgICAgICAgdHlwZSA6IFNlcXVlbGl6ZS5TVFJJTkcsXG4gICAgICAgIGFsbG93TnVsbCA6IGZhbHNlLFxuICAgIH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFRpY2tldDsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "ticket.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "sequelize",
        "Ticket",
        "define",
        "id",
        "type",
        "INTEGER",
        "autoIncrement",
        "allowNull",
        "primaryKey",
        "title",
        "STRING",
        "date",
        "name",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,MAAMC,SAAS,GAAGD,OAAO,CAAC,mBAAD,CAAzB;;AAEA,MAAME,MAAM,GAAGD,SAAS,CAACE,MAAV,CAAiB,QAAjB,EAA2B;AACtCC,EAAAA,EAAE,EAAG;AACDC,IAAAA,IAAI,EAAGN,SAAS,CAACO,OADhB;AAEDC,IAAAA,aAAa,EAAG,IAFf;AAGDC,IAAAA,SAAS,EAAG,KAHX;AAIDC,IAAAA,UAAU,EAAG;AAJZ,GADiC;AAOtCC,EAAAA,KAAK,EAAG;AACJL,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADb;AAEJH,IAAAA,SAAS,EAAG;AAFR,GAP8B;AAWtCI,EAAAA,IAAI,EAAG;AACHP,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADd;AAEHH,IAAAA,SAAS,EAAG;AAFT,GAX+B;AAetCK,EAAAA,IAAI,EAAG;AACHR,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADd;AAEHH,IAAAA,SAAS,EAAG;AAFT;AAf+B,CAA3B,CAAf;AAqBAM,MAAM,CAACC,OAAP,GAAiBb,MAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst Ticket = sequelize.define('ticket', {\n    id : {\n        type : Sequelize.INTEGER,\n        autoIncrement : true,\n        allowNull : false,\n        primaryKey : true\n    },\n    title : {\n        type : Sequelize.STRING,\n        allowNull : false,\n    },\n    date : {\n        type : Sequelize.STRING,\n        allowNull : true,\n    },\n    name : {\n        type : Sequelize.STRING,\n        allowNull : false,\n    }\n});\n\nmodule.exports = Ticket;"
      ]
    },
    "sourceType": "module",
    "mtime": 1577444667360
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"plugins\":[],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "const authRoutes = require('./auth');\n\nconst reservationRoutes = require('./reservation');\n\nconst artisticeventRoutes = require('./artisticevent');\n\nconst performerRoutes = require('./performer');\n\nconst seminaryRoutes = require('./seminary');\n\nconst galleryRoutes = require('./gallery');\n\nmodule.exports = function (app) {\n  app.use('/auth', authRoutes);\n  app.use('/reservation', reservationRoutes);\n  app.use('/artisticevent', artisticeventRoutes);\n  app.use('/performer', performerRoutes);\n  app.use('/seminary', seminaryRoutes);\n  app.use('/gallery', galleryRoutes);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImF1dGhSb3V0ZXMiLCJyZXF1aXJlIiwicmVzZXJ2YXRpb25Sb3V0ZXMiLCJhcnRpc3RpY2V2ZW50Um91dGVzIiwicGVyZm9ybWVyUm91dGVzIiwic2VtaW5hcnlSb3V0ZXMiLCJnYWxsZXJ5Um91dGVzIiwibW9kdWxlIiwiZXhwb3J0cyIsImFwcCIsInVzZSJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsVUFBVSxHQUFHQyxPQUFPLENBQUMsUUFBRCxDQUExQjs7QUFDQSxNQUFNQyxpQkFBaUIsR0FBR0QsT0FBTyxDQUFDLGVBQUQsQ0FBakM7O0FBQ0EsTUFBTUUsbUJBQW1CLEdBQUdGLE9BQU8sQ0FBQyxpQkFBRCxDQUFuQzs7QUFDQSxNQUFNRyxlQUFlLEdBQUdILE9BQU8sQ0FBQyxhQUFELENBQS9COztBQUNBLE1BQU1JLGNBQWMsR0FBR0osT0FBTyxDQUFDLFlBQUQsQ0FBOUI7O0FBQ0EsTUFBTUssYUFBYSxHQUFHTCxPQUFPLENBQUMsV0FBRCxDQUE3Qjs7QUFFQU0sTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQVNDLEdBQVQsRUFBYztBQUMzQkEsRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsT0FBUixFQUFpQlYsVUFBakI7QUFDQVMsRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsY0FBUixFQUF3QlIsaUJBQXhCO0FBQ0FPLEVBQUFBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLGdCQUFSLEVBQTBCUCxtQkFBMUI7QUFDQU0sRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsWUFBUixFQUFzQk4sZUFBdEI7QUFDQUssRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsV0FBUixFQUFxQkwsY0FBckI7QUFDQUksRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsVUFBUixFQUFvQkosYUFBcEI7QUFDSCxDQVBEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9BbGVzc2FuZHJvX011c29saW5vL0Rlc2t0b3AvSHlwZXJtZWRpYS9EcmVhbUxhbmRGZXN0aXZhbF8vcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgYXV0aFJvdXRlcyA9IHJlcXVpcmUoJy4vYXV0aCcpO1xuY29uc3QgcmVzZXJ2YXRpb25Sb3V0ZXMgPSByZXF1aXJlKCcuL3Jlc2VydmF0aW9uJylcbmNvbnN0IGFydGlzdGljZXZlbnRSb3V0ZXMgPSByZXF1aXJlKCcuL2FydGlzdGljZXZlbnQnKTtcbmNvbnN0IHBlcmZvcm1lclJvdXRlcyA9IHJlcXVpcmUoJy4vcGVyZm9ybWVyJyk7XG5jb25zdCBzZW1pbmFyeVJvdXRlcyA9IHJlcXVpcmUoJy4vc2VtaW5hcnknKTtcbmNvbnN0IGdhbGxlcnlSb3V0ZXMgPSByZXF1aXJlKCcuL2dhbGxlcnknKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihhcHApIHtcbiAgICBhcHAudXNlKCcvYXV0aCcsIGF1dGhSb3V0ZXMpO1xuICAgIGFwcC51c2UoJy9yZXNlcnZhdGlvbicsIHJlc2VydmF0aW9uUm91dGVzKVxuICAgIGFwcC51c2UoJy9hcnRpc3RpY2V2ZW50JywgYXJ0aXN0aWNldmVudFJvdXRlcyk7XG4gICAgYXBwLnVzZSgnL3BlcmZvcm1lcicsIHBlcmZvcm1lclJvdXRlcyk7XG4gICAgYXBwLnVzZSgnL3NlbWluYXJ5Jywgc2VtaW5hcnlSb3V0ZXMpO1xuICAgIGFwcC51c2UoJy9nYWxsZXJ5JywgZ2FsbGVyeVJvdXRlcyk7XG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "authRoutes",
        "require",
        "reservationRoutes",
        "artisticeventRoutes",
        "performerRoutes",
        "seminaryRoutes",
        "galleryRoutes",
        "module",
        "exports",
        "app",
        "use"
      ],
      "mappings": "AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,QAAD,CAA1B;;AACA,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,eAAD,CAAjC;;AACA,MAAME,mBAAmB,GAAGF,OAAO,CAAC,iBAAD,CAAnC;;AACA,MAAMG,eAAe,GAAGH,OAAO,CAAC,aAAD,CAA/B;;AACA,MAAMI,cAAc,GAAGJ,OAAO,CAAC,YAAD,CAA9B;;AACA,MAAMK,aAAa,GAAGL,OAAO,CAAC,WAAD,CAA7B;;AAEAM,MAAM,CAACC,OAAP,GAAiB,UAASC,GAAT,EAAc;AAC3BA,EAAAA,GAAG,CAACC,GAAJ,CAAQ,OAAR,EAAiBV,UAAjB;AACAS,EAAAA,GAAG,CAACC,GAAJ,CAAQ,cAAR,EAAwBR,iBAAxB;AACAO,EAAAA,GAAG,CAACC,GAAJ,CAAQ,gBAAR,EAA0BP,mBAA1B;AACAM,EAAAA,GAAG,CAACC,GAAJ,CAAQ,YAAR,EAAsBN,eAAtB;AACAK,EAAAA,GAAG,CAACC,GAAJ,CAAQ,WAAR,EAAqBL,cAArB;AACAI,EAAAA,GAAG,CAACC,GAAJ,CAAQ,UAAR,EAAoBJ,aAApB;AACH,CAPD",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes",
      "sourcesContent": [
        "const authRoutes = require('./auth');\nconst reservationRoutes = require('./reservation')\nconst artisticeventRoutes = require('./artisticevent');\nconst performerRoutes = require('./performer');\nconst seminaryRoutes = require('./seminary');\nconst galleryRoutes = require('./gallery');\n\nmodule.exports = function(app) {\n    app.use('/auth', authRoutes);\n    app.use('/reservation', reservationRoutes)\n    app.use('/artisticevent', artisticeventRoutes);\n    app.use('/performer', performerRoutes);\n    app.use('/seminary', seminaryRoutes);\n    app.use('/gallery', galleryRoutes);\n};"
      ]
    },
    "sourceType": "module",
    "mtime": 1577467449085
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes/auth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"plugins\":[],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes/auth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes/auth.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes/auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes",
        "sourceFileName": "auth.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst {\n  body,\n  query\n} = require('express-validator/check');\n\nconst router = express.Router();\n\nconst authController = require('../controllers/auth');\n\nconst User = require('../models/user');\n\nconst isAuth = require('../middleware/is-auth');\n\nrouter.post('/register', [body('email').isEmail().withMessage('Inserisci una mail valida name@server.com').custom((value, {\n  req\n}) => {\n  return User.findOne({\n    where: {\n      email: value\n    }\n  }).then(user => {\n    if (user) {\n      return Promise.reject('Email Esistente');\n    }\n  });\n}), body('password').trim().isLength({\n  min: 5\n}).withMessage('Password > 5 caratteri'), body('name').trim().not().isEmpty().withMessage('Name non vuoto')], authController.registerUser);\nrouter.post('/login', [body('email').isEmail().withMessage('Inserisci una mail valida name@server.com'), body('password').trim().isLength({\n  min: 5\n}).withMessage('Password > 5 caratteri')], authController.loginUser);\nrouter.get('/me', isAuth, authController.loginMe);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGguanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJib2R5IiwicXVlcnkiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJhdXRoQ29udHJvbGxlciIsIlVzZXIiLCJpc0F1dGgiLCJwb3N0IiwiaXNFbWFpbCIsIndpdGhNZXNzYWdlIiwiY3VzdG9tIiwidmFsdWUiLCJyZXEiLCJmaW5kT25lIiwid2hlcmUiLCJlbWFpbCIsInRoZW4iLCJ1c2VyIiwiUHJvbWlzZSIsInJlamVjdCIsInRyaW0iLCJpc0xlbmd0aCIsIm1pbiIsIm5vdCIsImlzRW1wdHkiLCJyZWdpc3RlclVzZXIiLCJsb2dpblVzZXIiLCJnZXQiLCJsb2dpbk1lIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxNQUFNO0FBQUVDLEVBQUFBLElBQUY7QUFBUUMsRUFBQUE7QUFBUixJQUFrQkYsT0FBTyxDQUFDLHlCQUFELENBQS9COztBQUNBLE1BQU1HLE1BQU0sR0FBR0osT0FBTyxDQUFDSyxNQUFSLEVBQWY7O0FBRUEsTUFBTUMsY0FBYyxHQUFHTCxPQUFPLENBQUMscUJBQUQsQ0FBOUI7O0FBQ0EsTUFBTU0sSUFBSSxHQUFHTixPQUFPLENBQUMsZ0JBQUQsQ0FBcEI7O0FBQ0EsTUFBTU8sTUFBTSxHQUFHUCxPQUFPLENBQUMsdUJBQUQsQ0FBdEI7O0FBRUFHLE1BQU0sQ0FBQ0ssSUFBUCxDQUFZLFdBQVosRUFDSSxDQUNJUCxJQUFJLENBQUMsT0FBRCxDQUFKLENBQWNRLE9BQWQsR0FBd0JDLFdBQXhCLENBQW9DLDJDQUFwQyxFQUNDQyxNQURELENBQ1EsQ0FBQ0MsS0FBRCxFQUFRO0FBQUNDLEVBQUFBO0FBQUQsQ0FBUixLQUFrQjtBQUN0QixTQUFPUCxJQUFJLENBQUNRLE9BQUwsQ0FBYTtBQUFDQyxJQUFBQSxLQUFLLEVBQUc7QUFBQ0MsTUFBQUEsS0FBSyxFQUFHSjtBQUFUO0FBQVQsR0FBYixFQUF3Q0ssSUFBeEMsQ0FBNkNDLElBQUksSUFBSTtBQUN4RCxRQUFHQSxJQUFILEVBQVM7QUFDTCxhQUFPQyxPQUFPLENBQUNDLE1BQVIsQ0FBZSxpQkFBZixDQUFQO0FBQ0g7QUFDSixHQUpNLENBQVA7QUFLSCxDQVBELENBREosRUFTSW5CLElBQUksQ0FBQyxVQUFELENBQUosQ0FBaUJvQixJQUFqQixHQUF3QkMsUUFBeEIsQ0FBaUM7QUFBQ0MsRUFBQUEsR0FBRyxFQUFHO0FBQVAsQ0FBakMsRUFBNENiLFdBQTVDLENBQXdELHdCQUF4RCxDQVRKLEVBVUlULElBQUksQ0FBQyxNQUFELENBQUosQ0FBYW9CLElBQWIsR0FBb0JHLEdBQXBCLEdBQTBCQyxPQUExQixHQUFvQ2YsV0FBcEMsQ0FBZ0QsZ0JBQWhELENBVkosQ0FESixFQWFJTCxjQUFjLENBQUNxQixZQWJuQjtBQWVBdkIsTUFBTSxDQUFDSyxJQUFQLENBQVksUUFBWixFQUNJLENBQ0lQLElBQUksQ0FBQyxPQUFELENBQUosQ0FBY1EsT0FBZCxHQUF3QkMsV0FBeEIsQ0FBb0MsMkNBQXBDLENBREosRUFFSVQsSUFBSSxDQUFDLFVBQUQsQ0FBSixDQUFpQm9CLElBQWpCLEdBQXdCQyxRQUF4QixDQUFpQztBQUFDQyxFQUFBQSxHQUFHLEVBQUc7QUFBUCxDQUFqQyxFQUE0Q2IsV0FBNUMsQ0FBd0Qsd0JBQXhELENBRkosQ0FESixFQUtJTCxjQUFjLENBQUNzQixTQUxuQjtBQU9BeEIsTUFBTSxDQUFDeUIsR0FBUCxDQUFXLEtBQVgsRUFBa0JyQixNQUFsQixFQUEwQkYsY0FBYyxDQUFDd0IsT0FBekM7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCNUIsTUFBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL0FsZXNzYW5kcm9fTXVzb2xpbm8vRGVza3RvcC9IeXBlcm1lZGlhL0RyZWFtTGFuZEZlc3RpdmFsXy9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xuY29uc3QgeyBib2R5LCBxdWVyeSB9ID0gcmVxdWlyZSgnZXhwcmVzcy12YWxpZGF0b3IvY2hlY2snKTtcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbmNvbnN0IGF1dGhDb250cm9sbGVyID0gcmVxdWlyZSgnLi4vY29udHJvbGxlcnMvYXV0aCcpO1xuY29uc3QgVXNlciA9IHJlcXVpcmUoJy4uL21vZGVscy91c2VyJyk7XG5jb25zdCBpc0F1dGggPSByZXF1aXJlKCcuLi9taWRkbGV3YXJlL2lzLWF1dGgnKTtcblxucm91dGVyLnBvc3QoJy9yZWdpc3RlcicsXG4gICAgW1xuICAgICAgICBib2R5KCdlbWFpbCcpLmlzRW1haWwoKS53aXRoTWVzc2FnZSgnSW5zZXJpc2NpIHVuYSBtYWlsIHZhbGlkYSBuYW1lQHNlcnZlci5jb20nKVxuICAgICAgICAuY3VzdG9tKCh2YWx1ZSwge3JlcX0pID0+IHtcbiAgICAgICAgICAgIHJldHVybiBVc2VyLmZpbmRPbmUoe3doZXJlIDoge2VtYWlsIDogdmFsdWV9fSkudGhlbih1c2VyID0+IHtcbiAgICAgICAgICAgICAgICBpZih1c2VyKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdCgnRW1haWwgRXNpc3RlbnRlJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pLFxuICAgICAgICBib2R5KCdwYXNzd29yZCcpLnRyaW0oKS5pc0xlbmd0aCh7bWluIDogNX0pLndpdGhNZXNzYWdlKCdQYXNzd29yZCA+IDUgY2FyYXR0ZXJpJyksXG4gICAgICAgIGJvZHkoJ25hbWUnKS50cmltKCkubm90KCkuaXNFbXB0eSgpLndpdGhNZXNzYWdlKCdOYW1lIG5vbiB2dW90bycpLFxuICAgIF0sXG4gICAgYXV0aENvbnRyb2xsZXIucmVnaXN0ZXJVc2VyKTtcblxucm91dGVyLnBvc3QoJy9sb2dpbicsIFxuICAgIFtcbiAgICAgICAgYm9keSgnZW1haWwnKS5pc0VtYWlsKCkud2l0aE1lc3NhZ2UoJ0luc2VyaXNjaSB1bmEgbWFpbCB2YWxpZGEgbmFtZUBzZXJ2ZXIuY29tJyksXG4gICAgICAgIGJvZHkoJ3Bhc3N3b3JkJykudHJpbSgpLmlzTGVuZ3RoKHttaW4gOiA1fSkud2l0aE1lc3NhZ2UoJ1Bhc3N3b3JkID4gNSBjYXJhdHRlcmknKSxcbiAgICBdLCAgXG4gICAgYXV0aENvbnRyb2xsZXIubG9naW5Vc2VyKTtcblxucm91dGVyLmdldCgnL21lJywgaXNBdXRoLCBhdXRoQ29udHJvbGxlci5sb2dpbk1lKTtcblxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "auth.js"
      ],
      "names": [
        "express",
        "require",
        "body",
        "query",
        "router",
        "Router",
        "authController",
        "User",
        "isAuth",
        "post",
        "isEmail",
        "withMessage",
        "custom",
        "value",
        "req",
        "findOne",
        "where",
        "email",
        "then",
        "user",
        "Promise",
        "reject",
        "trim",
        "isLength",
        "min",
        "not",
        "isEmpty",
        "registerUser",
        "loginUser",
        "get",
        "loginMe",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAM;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,IAAkBF,OAAO,CAAC,yBAAD,CAA/B;;AACA,MAAMG,MAAM,GAAGJ,OAAO,CAACK,MAAR,EAAf;;AAEA,MAAMC,cAAc,GAAGL,OAAO,CAAC,qBAAD,CAA9B;;AACA,MAAMM,IAAI,GAAGN,OAAO,CAAC,gBAAD,CAApB;;AACA,MAAMO,MAAM,GAAGP,OAAO,CAAC,uBAAD,CAAtB;;AAEAG,MAAM,CAACK,IAAP,CAAY,WAAZ,EACI,CACIP,IAAI,CAAC,OAAD,CAAJ,CAAcQ,OAAd,GAAwBC,WAAxB,CAAoC,2CAApC,EACCC,MADD,CACQ,CAACC,KAAD,EAAQ;AAACC,EAAAA;AAAD,CAAR,KAAkB;AACtB,SAAOP,IAAI,CAACQ,OAAL,CAAa;AAACC,IAAAA,KAAK,EAAG;AAACC,MAAAA,KAAK,EAAGJ;AAAT;AAAT,GAAb,EAAwCK,IAAxC,CAA6CC,IAAI,IAAI;AACxD,QAAGA,IAAH,EAAS;AACL,aAAOC,OAAO,CAACC,MAAR,CAAe,iBAAf,CAAP;AACH;AACJ,GAJM,CAAP;AAKH,CAPD,CADJ,EASInB,IAAI,CAAC,UAAD,CAAJ,CAAiBoB,IAAjB,GAAwBC,QAAxB,CAAiC;AAACC,EAAAA,GAAG,EAAG;AAAP,CAAjC,EAA4Cb,WAA5C,CAAwD,wBAAxD,CATJ,EAUIT,IAAI,CAAC,MAAD,CAAJ,CAAaoB,IAAb,GAAoBG,GAApB,GAA0BC,OAA1B,GAAoCf,WAApC,CAAgD,gBAAhD,CAVJ,CADJ,EAaIL,cAAc,CAACqB,YAbnB;AAeAvB,MAAM,CAACK,IAAP,CAAY,QAAZ,EACI,CACIP,IAAI,CAAC,OAAD,CAAJ,CAAcQ,OAAd,GAAwBC,WAAxB,CAAoC,2CAApC,CADJ,EAEIT,IAAI,CAAC,UAAD,CAAJ,CAAiBoB,IAAjB,GAAwBC,QAAxB,CAAiC;AAACC,EAAAA,GAAG,EAAG;AAAP,CAAjC,EAA4Cb,WAA5C,CAAwD,wBAAxD,CAFJ,CADJ,EAKIL,cAAc,CAACsB,SALnB;AAOAxB,MAAM,CAACyB,GAAP,CAAW,KAAX,EAAkBrB,MAAlB,EAA0BF,cAAc,CAACwB,OAAzC;AAEAC,MAAM,CAACC,OAAP,GAAiB5B,MAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes",
      "sourcesContent": [
        "const express = require('express');\nconst { body, query } = require('express-validator/check');\nconst router = express.Router();\n\nconst authController = require('../controllers/auth');\nconst User = require('../models/user');\nconst isAuth = require('../middleware/is-auth');\n\nrouter.post('/register',\n    [\n        body('email').isEmail().withMessage('Inserisci una mail valida name@server.com')\n        .custom((value, {req}) => {\n            return User.findOne({where : {email : value}}).then(user => {\n                if(user) {\n                    return Promise.reject('Email Esistente');\n                }\n            });\n        }),\n        body('password').trim().isLength({min : 5}).withMessage('Password > 5 caratteri'),\n        body('name').trim().not().isEmpty().withMessage('Name non vuoto'),\n    ],\n    authController.registerUser);\n\nrouter.post('/login', \n    [\n        body('email').isEmail().withMessage('Inserisci una mail valida name@server.com'),\n        body('password').trim().isLength({min : 5}).withMessage('Password > 5 caratteri'),\n    ],  \n    authController.loginUser);\n\nrouter.get('/me', isAuth, authController.loginMe);\n\nmodule.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1577043519950
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers/auth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"plugins\":[],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers/auth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers/auth.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers/auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers",
        "sourceFileName": "auth.js"
      }
    },
    "ast": null,
    "code": "const {\n  validationResult\n} = require('express-validator/check');\n\nconst bcrypt = require('bcryptjs');\n\nconst jwt = require('jsonwebtoken');\n\nconst User = require('../models/user');\n\nexports.registerUser = (req, res, next) => {\n  const errors = validationResult(req);\n\n  if (!errors.isEmpty()) {\n    return res.status(422).json({\n      message: 'Errore input parametri',\n      error: errors.array()\n    });\n  }\n\n  const email = req.body.email;\n  const name = req.body.name;\n  const phoneNumber = req.body.phoneNumber;\n  const password = req.body.password;\n  bcrypt.hash(password, 12).then(hashedPassword => {\n    User.create({\n      name: name,\n      email: email,\n      phoneNumber: phoneNumber,\n      password: hashedPassword\n    }).then(user => {\n      res.status(201).json({\n        messages: 'Success Operation',\n        user: user\n      });\n    }).catch(err => {\n      return res.status(422).json({\n        message: err\n      });\n    });\n  }).catch(err => {\n    return res.status(422).json({\n      message: err\n    });\n  });\n};\n\nexports.loginMe = (req, res, next) => {\n  req.user.password = '***************';\n  res.status(200).json({\n    user: req.user\n  });\n};\n\nexports.loginUser = (req, res, next) => {\n  const errors = validationResult(req);\n\n  if (!errors.isEmpty()) {\n    return res.status(422).json({\n      message: 'Errore input parametri',\n      error: errors.array()\n    });\n  }\n\n  const email = req.body.email;\n  const password = req.body.password;\n  let loginUser;\n  User.findOne({\n    where: {\n      email: email\n    }\n  }).then(user => {\n    if (!user) {\n      return res.status(401).json({\n        message: 'Non autorizzato, Email errata'\n      });\n    }\n\n    loginUser = user;\n    return bcrypt.compare(password, user.password);\n  }).then(isEqual => {\n    if (!isEqual) {\n      return res.status(401).json({\n        message: 'Non autorizzato, Password errata'\n      });\n    }\n\n    const token = jwt.sign({\n      id: loginUser.id,\n      email: loginUser.email,\n      name: loginUser.name\n    }, 'axAYgScUa4Z2UdjgirykmI3iZsSCaPGh', {\n      expiresIn: '1h'\n    });\n    res.status(201).json({\n      messages: 'Sei Loggato',\n      id: loginUser.id,\n      token: token\n    });\n  }).catch(err => {\n    return res.status(422).json({\n      message: err\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "auth.js"
      ],
      "names": [
        "validationResult",
        "require",
        "bcrypt",
        "jwt",
        "User",
        "exports",
        "registerUser",
        "req",
        "res",
        "next",
        "errors",
        "isEmpty",
        "status",
        "json",
        "message",
        "error",
        "array",
        "email",
        "body",
        "name",
        "phoneNumber",
        "password",
        "hash",
        "then",
        "hashedPassword",
        "create",
        "user",
        "messages",
        "catch",
        "err",
        "loginMe",
        "loginUser",
        "findOne",
        "where",
        "compare",
        "isEqual",
        "token",
        "sign",
        "id",
        "expiresIn"
      ],
      "mappings": "AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAuBC,OAAO,CAAC,yBAAD,CAApC;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAME,GAAG,GAAGF,OAAO,CAAC,cAAD,CAAnB;;AACA,MAAMG,IAAI,GAAGH,OAAO,CAAC,gBAAD,CAApB;;AAEAI,OAAO,CAACC,YAAR,GAAuB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACvC,QAAMC,MAAM,GAAGV,gBAAgB,CAACO,GAAD,CAA/B;;AAEA,MAAG,CAACG,MAAM,CAACC,OAAP,EAAJ,EAAsB;AAClB,WAAOH,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,OAAO,EAAG,wBADc;AAExBC,MAAAA,KAAK,EAAGL,MAAM,CAACM,KAAP;AAFgB,KAArB,CAAP;AAIH;;AAED,QAAMC,KAAK,GAAGV,GAAG,CAACW,IAAJ,CAASD,KAAvB;AACA,QAAME,IAAI,GAAGZ,GAAG,CAACW,IAAJ,CAASC,IAAtB;AACA,QAAMC,WAAW,GAAGb,GAAG,CAACW,IAAJ,CAASE,WAA7B;AACA,QAAMC,QAAQ,GAAGd,GAAG,CAACW,IAAJ,CAASG,QAA1B;AAEAnB,EAAAA,MAAM,CAACoB,IAAP,CAAYD,QAAZ,EAAsB,EAAtB,EACCE,IADD,CACMC,cAAc,IAAI;AACpBpB,IAAAA,IAAI,CAACqB,MAAL,CAAY;AAACN,MAAAA,IAAI,EAAGA,IAAR;AAAcF,MAAAA,KAAK,EAAGA,KAAtB;AAA6BG,MAAAA,WAAW,EAAGA,WAA3C;AAAwDC,MAAAA,QAAQ,EAAGG;AAAnE,KAAZ,EACCD,IADD,CACMG,IAAI,IAAI;AACVlB,MAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBc,QAAAA,QAAQ,EAAG,mBADM;AAEjBD,QAAAA,IAAI,EAAGA;AAFU,OAArB;AAIH,KAND,EAOCE,KAPD,CAOOC,GAAG,IAAI;AACV,aAAOrB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,QAAAA,OAAO,EAAGe;AADc,OAArB,CAAP;AAGH,KAXD;AAYH,GAdD,EAeCD,KAfD,CAeOC,GAAG,IAAI;AACV,WAAOrB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,OAAO,EAAGe;AADc,KAArB,CAAP;AAGH,GAnBD;AAoBH,CAnCD;;AAqCAxB,OAAO,CAACyB,OAAR,GAAkB,CAACvB,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAClCF,EAAAA,GAAG,CAACmB,IAAJ,CAASL,QAAT,GAAoB,iBAApB;AACAb,EAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBa,IAAAA,IAAI,EAAGnB,GAAG,CAACmB;AADM,GAArB;AAGH,CALD;;AAOArB,OAAO,CAAC0B,SAAR,GAAoB,CAACxB,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACpC,QAAMC,MAAM,GAAGV,gBAAgB,CAACO,GAAD,CAA/B;;AAEA,MAAG,CAACG,MAAM,CAACC,OAAP,EAAJ,EAAsB;AAClB,WAAOH,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,OAAO,EAAG,wBADc;AAExBC,MAAAA,KAAK,EAAGL,MAAM,CAACM,KAAP;AAFgB,KAArB,CAAP;AAIH;;AAED,QAAMC,KAAK,GAAGV,GAAG,CAACW,IAAJ,CAASD,KAAvB;AACA,QAAMI,QAAQ,GAAGd,GAAG,CAACW,IAAJ,CAASG,QAA1B;AAEA,MAAIU,SAAJ;AACA3B,EAAAA,IAAI,CAAC4B,OAAL,CAAa;AAACC,IAAAA,KAAK,EAAG;AAAChB,MAAAA,KAAK,EAAGA;AAAT;AAAT,GAAb,EAAwCM,IAAxC,CAA6CG,IAAI,IAAI;AACjD,QAAG,CAACA,IAAJ,EAAU;AACN,aAAOlB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,QAAAA,OAAO,EAAG;AADc,OAArB,CAAP;AAGH;;AACDiB,IAAAA,SAAS,GAAGL,IAAZ;AACA,WAAOxB,MAAM,CAACgC,OAAP,CAAeb,QAAf,EAAyBK,IAAI,CAACL,QAA9B,CAAP;AACH,GARD,EASCE,IATD,CASMY,OAAO,IAAI;AACb,QAAG,CAACA,OAAJ,EAAY;AACR,aAAO3B,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,QAAAA,OAAO,EAAG;AADc,OAArB,CAAP;AAGH;;AACD,UAAMsB,KAAK,GAAGjC,GAAG,CAACkC,IAAJ,CACV;AACIC,MAAAA,EAAE,EAAGP,SAAS,CAACO,EADnB;AAEIrB,MAAAA,KAAK,EAAGc,SAAS,CAACd,KAFtB;AAGIE,MAAAA,IAAI,EAAGY,SAAS,CAACZ;AAHrB,KADU,EAKP,kCALO,EAK6B;AAACoB,MAAAA,SAAS,EAAG;AAAb,KAL7B,CAAd;AAOA/B,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBc,MAAAA,QAAQ,EAAG,aADM;AAEjBW,MAAAA,EAAE,EAAGP,SAAS,CAACO,EAFE;AAGjBF,MAAAA,KAAK,EAAGA;AAHS,KAArB;AAKH,GA3BD,EA4BCR,KA5BD,CA4BOC,GAAG,IAAI;AACV,WAAOrB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,OAAO,EAAGe;AADc,KAArB,CAAP;AAGH,GAhCD;AAiCH,CA/CD",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers",
      "sourcesContent": [
        "const { validationResult } = require('express-validator/check');\nconst bcrypt = require('bcryptjs');\nconst jwt = require('jsonwebtoken');\nconst User = require('../models/user');\n\nexports.registerUser = (req, res, next) => {\n    const errors = validationResult(req);\n    \n    if(!errors.isEmpty()) {\n        return res.status(422).json({\n            message : 'Errore input parametri',\n            error : errors.array()\n        });\n    }\n\n    const email = req.body.email;\n    const name = req.body.name;\n    const phoneNumber = req.body.phoneNumber;\n    const password = req.body.password;\n\n    bcrypt.hash(password, 12)\n    .then(hashedPassword => {\n        User.create({name : name, email : email, phoneNumber : phoneNumber, password : hashedPassword})\n        .then(user => {\n            res.status(201).json({\n                messages : 'Success Operation',\n                user : user\n            });\n        })\n        .catch(err => {\n            return res.status(422).json({\n                message : err\n            })\n        });\n    })\n    .catch(err => {\n        return res.status(422).json({\n            message : err\n        });\n    });\n};\n\nexports.loginMe = (req, res, next) => {\n    req.user.password = '***************';\n    res.status(200).json({\n        user : req.user,\n    });\n};\n\nexports.loginUser = (req, res, next) => {\n    const errors = validationResult(req);\n    \n    if(!errors.isEmpty()) {\n        return res.status(422).json({\n            message : 'Errore input parametri',\n            error : errors.array()\n        });\n    }\n\n    const email = req.body.email;\n    const password = req.body.password;\n\n    let loginUser;\n    User.findOne({where : {email : email}}).then(user => {\n        if(!user) {\n            return res.status(401).json({\n                message : 'Non autorizzato, Email errata',\n            });\n        }\n        loginUser = user;\n        return bcrypt.compare(password, user.password);\n    })\n    .then(isEqual => {\n        if(!isEqual){\n            return res.status(401).json({\n                message : 'Non autorizzato, Password errata',\n            });\n        }\n        const token = jwt.sign(\n            {\n                id : loginUser.id, \n                email : loginUser.email,\n                name : loginUser.name\n            }, 'axAYgScUa4Z2UdjgirykmI3iZsSCaPGh', {expiresIn : '1h'});\n\n        res.status(201).json({\n            messages : 'Sei Loggato',\n            id : loginUser.id,\n            token : token\n        });\n    })\n    .catch(err => {\n        return res.status(422).json({\n            message : err\n        });\n    });\n};"
      ]
    },
    "sourceType": "module",
    "mtime": 1576679187963
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes/artisticevent.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"plugins\":[],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes/artisticevent.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes/artisticevent.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes/artisticevent.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes",
        "sourceFileName": "artisticevent.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst {\n  body,\n  query\n} = require('express-validator/check');\n\nconst router = express.Router();\n\nconst isAuth = require('../middleware/is-auth');\n\nconst artisticeventController = require('../controllers/artisticevent');\n\nconst path = require('path');\n\nconst multer = require('multer');\n\nconst uuidv4 = require('uuid/v4');\n\nconst storage = multer.diskStorage({\n  destination: (req, file, callback) => {\n    callback(null, 'public/images');\n  },\n  filename: (req, file, callback) => {\n    //callback(null, Date.now() + '-' + file.originalname);\n    callback(null, uuidv4() + path.extname(file.originalname));\n  }\n});\n\nconst fileFilter = (req, file, callback) => {\n  if (file.mimetype == 'image/png' || file.mimetype == 'image/jpg' || file.mimetype == 'image/jpeg') {\n    callback(null, true);\n  } else {\n    req.fileValidationError = \"Estensione non consentita solo: 'image/jpg' | 'image/png' | 'image/jpeg'\";\n    callback(null, false);\n  }\n};\n\nvar upload = multer({\n  storage: storage,\n  fileFilter: fileFilter\n});\nvar cpUpload = upload.single('image');\nrouter.get('/artisticevent', artisticeventController.getArtisticevents);\nrouter.get('/artisticevent/searchbytitle', artisticeventController.searchArtisticeventByTitle);\nrouter.get('/artisticevent/searcheventsbydate', artisticeventController.searchEventsByDate);\nrouter.get('/artisticevent/searcheventsbytype', artisticeventController.searchEventsByType);\nrouter.get('/artisticevent/:id', artisticeventController.getArtisticevent);\nrouter.get('/artisticevent/sameday/:id', artisticeventController.getSameDayEvents);\nrouter.get('/artisticevent/similars/:id', artisticeventController.getSimilars);\nrouter.get('/types', artisticeventController.getTypes);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFydGlzdGljZXZlbnQuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJib2R5IiwicXVlcnkiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJpc0F1dGgiLCJhcnRpc3RpY2V2ZW50Q29udHJvbGxlciIsInBhdGgiLCJtdWx0ZXIiLCJ1dWlkdjQiLCJzdG9yYWdlIiwiZGlza1N0b3JhZ2UiLCJkZXN0aW5hdGlvbiIsInJlcSIsImZpbGUiLCJjYWxsYmFjayIsImZpbGVuYW1lIiwiZXh0bmFtZSIsIm9yaWdpbmFsbmFtZSIsImZpbGVGaWx0ZXIiLCJtaW1ldHlwZSIsImZpbGVWYWxpZGF0aW9uRXJyb3IiLCJ1cGxvYWQiLCJjcFVwbG9hZCIsInNpbmdsZSIsImdldCIsImdldEFydGlzdGljZXZlbnRzIiwic2VhcmNoQXJ0aXN0aWNldmVudEJ5VGl0bGUiLCJzZWFyY2hFdmVudHNCeURhdGUiLCJzZWFyY2hFdmVudHNCeVR5cGUiLCJnZXRBcnRpc3RpY2V2ZW50IiwiZ2V0U2FtZURheUV2ZW50cyIsImdldFNpbWlsYXJzIiwiZ2V0VHlwZXMiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLE1BQU07QUFBRUMsRUFBQUEsSUFBRjtBQUFRQyxFQUFBQTtBQUFSLElBQWtCRixPQUFPLENBQUMseUJBQUQsQ0FBL0I7O0FBQ0EsTUFBTUcsTUFBTSxHQUFHSixPQUFPLENBQUNLLE1BQVIsRUFBZjs7QUFFQSxNQUFNQyxNQUFNLEdBQUdMLE9BQU8sQ0FBQyx1QkFBRCxDQUF0Qjs7QUFFQSxNQUFNTSx1QkFBdUIsR0FBR04sT0FBTyxDQUFDLDhCQUFELENBQXZDOztBQUVBLE1BQU1PLElBQUksR0FBR1AsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsTUFBTVEsTUFBTSxHQUFHUixPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFDQSxNQUFNUyxNQUFNLEdBQUdULE9BQU8sQ0FBQyxTQUFELENBQXRCOztBQUVBLE1BQU1VLE9BQU8sR0FBR0YsTUFBTSxDQUFDRyxXQUFQLENBQW1CO0FBQy9CQyxFQUFBQSxXQUFXLEVBQUcsQ0FBQ0MsR0FBRCxFQUFNQyxJQUFOLEVBQVlDLFFBQVosS0FBeUI7QUFDbkNBLElBQUFBLFFBQVEsQ0FBQyxJQUFELEVBQU8sZUFBUCxDQUFSO0FBQ0gsR0FIOEI7QUFJL0JDLEVBQUFBLFFBQVEsRUFBRyxDQUFDSCxHQUFELEVBQU1DLElBQU4sRUFBWUMsUUFBWixLQUF5QjtBQUNoQztBQUNBQSxJQUFBQSxRQUFRLENBQUMsSUFBRCxFQUFPTixNQUFNLEtBQUtGLElBQUksQ0FBQ1UsT0FBTCxDQUFhSCxJQUFJLENBQUNJLFlBQWxCLENBQWxCLENBQVI7QUFDSDtBQVA4QixDQUFuQixDQUFoQjs7QUFVQSxNQUFNQyxVQUFVLEdBQUksQ0FBQ04sR0FBRCxFQUFNQyxJQUFOLEVBQVlDLFFBQVosS0FBeUI7QUFDekMsTUFBR0QsSUFBSSxDQUFDTSxRQUFMLElBQWlCLFdBQWpCLElBQWdDTixJQUFJLENBQUNNLFFBQUwsSUFBaUIsV0FBakQsSUFBZ0VOLElBQUksQ0FBQ00sUUFBTCxJQUFpQixZQUFwRixFQUFrRztBQUM5RkwsSUFBQUEsUUFBUSxDQUFDLElBQUQsRUFBTyxJQUFQLENBQVI7QUFDSCxHQUZELE1BRU87QUFDSEYsSUFBQUEsR0FBRyxDQUFDUSxtQkFBSixHQUEwQiwwRUFBMUI7QUFDQU4sSUFBQUEsUUFBUSxDQUFDLElBQUQsRUFBTyxLQUFQLENBQVI7QUFDSDtBQUNKLENBUEQ7O0FBU0EsSUFBSU8sTUFBTSxHQUFHZCxNQUFNLENBQUM7QUFBRUUsRUFBQUEsT0FBTyxFQUFHQSxPQUFaO0FBQXFCUyxFQUFBQSxVQUFVLEVBQUdBO0FBQWxDLENBQUQsQ0FBbkI7QUFFQSxJQUFJSSxRQUFRLEdBQUdELE1BQU0sQ0FBQ0UsTUFBUCxDQUFjLE9BQWQsQ0FBZjtBQUVBckIsTUFBTSxDQUFDc0IsR0FBUCxDQUFXLGdCQUFYLEVBQTZCbkIsdUJBQXVCLENBQUNvQixpQkFBckQ7QUFDQXZCLE1BQU0sQ0FBQ3NCLEdBQVAsQ0FBVyw4QkFBWCxFQUEyQ25CLHVCQUF1QixDQUFDcUIsMEJBQW5FO0FBQ0F4QixNQUFNLENBQUNzQixHQUFQLENBQVcsbUNBQVgsRUFBZ0RuQix1QkFBdUIsQ0FBQ3NCLGtCQUF4RTtBQUNBekIsTUFBTSxDQUFDc0IsR0FBUCxDQUFXLG1DQUFYLEVBQWdEbkIsdUJBQXVCLENBQUN1QixrQkFBeEU7QUFDQTFCLE1BQU0sQ0FBQ3NCLEdBQVAsQ0FBVyxvQkFBWCxFQUFpQ25CLHVCQUF1QixDQUFDd0IsZ0JBQXpEO0FBQ0EzQixNQUFNLENBQUNzQixHQUFQLENBQVcsNEJBQVgsRUFBeUNuQix1QkFBdUIsQ0FBQ3lCLGdCQUFqRTtBQUNBNUIsTUFBTSxDQUFDc0IsR0FBUCxDQUFXLDZCQUFYLEVBQTBDbkIsdUJBQXVCLENBQUMwQixXQUFsRTtBQUNBN0IsTUFBTSxDQUFDc0IsR0FBUCxDQUFXLFFBQVgsRUFBcUJuQix1QkFBdUIsQ0FBQzJCLFFBQTdDO0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmhDLE1BQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9BbGVzc2FuZHJvX011c29saW5vL0Rlc2t0b3AvSHlwZXJtZWRpYS9EcmVhbUxhbmRGZXN0aXZhbF8vcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbmNvbnN0IHsgYm9keSwgcXVlcnkgfSA9IHJlcXVpcmUoJ2V4cHJlc3MtdmFsaWRhdG9yL2NoZWNrJyk7XG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuXG5jb25zdCBpc0F1dGggPSByZXF1aXJlKCcuLi9taWRkbGV3YXJlL2lzLWF1dGgnKTtcblxuY29uc3QgYXJ0aXN0aWNldmVudENvbnRyb2xsZXIgPSByZXF1aXJlKCcuLi9jb250cm9sbGVycy9hcnRpc3RpY2V2ZW50Jyk7XG5cbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5jb25zdCBtdWx0ZXIgPSByZXF1aXJlKCdtdWx0ZXInKTtcbmNvbnN0IHV1aWR2NCA9IHJlcXVpcmUoJ3V1aWQvdjQnKTtcblxuY29uc3Qgc3RvcmFnZSA9IG11bHRlci5kaXNrU3RvcmFnZSh7XG4gICAgZGVzdGluYXRpb24gOiAocmVxLCBmaWxlLCBjYWxsYmFjaykgPT4ge1xuICAgICAgICBjYWxsYmFjayhudWxsLCAncHVibGljL2ltYWdlcycpO1xuICAgIH0sXG4gICAgZmlsZW5hbWUgOiAocmVxLCBmaWxlLCBjYWxsYmFjaykgPT4ge1xuICAgICAgICAvL2NhbGxiYWNrKG51bGwsIERhdGUubm93KCkgKyAnLScgKyBmaWxlLm9yaWdpbmFsbmFtZSk7XG4gICAgICAgIGNhbGxiYWNrKG51bGwsIHV1aWR2NCgpICsgcGF0aC5leHRuYW1lKGZpbGUub3JpZ2luYWxuYW1lKSk7XG4gICAgfSxcbn0pO1xuXG5jb25zdCBmaWxlRmlsdGVyID0gKChyZXEsIGZpbGUsIGNhbGxiYWNrKSA9PiB7XG4gICAgaWYoZmlsZS5taW1ldHlwZSA9PSAnaW1hZ2UvcG5nJyB8fCBmaWxlLm1pbWV0eXBlID09ICdpbWFnZS9qcGcnIHx8IGZpbGUubWltZXR5cGUgPT0gJ2ltYWdlL2pwZWcnKSB7XG4gICAgICAgIGNhbGxiYWNrKG51bGwsIHRydWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHJlcS5maWxlVmFsaWRhdGlvbkVycm9yID0gXCJFc3RlbnNpb25lIG5vbiBjb25zZW50aXRhIHNvbG86ICdpbWFnZS9qcGcnIHwgJ2ltYWdlL3BuZycgfCAnaW1hZ2UvanBlZydcIjtcbiAgICAgICAgY2FsbGJhY2sobnVsbCwgZmFsc2UpO1xuICAgIH1cbn0pO1xuXG52YXIgdXBsb2FkID0gbXVsdGVyKHsgc3RvcmFnZSA6IHN0b3JhZ2UsIGZpbGVGaWx0ZXIgOiBmaWxlRmlsdGVyfSk7XG5cbnZhciBjcFVwbG9hZCA9IHVwbG9hZC5zaW5nbGUoJ2ltYWdlJyk7XG5cbnJvdXRlci5nZXQoJy9hcnRpc3RpY2V2ZW50JywgYXJ0aXN0aWNldmVudENvbnRyb2xsZXIuZ2V0QXJ0aXN0aWNldmVudHMpO1xucm91dGVyLmdldCgnL2FydGlzdGljZXZlbnQvc2VhcmNoYnl0aXRsZScsIGFydGlzdGljZXZlbnRDb250cm9sbGVyLnNlYXJjaEFydGlzdGljZXZlbnRCeVRpdGxlKTtcbnJvdXRlci5nZXQoJy9hcnRpc3RpY2V2ZW50L3NlYXJjaGV2ZW50c2J5ZGF0ZScsIGFydGlzdGljZXZlbnRDb250cm9sbGVyLnNlYXJjaEV2ZW50c0J5RGF0ZSk7XG5yb3V0ZXIuZ2V0KCcvYXJ0aXN0aWNldmVudC9zZWFyY2hldmVudHNieXR5cGUnLCBhcnRpc3RpY2V2ZW50Q29udHJvbGxlci5zZWFyY2hFdmVudHNCeVR5cGUpO1xucm91dGVyLmdldCgnL2FydGlzdGljZXZlbnQvOmlkJywgYXJ0aXN0aWNldmVudENvbnRyb2xsZXIuZ2V0QXJ0aXN0aWNldmVudCk7XG5yb3V0ZXIuZ2V0KCcvYXJ0aXN0aWNldmVudC9zYW1lZGF5LzppZCcsIGFydGlzdGljZXZlbnRDb250cm9sbGVyLmdldFNhbWVEYXlFdmVudHMpO1xucm91dGVyLmdldCgnL2FydGlzdGljZXZlbnQvc2ltaWxhcnMvOmlkJywgYXJ0aXN0aWNldmVudENvbnRyb2xsZXIuZ2V0U2ltaWxhcnMpO1xucm91dGVyLmdldCgnL3R5cGVzJywgYXJ0aXN0aWNldmVudENvbnRyb2xsZXIuZ2V0VHlwZXMpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "artisticevent.js"
      ],
      "names": [
        "express",
        "require",
        "body",
        "query",
        "router",
        "Router",
        "isAuth",
        "artisticeventController",
        "path",
        "multer",
        "uuidv4",
        "storage",
        "diskStorage",
        "destination",
        "req",
        "file",
        "callback",
        "filename",
        "extname",
        "originalname",
        "fileFilter",
        "mimetype",
        "fileValidationError",
        "upload",
        "cpUpload",
        "single",
        "get",
        "getArtisticevents",
        "searchArtisticeventByTitle",
        "searchEventsByDate",
        "searchEventsByType",
        "getArtisticevent",
        "getSameDayEvents",
        "getSimilars",
        "getTypes",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAM;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,IAAkBF,OAAO,CAAC,yBAAD,CAA/B;;AACA,MAAMG,MAAM,GAAGJ,OAAO,CAACK,MAAR,EAAf;;AAEA,MAAMC,MAAM,GAAGL,OAAO,CAAC,uBAAD,CAAtB;;AAEA,MAAMM,uBAAuB,GAAGN,OAAO,CAAC,8BAAD,CAAvC;;AAEA,MAAMO,IAAI,GAAGP,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMQ,MAAM,GAAGR,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMS,MAAM,GAAGT,OAAO,CAAC,SAAD,CAAtB;;AAEA,MAAMU,OAAO,GAAGF,MAAM,CAACG,WAAP,CAAmB;AAC/BC,EAAAA,WAAW,EAAG,CAACC,GAAD,EAAMC,IAAN,EAAYC,QAAZ,KAAyB;AACnCA,IAAAA,QAAQ,CAAC,IAAD,EAAO,eAAP,CAAR;AACH,GAH8B;AAI/BC,EAAAA,QAAQ,EAAG,CAACH,GAAD,EAAMC,IAAN,EAAYC,QAAZ,KAAyB;AAChC;AACAA,IAAAA,QAAQ,CAAC,IAAD,EAAON,MAAM,KAAKF,IAAI,CAACU,OAAL,CAAaH,IAAI,CAACI,YAAlB,CAAlB,CAAR;AACH;AAP8B,CAAnB,CAAhB;;AAUA,MAAMC,UAAU,GAAI,CAACN,GAAD,EAAMC,IAAN,EAAYC,QAAZ,KAAyB;AACzC,MAAGD,IAAI,CAACM,QAAL,IAAiB,WAAjB,IAAgCN,IAAI,CAACM,QAAL,IAAiB,WAAjD,IAAgEN,IAAI,CAACM,QAAL,IAAiB,YAApF,EAAkG;AAC9FL,IAAAA,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAR;AACH,GAFD,MAEO;AACHF,IAAAA,GAAG,CAACQ,mBAAJ,GAA0B,0EAA1B;AACAN,IAAAA,QAAQ,CAAC,IAAD,EAAO,KAAP,CAAR;AACH;AACJ,CAPD;;AASA,IAAIO,MAAM,GAAGd,MAAM,CAAC;AAAEE,EAAAA,OAAO,EAAGA,OAAZ;AAAqBS,EAAAA,UAAU,EAAGA;AAAlC,CAAD,CAAnB;AAEA,IAAII,QAAQ,GAAGD,MAAM,CAACE,MAAP,CAAc,OAAd,CAAf;AAEArB,MAAM,CAACsB,GAAP,CAAW,gBAAX,EAA6BnB,uBAAuB,CAACoB,iBAArD;AACAvB,MAAM,CAACsB,GAAP,CAAW,8BAAX,EAA2CnB,uBAAuB,CAACqB,0BAAnE;AACAxB,MAAM,CAACsB,GAAP,CAAW,mCAAX,EAAgDnB,uBAAuB,CAACsB,kBAAxE;AACAzB,MAAM,CAACsB,GAAP,CAAW,mCAAX,EAAgDnB,uBAAuB,CAACuB,kBAAxE;AACA1B,MAAM,CAACsB,GAAP,CAAW,oBAAX,EAAiCnB,uBAAuB,CAACwB,gBAAzD;AACA3B,MAAM,CAACsB,GAAP,CAAW,4BAAX,EAAyCnB,uBAAuB,CAACyB,gBAAjE;AACA5B,MAAM,CAACsB,GAAP,CAAW,6BAAX,EAA0CnB,uBAAuB,CAAC0B,WAAlE;AACA7B,MAAM,CAACsB,GAAP,CAAW,QAAX,EAAqBnB,uBAAuB,CAAC2B,QAA7C;AAEAC,MAAM,CAACC,OAAP,GAAiBhC,MAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes",
      "sourcesContent": [
        "const express = require('express');\nconst { body, query } = require('express-validator/check');\nconst router = express.Router();\n\nconst isAuth = require('../middleware/is-auth');\n\nconst artisticeventController = require('../controllers/artisticevent');\n\nconst path = require('path');\nconst multer = require('multer');\nconst uuidv4 = require('uuid/v4');\n\nconst storage = multer.diskStorage({\n    destination : (req, file, callback) => {\n        callback(null, 'public/images');\n    },\n    filename : (req, file, callback) => {\n        //callback(null, Date.now() + '-' + file.originalname);\n        callback(null, uuidv4() + path.extname(file.originalname));\n    },\n});\n\nconst fileFilter = ((req, file, callback) => {\n    if(file.mimetype == 'image/png' || file.mimetype == 'image/jpg' || file.mimetype == 'image/jpeg') {\n        callback(null, true);\n    } else {\n        req.fileValidationError = \"Estensione non consentita solo: 'image/jpg' | 'image/png' | 'image/jpeg'\";\n        callback(null, false);\n    }\n});\n\nvar upload = multer({ storage : storage, fileFilter : fileFilter});\n\nvar cpUpload = upload.single('image');\n\nrouter.get('/artisticevent', artisticeventController.getArtisticevents);\nrouter.get('/artisticevent/searchbytitle', artisticeventController.searchArtisticeventByTitle);\nrouter.get('/artisticevent/searcheventsbydate', artisticeventController.searchEventsByDate);\nrouter.get('/artisticevent/searcheventsbytype', artisticeventController.searchEventsByType);\nrouter.get('/artisticevent/:id', artisticeventController.getArtisticevent);\nrouter.get('/artisticevent/sameday/:id', artisticeventController.getSameDayEvents);\nrouter.get('/artisticevent/similars/:id', artisticeventController.getSimilars);\nrouter.get('/types', artisticeventController.getTypes);\n\nmodule.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1577898562587
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers/artisticevent.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"plugins\":[],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers/artisticevent.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers/artisticevent.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers/artisticevent.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers",
        "sourceFileName": "artisticevent.js"
      }
    },
    "ast": null,
    "code": "const {\n  validationResult\n} = require('express-validator/check');\n\nconst Sequelize = require('sequelize');\n\nconst Op = Sequelize.Op;\n\nconst path = require('path');\n\nconst fs = require('fs');\n\nconst Artisticevent = require('../models/artisticevent');\n\nconst Seminary = require('../models/seminary');\n\nconst Type = require('../models/type');\n\nconst Typologyae = require('../models/typologyae');\n\nconst Typologyse = require('../models/typologyse');\n\nconst Performer = require('../models/performer');\n\nconst Performance = require('../models/performance');\n\nconst User = require('../models/user');\n\nexports.getArtisticevents = (req, res, next) => {\n  Artisticevent.findAll().then(artisticevents => {\n    var promises = [];\n    artisticevents.forEach(artisticevent => {\n      const artisticeventWithPerformers = artisticevent.getPerformers().then(performers => {\n        artisticevent.dataValues.performers = performers;\n      }).then(() => {\n        return artisticevent;\n      });\n      promises.push(artisticeventWithPerformers);\n    });\n    return Promise.all(promises);\n  }).then(artisticevents => {\n    res.json({\n      artisticevents: artisticevents\n    });\n  }).catch(err => console.log(err));\n};\n\nexports.getArtisticevent = (req, res, next) => {\n  const artisticeventId = req.params.id;\n  Artisticevent.findByPk(artisticeventId).then(artisticevent => {\n    if (!artisticevent) {\n      res.status(404).json({\n        messages: 'Artistic Event Not Found'\n      });\n    }\n\n    var promises = [];\n    const artisticeventWithPerformers = artisticevent.getPerformers().then(performers => {\n      artisticevent.dataValues.performers = performers;\n    }).then(() => {\n      return artisticevent;\n    });\n    promises.push(artisticeventWithPerformers);\n    return Promise.all(promises);\n  }).then(artisticevent => {\n    res.json({\n      artisticevent: artisticevent\n    });\n  }).catch(err => console.log(err));\n};\n\nexports.getSimilars = (req, res, next) => {\n  const artisticeventId = req.params.id;\n  Artisticevent.findByPk(artisticeventId).then(artisticevent => {\n    if (!artisticevent) {\n      res.status(404).json({\n        messages: 'Artistic Event Not Found'\n      });\n    }\n\n    var promises = [];\n    const artisticeventWithSimilars = artisticevent.getSimilar().then(similars => {\n      artisticevent.dataValues.similars = similars;\n    }).then(() => {\n      return artisticevent;\n    });\n    promises.push(artisticeventWithSimilars);\n    return Promise.all(promises);\n  }).then(artisticevent => {\n    res.json({\n      artisticevent: artisticevent\n    });\n  }).catch(err => console.log(err));\n};\n\nexports.getSameDayEvents = (req, res, next) => {\n  const artisticeventId = req.params.id;\n  Artisticevent.findByPk(artisticeventId).then(artisticevent => {\n    if (!artisticevent) {\n      res.status(404).json({\n        messages: 'Artistic Event Not Found'\n      });\n    }\n\n    var promises = [];\n    var artisticeventWithSameDay = Artisticevent.findAll({\n      where: {\n        date: artisticevent.date\n      }\n    }).then(sameday => {\n      var pos = -1;\n\n      for (var i = 0; i < sameday.length; ++i) {\n        if (sameday[i].dataValues.title == artisticevent.dataValues.title) {\n          pos = i;\n          sameday.splice(pos, 1);\n          ;\n        }\n      }\n\n      artisticevent.dataValues.sameday_artisticevents = sameday;\n    }).then(() => {\n      return artisticevent;\n    });\n    artisticeventWithSameDay = Seminary.findAll({\n      where: {\n        date: artisticevent.date\n      }\n    }).then(sameday => {\n      artisticevent.dataValues.sameday_seminaries = sameday;\n    }).then(() => {\n      return artisticevent;\n    });\n    promises.push(artisticeventWithSameDay);\n    return Promise.all(promises);\n  }).then(artisticevent => {\n    res.json({\n      artisticevent: artisticevent\n    });\n  }).catch(err => console.log(err));\n};\n\nexports.searchArtisticeventByTitle = (req, res, next) => {\n  const title = '%' + req.query.title + '%';\n  Artisticevent.findAll({\n    where: {\n      title: {\n        [Op.like]: title\n      }\n    }\n  }).then(artisticevents => {\n    var promises = [];\n    artisticevents.forEach(artisticevent => {\n      const artisticeventWithPerformers = artisticevent.getPerformers().then(performers => {\n        artisticevent.dataValues.performers = performers;\n      }).then(() => {\n        return artisticevent;\n      });\n      promises.push(artisticeventWithPerformers);\n    });\n    return Promise.all(promises);\n  }).then(artisticevents => {\n    res.json({\n      artisticevents: artisticevents\n    });\n  }).catch(err => console.log(err));\n};\n/*\nexports.searchArtisticeventByDate = (req, res, next) => {\n    const date = req.query.date;\n\n    Artisticevent.findAll({where : {date : date}})\n    .then(artisticevents => {\n        var promises = [];\n        artisticevents.forEach(artisticevent => {\n        const artisticeventWithPerformers = artisticevent.getPerformers()\n               .then(performers => {\n                    artisticevent.dataValues.performers = performers;\n                })\n               .then(() => {\n               return artisticevent;\n               });\n        promises.push(artisticeventWithPerformers);\n        });\n        return Promise.all(promises);\n    }).then((artisticevents) => {\n            res.json({artisticevents : artisticevents});\n    }).catch(\n            err => console.log(err)\n    );\n};\n*/\n\n\nexports.searchEventsByDate = (req, res, next) => {\n  const date = req.query.date;\n  Artisticevent.findAll({\n    where: {\n      date: date\n    }\n  }).then(artisticevents => {\n    var promises = [];\n    artisticevents.forEach(artisticevent => {\n      const artisticeventWithPerformers = artisticevent.getPerformers().then(performers => {\n        artisticevent.dataValues.performers = performers;\n      }).then(() => {\n        return artisticevent;\n      });\n      promises.push(artisticeventWithPerformers);\n    });\n    return Promise.all(promises);\n  }).then(artisticevents => {\n    Seminary.findAll({\n      where: {\n        date: date\n      }\n    }).then(seminaries => {\n      res.json({\n        artisticevents: artisticevents,\n        seminaries: seminaries\n      });\n    });\n  }).catch(err => console.log(err));\n};\n\nexports.searchEventsByType = (req, res, next) => {\n  const type = req.query.type;\n  Type.findAll({\n    where: {\n      name: type\n    }\n  }).then(types => {\n    const chosen_type = types[0];\n    const artisticevents_ = chosen_type.getArtisticevents().then(artisticevents => {\n      var promises = [];\n      artisticevents.forEach(artisticevent => {\n        const artisticeventWithPerformers = artisticevent.getPerformers().then(performers => {\n          artisticevent.dataValues.performers = performers;\n        }).then(() => {\n          return artisticevent;\n        });\n        promises.push(artisticeventWithPerformers);\n      });\n      return Promise.all(promises);\n    }).then(artisticevents => {\n      return artisticevents;\n    });\n    return artisticevents_;\n  }).then(artisticevents => {\n    Type.findAll({\n      where: {\n        name: type\n      }\n    }).then(types => {\n      const chosen_type = types[0];\n      const seminaries_ = chosen_type.getSeminaries().then(seminaries => {\n        var promises = [];\n        seminaries.forEach(seminary => {\n          const seminaryWithArtisticevents = seminary.getArtisticevents().then(artisticevents => {\n            seminary.dataValues.artisticevents = artisticevents;\n          }).then(() => {\n            return seminary;\n          });\n          promises.push(seminaryWithArtisticevents);\n        });\n        return Promise.all(promises);\n      }).then(seminaries => {\n        return seminaries;\n      });\n      return seminaries_;\n    }).then(seminaries => {\n      res.json({\n        artisticevents: artisticevents,\n        seminaries: seminaries\n      });\n    });\n  }).catch(err => console.log(err));\n};\n\nexports.getTypes = (req, res, next) => {\n  Type.findAll().then(types => {\n    res.json({\n      types: types\n    });\n  }).catch(err => console.log(err));\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "artisticevent.js"
      ],
      "names": [
        "validationResult",
        "require",
        "Sequelize",
        "Op",
        "path",
        "fs",
        "Artisticevent",
        "Seminary",
        "Type",
        "Typologyae",
        "Typologyse",
        "Performer",
        "Performance",
        "User",
        "exports",
        "getArtisticevents",
        "req",
        "res",
        "next",
        "findAll",
        "then",
        "artisticevents",
        "promises",
        "forEach",
        "artisticevent",
        "artisticeventWithPerformers",
        "getPerformers",
        "performers",
        "dataValues",
        "push",
        "Promise",
        "all",
        "json",
        "catch",
        "err",
        "console",
        "log",
        "getArtisticevent",
        "artisticeventId",
        "params",
        "id",
        "findByPk",
        "status",
        "messages",
        "getSimilars",
        "artisticeventWithSimilars",
        "getSimilar",
        "similars",
        "getSameDayEvents",
        "artisticeventWithSameDay",
        "where",
        "date",
        "sameday",
        "pos",
        "i",
        "length",
        "title",
        "splice",
        "sameday_artisticevents",
        "sameday_seminaries",
        "searchArtisticeventByTitle",
        "query",
        "like",
        "searchEventsByDate",
        "seminaries",
        "searchEventsByType",
        "type",
        "name",
        "types",
        "chosen_type",
        "artisticevents_",
        "seminaries_",
        "getSeminaries",
        "seminary",
        "seminaryWithArtisticevents",
        "getTypes"
      ],
      "mappings": "AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAuBC,OAAO,CAAC,yBAAD,CAApC;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,WAAD,CAAzB;;AACA,MAAME,EAAE,GAAGD,SAAS,CAACC,EAArB;;AACA,MAAMC,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMI,EAAE,GAAGJ,OAAO,CAAC,IAAD,CAAlB;;AAEA,MAAMK,aAAa,GAAGL,OAAO,CAAC,yBAAD,CAA7B;;AACA,MAAMM,QAAQ,GAAGN,OAAO,CAAC,oBAAD,CAAxB;;AACA,MAAMO,IAAI,GAAGP,OAAO,CAAC,gBAAD,CAApB;;AACA,MAAMQ,UAAU,GAAGR,OAAO,CAAC,sBAAD,CAA1B;;AACA,MAAMS,UAAU,GAAGT,OAAO,CAAC,sBAAD,CAA1B;;AACA,MAAMU,SAAS,GAAGV,OAAO,CAAC,qBAAD,CAAzB;;AACA,MAAMW,WAAW,GAAGX,OAAO,CAAC,uBAAD,CAA3B;;AACA,MAAMY,IAAI,GAAGZ,OAAO,CAAC,gBAAD,CAApB;;AAEAa,OAAO,CAACC,iBAAR,GAA4B,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAC5CZ,EAAAA,aAAa,CAACa,OAAd,GACCC,IADD,CACMC,cAAc,IAAI;AACpB,QAAIC,QAAQ,GAAG,EAAf;AACAD,IAAAA,cAAc,CAACE,OAAf,CAAuBC,aAAa,IAAI;AACxC,YAAMC,2BAA2B,GAAGD,aAAa,CAACE,aAAd,GAC5BN,IAD4B,CACvBO,UAAU,IAAI;AACfH,QAAAA,aAAa,CAACI,UAAd,CAAyBD,UAAzB,GAAsCA,UAAtC;AACH,OAH2B,EAI5BP,IAJ4B,CAIvB,MAAM;AACX,eAAOI,aAAP;AACA,OAN4B,CAApC;AAOAF,MAAAA,QAAQ,CAACO,IAAT,CAAcJ,2BAAd;AACC,KATD;AAUA,WAAOK,OAAO,CAACC,GAAR,CAAYT,QAAZ,CAAP;AACH,GAdD,EAcGF,IAdH,CAcSC,cAAD,IAAoB;AACxBJ,IAAAA,GAAG,CAACe,IAAJ,CAAS;AAACX,MAAAA,cAAc,EAAGA;AAAlB,KAAT;AACH,GAhBD,EAgBGY,KAhBH,CAiBIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAjBX;AAmBH,CApBD;;AAsBApB,OAAO,CAACuB,gBAAR,GAA2B,CAACrB,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAC3C,QAAMoB,eAAe,GAAGtB,GAAG,CAACuB,MAAJ,CAAWC,EAAnC;AACAlC,EAAAA,aAAa,CAACmC,QAAd,CAAuBH,eAAvB,EACClB,IADD,CACMI,aAAa,IAAI;AACnB,QAAG,CAACA,aAAJ,EAAmB;AACfP,MAAAA,GAAG,CAACyB,MAAJ,CAAW,GAAX,EAAgBV,IAAhB,CAAqB;AACjBW,QAAAA,QAAQ,EAAG;AADM,OAArB;AAGH;;AACD,QAAIrB,QAAQ,GAAG,EAAf;AACA,UAAMG,2BAA2B,GAAGD,aAAa,CAACE,aAAd,GACnCN,IADmC,CAC9BO,UAAU,IAAI;AACfH,MAAAA,aAAa,CAACI,UAAd,CAAyBD,UAAzB,GAAsCA,UAAtC;AACH,KAHkC,EAInCP,IAJmC,CAI9B,MAAM;AACP,aAAOI,aAAP;AACJ,KANmC,CAApC;AAOAF,IAAAA,QAAQ,CAACO,IAAT,CAAcJ,2BAAd;AACA,WAAOK,OAAO,CAACC,GAAR,CAAYT,QAAZ,CAAP;AACC,GAjBL,EAiBOF,IAjBP,CAiBaI,aAAD,IAAmB;AACvBP,IAAAA,GAAG,CAACe,IAAJ,CAAS;AAACR,MAAAA,aAAa,EAAGA;AAAjB,KAAT;AACH,GAnBL,EAmBOS,KAnBP,CAoBQC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CApBf;AAsBH,CAxBD;;AA0BApB,OAAO,CAAC8B,WAAR,GAAsB,CAAC5B,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACtC,QAAMoB,eAAe,GAAGtB,GAAG,CAACuB,MAAJ,CAAWC,EAAnC;AACAlC,EAAAA,aAAa,CAACmC,QAAd,CAAuBH,eAAvB,EACClB,IADD,CACMI,aAAa,IAAI;AACnB,QAAG,CAACA,aAAJ,EAAmB;AACfP,MAAAA,GAAG,CAACyB,MAAJ,CAAW,GAAX,EAAgBV,IAAhB,CAAqB;AACjBW,QAAAA,QAAQ,EAAG;AADM,OAArB;AAGH;;AACD,QAAIrB,QAAQ,GAAG,EAAf;AACA,UAAMuB,yBAAyB,GAAGrB,aAAa,CAACsB,UAAd,GACjC1B,IADiC,CAC5B2B,QAAQ,IAAI;AACbvB,MAAAA,aAAa,CAACI,UAAd,CAAyBmB,QAAzB,GAAoCA,QAApC;AACH,KAHgC,EAIjC3B,IAJiC,CAI5B,MAAM;AACP,aAAOI,aAAP;AACJ,KANiC,CAAlC;AAOAF,IAAAA,QAAQ,CAACO,IAAT,CAAcgB,yBAAd;AACA,WAAOf,OAAO,CAACC,GAAR,CAAYT,QAAZ,CAAP;AACC,GAjBL,EAiBOF,IAjBP,CAiBaI,aAAD,IAAmB;AACvBP,IAAAA,GAAG,CAACe,IAAJ,CAAS;AAACR,MAAAA,aAAa,EAAGA;AAAjB,KAAT;AACH,GAnBL,EAmBOS,KAnBP,CAoBQC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CApBf;AAsBH,CAxBD;;AA0BApB,OAAO,CAACkC,gBAAR,GAA2B,CAAChC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAC3C,QAAMoB,eAAe,GAAGtB,GAAG,CAACuB,MAAJ,CAAWC,EAAnC;AACAlC,EAAAA,aAAa,CAACmC,QAAd,CAAuBH,eAAvB,EACClB,IADD,CACMI,aAAa,IAAI;AACnB,QAAG,CAACA,aAAJ,EAAmB;AACfP,MAAAA,GAAG,CAACyB,MAAJ,CAAW,GAAX,EAAgBV,IAAhB,CAAqB;AACjBW,QAAAA,QAAQ,EAAG;AADM,OAArB;AAGH;;AACD,QAAIrB,QAAQ,GAAG,EAAf;AACA,QAAI2B,wBAAwB,GAAG3C,aAAa,CAACa,OAAd,CAAsB;AAAC+B,MAAAA,KAAK,EAAG;AAACC,QAAAA,IAAI,EAAG3B,aAAa,CAAC2B;AAAtB;AAAT,KAAtB,EAC9B/B,IAD8B,CACzBgC,OAAO,IAAI;AACb,UAAIC,GAAG,GAAG,CAAC,CAAX;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,OAAO,CAACG,MAA3B,EAAmC,EAAED,CAArC,EAAwC;AACpC,YAAGF,OAAO,CAACE,CAAD,CAAP,CAAW1B,UAAX,CAAsB4B,KAAtB,IAA+BhC,aAAa,CAACI,UAAd,CAAyB4B,KAA3D,EAAkE;AAC9DH,UAAAA,GAAG,GAAGC,CAAN;AACAF,UAAAA,OAAO,CAACK,MAAR,CAAeJ,GAAf,EAAoB,CAApB;AAAuB;AAC1B;AACJ;;AACD7B,MAAAA,aAAa,CAACI,UAAd,CAAyB8B,sBAAzB,GAAkDN,OAAlD;AACF,KAV6B,EAU3BhC,IAV2B,CAUtB,MAAM;AACV,aAAOI,aAAP;AACJ,KAZ8B,CAA/B;AAaAyB,IAAAA,wBAAwB,GAAG1C,QAAQ,CAACY,OAAT,CAAiB;AAAC+B,MAAAA,KAAK,EAAG;AAACC,QAAAA,IAAI,EAAG3B,aAAa,CAAC2B;AAAtB;AAAT,KAAjB,EAC1B/B,IAD0B,CACrBgC,OAAO,IAAI;AACb5B,MAAAA,aAAa,CAACI,UAAd,CAAyB+B,kBAAzB,GAA8CP,OAA9C;AACH,KAH0B,EAGxBhC,IAHwB,CAGnB,MAAM;AACV,aAAOI,aAAP;AACH,KAL0B,CAA3B;AAMAF,IAAAA,QAAQ,CAACO,IAAT,CAAcoB,wBAAd;AACA,WAAOnB,OAAO,CAACC,GAAR,CAAYT,QAAZ,CAAP;AACC,GA7BL,EA6BOF,IA7BP,CA6BaI,aAAD,IAAmB;AACvBP,IAAAA,GAAG,CAACe,IAAJ,CAAS;AAACR,MAAAA,aAAa,EAAGA;AAAjB,KAAT;AACH,GA/BL,EA+BOS,KA/BP,CAgCQC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAhCf;AAkCH,CApCD;;AAsCApB,OAAO,CAAC8C,0BAAR,GAAqC,CAAC5C,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACrD,QAAMsC,KAAK,GAAG,MAAMxC,GAAG,CAAC6C,KAAJ,CAAUL,KAAhB,GAAwB,GAAtC;AACAlD,EAAAA,aAAa,CAACa,OAAd,CAAsB;AAAC+B,IAAAA,KAAK,EAAG;AAACM,MAAAA,KAAK,EAAG;AAAC,SAACrD,EAAE,CAAC2D,IAAJ,GAAYN;AAAb;AAAT;AAAT,GAAtB,EACCpC,IADD,CACMC,cAAc,IAAI;AACpB,QAAIC,QAAQ,GAAG,EAAf;AACAD,IAAAA,cAAc,CAACE,OAAf,CAAuBC,aAAa,IAAI;AACxC,YAAMC,2BAA2B,GAAGD,aAAa,CAACE,aAAd,GAC5BN,IAD4B,CACvBO,UAAU,IAAI;AACfH,QAAAA,aAAa,CAACI,UAAd,CAAyBD,UAAzB,GAAsCA,UAAtC;AACH,OAH2B,EAI5BP,IAJ4B,CAIvB,MAAM;AACX,eAAOI,aAAP;AACA,OAN4B,CAApC;AAOAF,MAAAA,QAAQ,CAACO,IAAT,CAAcJ,2BAAd;AACC,KATD;AAUA,WAAOK,OAAO,CAACC,GAAR,CAAYT,QAAZ,CAAP;AACH,GAdD,EAcGF,IAdH,CAcSC,cAAD,IAAoB;AACpBJ,IAAAA,GAAG,CAACe,IAAJ,CAAS;AAACX,MAAAA,cAAc,EAAGA;AAAlB,KAAT;AACP,GAhBD,EAgBGY,KAhBH,CAiBQC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAjBf;AAmBH,CArBD;AAuBA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BApB,OAAO,CAACiD,kBAAR,GAA6B,CAAC/C,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAC7C,QAAMiC,IAAI,GAAGnC,GAAG,CAAC6C,KAAJ,CAAUV,IAAvB;AACA7C,EAAAA,aAAa,CAACa,OAAd,CAAsB;AAAC+B,IAAAA,KAAK,EAAG;AAACC,MAAAA,IAAI,EAAGA;AAAR;AAAT,GAAtB,EACC/B,IADD,CACMC,cAAc,IAAI;AACpB,QAAIC,QAAQ,GAAG,EAAf;AACAD,IAAAA,cAAc,CAACE,OAAf,CAAuBC,aAAa,IAAI;AACxC,YAAMC,2BAA2B,GAAGD,aAAa,CAACE,aAAd,GAC5BN,IAD4B,CACvBO,UAAU,IAAI;AACfH,QAAAA,aAAa,CAACI,UAAd,CAAyBD,UAAzB,GAAsCA,UAAtC;AACH,OAH2B,EAI5BP,IAJ4B,CAIvB,MAAM;AACZ,eAAOI,aAAP;AACC,OAN4B,CAApC;AAOAF,MAAAA,QAAQ,CAACO,IAAT,CAAcJ,2BAAd;AACC,KATD;AAUA,WAAOK,OAAO,CAACC,GAAR,CAAYT,QAAZ,CAAP;AACH,GAdD,EAcGF,IAdH,CAcSC,cAAD,IAAoB;AACxBd,IAAAA,QAAQ,CAACY,OAAT,CAAiB;AAAC+B,MAAAA,KAAK,EAAG;AAACC,QAAAA,IAAI,EAAGA;AAAR;AAAT,KAAjB,EACC/B,IADD,CACM4C,UAAU,IAAI;AAChB/C,MAAAA,GAAG,CAACe,IAAJ,CAAS;AACLX,QAAAA,cAAc,EAAGA,cADZ;AAEL2C,QAAAA,UAAU,EAAGA;AAFR,OAAT;AAIH,KAND;AAOH,GAtBD,EAsBG/B,KAtBH,CAuBQC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAvBf;AAyBH,CA3BD;;AA6BApB,OAAO,CAACmD,kBAAR,GAA6B,CAACjD,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAC7C,QAAMgD,IAAI,GAAGlD,GAAG,CAAC6C,KAAJ,CAAUK,IAAvB;AACA1D,EAAAA,IAAI,CAACW,OAAL,CAAa;AAAC+B,IAAAA,KAAK,EAAG;AAACiB,MAAAA,IAAI,EAAGD;AAAR;AAAT,GAAb,EACC9C,IADD,CACMgD,KAAK,IAAI;AACX,UAAMC,WAAW,GAAGD,KAAK,CAAC,CAAD,CAAzB;AACA,UAAME,eAAe,GAAGD,WAAW,CAACtD,iBAAZ,GAAgCK,IAAhC,CAAqCC,cAAc,IAAI;AAC3E,UAAIC,QAAQ,GAAG,EAAf;AACAD,MAAAA,cAAc,CAACE,OAAf,CAAuBC,aAAa,IAAI;AACpC,cAAMC,2BAA2B,GAAGD,aAAa,CAACE,aAAd,GAC5BN,IAD4B,CACvBO,UAAU,IAAI;AACfH,UAAAA,aAAa,CAACI,UAAd,CAAyBD,UAAzB,GAAsCA,UAAtC;AACH,SAH2B,EAI5BP,IAJ4B,CAIvB,MAAM;AACZ,iBAAOI,aAAP;AACC,SAN4B,CAApC;AAOAF,QAAAA,QAAQ,CAACO,IAAT,CAAcJ,2BAAd;AACC,OATL;AAUA,aAAOK,OAAO,CAACC,GAAR,CAAYT,QAAZ,CAAP;AACH,KAbuB,EAcvBF,IAduB,CAcjBC,cAAD,IAAoB;AACtB,aAAOA,cAAP;AACH,KAhBuB,CAAxB;AAiBA,WAAOiD,eAAP;AACH,GArBD,EAqBGlD,IArBH,CAqBSC,cAAD,IAAoB;AAExBb,IAAAA,IAAI,CAACW,OAAL,CAAa;AAAC+B,MAAAA,KAAK,EAAG;AAACiB,QAAAA,IAAI,EAAGD;AAAR;AAAT,KAAb,EACC9C,IADD,CACMgD,KAAK,IAAI;AACX,YAAMC,WAAW,GAAGD,KAAK,CAAC,CAAD,CAAzB;AACA,YAAMG,WAAW,GAAGF,WAAW,CAACG,aAAZ,GAA4BpD,IAA5B,CAAiC4C,UAAU,IAAI;AAC/D,YAAI1C,QAAQ,GAAG,EAAf;AACA0C,QAAAA,UAAU,CAACzC,OAAX,CAAmBkD,QAAQ,IAAI;AAC3B,gBAAMC,0BAA0B,GAAGD,QAAQ,CAAC1D,iBAAT,GAC3BK,IAD2B,CACtBC,cAAc,IAAI;AACnBoD,YAAAA,QAAQ,CAAC7C,UAAT,CAAoBP,cAApB,GAAqCA,cAArC;AACH,WAH0B,EAI3BD,IAJ2B,CAItB,MAAM;AACZ,mBAAOqD,QAAP;AACC,WAN2B,CAAnC;AAOAnD,UAAAA,QAAQ,CAACO,IAAT,CAAc6C,0BAAd;AACC,SATL;AAUA,eAAO5C,OAAO,CAACC,GAAR,CAAYT,QAAZ,CAAP;AACH,OAbmB,EAcnBF,IAdmB,CAcb4C,UAAD,IAAgB;AAClB,eAAOA,UAAP;AACH,OAhBmB,CAApB;AAiBD,aAAOO,WAAP;AACF,KArBD,EAsBCnD,IAtBD,CAsBM4C,UAAU,IAAI;AAChB/C,MAAAA,GAAG,CAACe,IAAJ,CAAS;AACLX,QAAAA,cAAc,EAAGA,cADZ;AAEL2C,QAAAA,UAAU,EAAGA;AAFR,OAAT;AAIH,KA3BD;AA4BH,GAnDD,EAmDG/B,KAnDH,CAoDIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CApDX;AAsDH,CAxDD;;AA0DApB,OAAO,CAAC6D,QAAR,GAAmB,CAAC3D,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACnCV,EAAAA,IAAI,CAACW,OAAL,GACCC,IADD,CACMgD,KAAK,IAAI;AACXnD,IAAAA,GAAG,CAACe,IAAJ,CAAS;AAACoC,MAAAA,KAAK,EAAGA;AAAT,KAAT;AACH,GAHD,EAGGnC,KAHH,CAIIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJX;AAMH,CAPD",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers",
      "sourcesContent": [
        "const { validationResult } = require('express-validator/check');\nconst Sequelize = require('sequelize');\nconst Op = Sequelize.Op;\nconst path = require('path');\nconst fs = require('fs');\n\nconst Artisticevent = require('../models/artisticevent');\nconst Seminary = require('../models/seminary');\nconst Type = require('../models/type');\nconst Typologyae = require('../models/typologyae');\nconst Typologyse = require('../models/typologyse');\nconst Performer = require('../models/performer');\nconst Performance = require('../models/performance');\nconst User = require('../models/user');\n\nexports.getArtisticevents = (req, res, next) => {\n    Artisticevent.findAll()\n    .then(artisticevents => {\n        var promises = [];\n        artisticevents.forEach(artisticevent => {\n        const artisticeventWithPerformers = artisticevent.getPerformers()\n               .then(performers => {\n                    artisticevent.dataValues.performers = performers;\n                })\n               .then(() => {\n                return artisticevent;\n               });\n        promises.push(artisticeventWithPerformers);\n        });\n        return Promise.all(promises);\n    }).then((artisticevents) => {\n        res.json({artisticevents : artisticevents});\n    }).catch(\n        err => console.log(err)\n    );\n};\n\nexports.getArtisticevent = (req, res, next) => {\n    const artisticeventId = req.params.id;\n    Artisticevent.findByPk(artisticeventId)\n    .then(artisticevent => {\n        if(!artisticevent) {\n            res.status(404).json({\n                messages : 'Artistic Event Not Found',\n            });\n        }\n        var promises = [];\n        const artisticeventWithPerformers = artisticevent.getPerformers()\n        .then(performers => {\n             artisticevent.dataValues.performers = performers;\n         })\n        .then(() => {\n             return artisticevent;\n        });\n        promises.push(artisticeventWithPerformers);\n        return Promise.all(promises);\n        }).then((artisticevent) => {\n            res.json({artisticevent : artisticevent});\n        }).catch(\n            err => console.log(err)\n        );\n};\n\nexports.getSimilars = (req, res, next) => {\n    const artisticeventId = req.params.id;\n    Artisticevent.findByPk(artisticeventId)\n    .then(artisticevent => {\n        if(!artisticevent) {\n            res.status(404).json({\n                messages : 'Artistic Event Not Found',\n            });\n        }\n        var promises = [];\n        const artisticeventWithSimilars = artisticevent.getSimilar()\n        .then(similars => {\n             artisticevent.dataValues.similars = similars;\n         })\n        .then(() => {\n             return artisticevent;\n        });\n        promises.push(artisticeventWithSimilars);\n        return Promise.all(promises);\n        }).then((artisticevent) => {\n            res.json({artisticevent : artisticevent});\n        }).catch(\n            err => console.log(err)\n        );\n};\n\nexports.getSameDayEvents = (req, res, next) => {\n    const artisticeventId = req.params.id;\n    Artisticevent.findByPk(artisticeventId)\n    .then(artisticevent => {\n        if(!artisticevent) {\n            res.status(404).json({\n                messages : 'Artistic Event Not Found',\n            });\n        }\n        var promises = [];\n        var artisticeventWithSameDay = Artisticevent.findAll({where : {date : artisticevent.date}})\n        .then(sameday => {\n            var pos = -1;\n            for(var i = 0; i < sameday.length; ++i) {\n                if(sameday[i].dataValues.title == artisticevent.dataValues.title) {\n                    pos = i;\n                    sameday.splice(pos, 1);;\n                }\n            }\n            artisticevent.dataValues.sameday_artisticevents = sameday;\n         }).then(() => {\n             return artisticevent;\n        });\n        artisticeventWithSameDay = Seminary.findAll({where : {date : artisticevent.date}})\n        .then(sameday => {\n            artisticevent.dataValues.sameday_seminaries = sameday;\n        }).then(() => {\n            return artisticevent;\n        });\n        promises.push(artisticeventWithSameDay);\n        return Promise.all(promises);\n        }).then((artisticevent) => {\n            res.json({artisticevent : artisticevent});\n        }).catch(\n            err => console.log(err)\n        );\n};\n\nexports.searchArtisticeventByTitle = (req, res, next) => {\n    const title = '%' + req.query.title + '%';\n    Artisticevent.findAll({where : {title : {[Op.like] : title}}})\n    .then(artisticevents => {\n        var promises = [];\n        artisticevents.forEach(artisticevent => {\n        const artisticeventWithPerformers = artisticevent.getPerformers()\n               .then(performers => {\n                    artisticevent.dataValues.performers = performers;\n                })\n               .then(() => {\n                return artisticevent;\n               });\n        promises.push(artisticeventWithPerformers);\n        });\n        return Promise.all(promises);\n    }).then((artisticevents) => {\n            res.json({artisticevents : artisticevents});\n    }).catch(\n            err => console.log(err)\n    );\n};\n\n/*\nexports.searchArtisticeventByDate = (req, res, next) => {\n    const date = req.query.date;\n\n    Artisticevent.findAll({where : {date : date}})\n    .then(artisticevents => {\n        var promises = [];\n        artisticevents.forEach(artisticevent => {\n        const artisticeventWithPerformers = artisticevent.getPerformers()\n               .then(performers => {\n                    artisticevent.dataValues.performers = performers;\n                })\n               .then(() => {\n               return artisticevent;\n               });\n        promises.push(artisticeventWithPerformers);\n        });\n        return Promise.all(promises);\n    }).then((artisticevents) => {\n            res.json({artisticevents : artisticevents});\n    }).catch(\n            err => console.log(err)\n    );\n};\n*/\n\nexports.searchEventsByDate = (req, res, next) => {\n    const date = req.query.date;\n    Artisticevent.findAll({where : {date : date}})\n    .then(artisticevents => {\n        var promises = [];\n        artisticevents.forEach(artisticevent => {\n        const artisticeventWithPerformers = artisticevent.getPerformers()\n               .then(performers => {\n                    artisticevent.dataValues.performers = performers;\n                })\n               .then(() => {\n               return artisticevent;\n               });\n        promises.push(artisticeventWithPerformers);\n        });\n        return Promise.all(promises);\n    }).then((artisticevents) => {\n        Seminary.findAll({where : {date : date}})\n        .then(seminaries => {\n            res.json({\n                artisticevents : artisticevents,\n                seminaries : seminaries\n            });\n        })\n    }).catch(\n            err => console.log(err)\n    );\n};\n\nexports.searchEventsByType = (req, res, next) => {\n    const type = req.query.type;\n    Type.findAll({where : {name : type}})\n    .then(types => {\n        const chosen_type = types[0];\n        const artisticevents_ = chosen_type.getArtisticevents().then(artisticevents => {\n            var promises = [];\n            artisticevents.forEach(artisticevent => {\n                const artisticeventWithPerformers = artisticevent.getPerformers()\n                       .then(performers => {\n                            artisticevent.dataValues.performers = performers;\n                        })\n                       .then(() => {\n                       return artisticevent;\n                       });\n                promises.push(artisticeventWithPerformers);\n                });\n            return Promise.all(promises);\n        })\n        .then((artisticevents) => {\n            return artisticevents;\n        });\n        return artisticevents_;\n    }).then((artisticevents) => {\n        \n        Type.findAll({where : {name : type}})\n        .then(types => {\n            const chosen_type = types[0];\n            const seminaries_ = chosen_type.getSeminaries().then(seminaries => {\n                var promises = [];\n                seminaries.forEach(seminary => {\n                    const seminaryWithArtisticevents = seminary.getArtisticevents()\n                           .then(artisticevents => {\n                                seminary.dataValues.artisticevents = artisticevents;\n                            })\n                           .then(() => {\n                           return seminary;\n                           });\n                    promises.push(seminaryWithArtisticevents);\n                    });\n                return Promise.all(promises);\n            })\n            .then((seminaries) => {\n                return seminaries;\n            });\n           return seminaries_;\n        })\n        .then(seminaries => {\n            res.json({\n                artisticevents : artisticevents,\n                seminaries : seminaries\n            });\n        });\n    }).catch(\n        err => console.log(err)\n    );\n};\n\nexports.getTypes = (req, res, next) => {\n    Type.findAll()\n    .then(types => {\n        res.json({types : types});\n    }).catch(\n        err => console.log(err)\n    );\n};"
      ]
    },
    "sourceType": "module",
    "mtime": 1577955791939
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models/artisticevent.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"plugins\":[],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models/artisticevent.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models/artisticevent.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models/artisticevent.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models",
        "sourceFileName": "artisticevent.js"
      }
    },
    "ast": null,
    "code": "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst Artistic_Event = sequelize.define('artisticevent', {\n  id: {\n    type: Sequelize.INTEGER,\n    autoIncrement: true,\n    allowNull: false,\n    primaryKey: true\n  },\n  title: {\n    type: Sequelize.STRING,\n    allowNull: false\n  },\n  date: {\n    type: Sequelize.STRING,\n    allowNull: true\n  },\n  factsheet: {\n    //it must include the date\n    type: Sequelize.STRING,\n    allowNull: true\n  },\n  abstract: {\n    type: Sequelize.STRING,\n    allowNull: true\n  },\n  image: {\n    //photo gallery\n    type: Sequelize.STRING,\n    allowNull: true\n  }\n});\nmodule.exports = Artistic_Event;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFydGlzdGljZXZlbnQuanMiXSwibmFtZXMiOlsiU2VxdWVsaXplIiwicmVxdWlyZSIsInNlcXVlbGl6ZSIsIkFydGlzdGljX0V2ZW50IiwiZGVmaW5lIiwiaWQiLCJ0eXBlIiwiSU5URUdFUiIsImF1dG9JbmNyZW1lbnQiLCJhbGxvd051bGwiLCJwcmltYXJ5S2V5IiwidGl0bGUiLCJTVFJJTkciLCJkYXRlIiwiZmFjdHNoZWV0IiwiYWJzdHJhY3QiLCJpbWFnZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFNBQVMsR0FBR0MsT0FBTyxDQUFDLFdBQUQsQ0FBekI7O0FBRUEsTUFBTUMsU0FBUyxHQUFHRCxPQUFPLENBQUMsbUJBQUQsQ0FBekI7O0FBRUEsTUFBTUUsY0FBYyxHQUFHRCxTQUFTLENBQUNFLE1BQVYsQ0FBaUIsZUFBakIsRUFBa0M7QUFDckRDLEVBQUFBLEVBQUUsRUFBRztBQUNEQyxJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ08sT0FEaEI7QUFFREMsSUFBQUEsYUFBYSxFQUFHLElBRmY7QUFHREMsSUFBQUEsU0FBUyxFQUFHLEtBSFg7QUFJREMsSUFBQUEsVUFBVSxFQUFHO0FBSlosR0FEZ0Q7QUFPckRDLEVBQUFBLEtBQUssRUFBRztBQUNKTCxJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ1ksTUFEYjtBQUVKSCxJQUFBQSxTQUFTLEVBQUc7QUFGUixHQVA2QztBQVdyREksRUFBQUEsSUFBSSxFQUFHO0FBQ0hQLElBQUFBLElBQUksRUFBR04sU0FBUyxDQUFDWSxNQURkO0FBRUhILElBQUFBLFNBQVMsRUFBRztBQUZULEdBWDhDO0FBZXJESyxFQUFBQSxTQUFTLEVBQUc7QUFBRTtBQUNWUixJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ1ksTUFEVDtBQUVSSCxJQUFBQSxTQUFTLEVBQUc7QUFGSixHQWZ5QztBQW1CckRNLEVBQUFBLFFBQVEsRUFBRztBQUNQVCxJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ1ksTUFEVjtBQUVQSCxJQUFBQSxTQUFTLEVBQUc7QUFGTCxHQW5CMEM7QUF1QnJETyxFQUFBQSxLQUFLLEVBQUc7QUFBRTtBQUNOVixJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ1ksTUFEYjtBQUVKSCxJQUFBQSxTQUFTLEVBQUc7QUFGUjtBQXZCNkMsQ0FBbEMsQ0FBdkI7QUE2QkFRLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmYsY0FBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL0FsZXNzYW5kcm9fTXVzb2xpbm8vRGVza3RvcC9IeXBlcm1lZGlhL0RyZWFtTGFuZEZlc3RpdmFsXy9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBTZXF1ZWxpemUgPSByZXF1aXJlKCdzZXF1ZWxpemUnKTtcblxuY29uc3Qgc2VxdWVsaXplID0gcmVxdWlyZSgnLi4vdXRpbHMvZGF0YWJhc2UnKTtcblxuY29uc3QgQXJ0aXN0aWNfRXZlbnQgPSBzZXF1ZWxpemUuZGVmaW5lKCdhcnRpc3RpY2V2ZW50Jywge1xuICAgIGlkIDoge1xuICAgICAgICB0eXBlIDogU2VxdWVsaXplLklOVEVHRVIsXG4gICAgICAgIGF1dG9JbmNyZW1lbnQgOiB0cnVlLFxuICAgICAgICBhbGxvd051bGwgOiBmYWxzZSxcbiAgICAgICAgcHJpbWFyeUtleSA6IHRydWVcbiAgICB9LFxuICAgIHRpdGxlIDoge1xuICAgICAgICB0eXBlIDogU2VxdWVsaXplLlNUUklORyxcbiAgICAgICAgYWxsb3dOdWxsIDogZmFsc2UsXG4gICAgfSxcbiAgICBkYXRlIDoge1xuICAgICAgICB0eXBlIDogU2VxdWVsaXplLlNUUklORyxcbiAgICAgICAgYWxsb3dOdWxsIDogdHJ1ZSxcbiAgICB9LFxuICAgIGZhY3RzaGVldCA6IHsgLy9pdCBtdXN0IGluY2x1ZGUgdGhlIGRhdGVcbiAgICAgICAgdHlwZSA6IFNlcXVlbGl6ZS5TVFJJTkcsXG4gICAgICAgIGFsbG93TnVsbCA6IHRydWUsXG4gICAgfSxcbiAgICBhYnN0cmFjdCA6IHtcbiAgICAgICAgdHlwZSA6IFNlcXVlbGl6ZS5TVFJJTkcsXG4gICAgICAgIGFsbG93TnVsbCA6IHRydWUsXG4gICAgfSxcbiAgICBpbWFnZSA6IHsgLy9waG90byBnYWxsZXJ5XG4gICAgICAgIHR5cGUgOiBTZXF1ZWxpemUuU1RSSU5HLFxuICAgICAgICBhbGxvd051bGwgOiB0cnVlXG4gICAgfVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gQXJ0aXN0aWNfRXZlbnQ7Il19",
    "map": {
      "version": 3,
      "sources": [
        "artisticevent.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "sequelize",
        "Artistic_Event",
        "define",
        "id",
        "type",
        "INTEGER",
        "autoIncrement",
        "allowNull",
        "primaryKey",
        "title",
        "STRING",
        "date",
        "factsheet",
        "abstract",
        "image",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,MAAMC,SAAS,GAAGD,OAAO,CAAC,mBAAD,CAAzB;;AAEA,MAAME,cAAc,GAAGD,SAAS,CAACE,MAAV,CAAiB,eAAjB,EAAkC;AACrDC,EAAAA,EAAE,EAAG;AACDC,IAAAA,IAAI,EAAGN,SAAS,CAACO,OADhB;AAEDC,IAAAA,aAAa,EAAG,IAFf;AAGDC,IAAAA,SAAS,EAAG,KAHX;AAIDC,IAAAA,UAAU,EAAG;AAJZ,GADgD;AAOrDC,EAAAA,KAAK,EAAG;AACJL,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADb;AAEJH,IAAAA,SAAS,EAAG;AAFR,GAP6C;AAWrDI,EAAAA,IAAI,EAAG;AACHP,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADd;AAEHH,IAAAA,SAAS,EAAG;AAFT,GAX8C;AAerDK,EAAAA,SAAS,EAAG;AAAE;AACVR,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADT;AAERH,IAAAA,SAAS,EAAG;AAFJ,GAfyC;AAmBrDM,EAAAA,QAAQ,EAAG;AACPT,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADV;AAEPH,IAAAA,SAAS,EAAG;AAFL,GAnB0C;AAuBrDO,EAAAA,KAAK,EAAG;AAAE;AACNV,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADb;AAEJH,IAAAA,SAAS,EAAG;AAFR;AAvB6C,CAAlC,CAAvB;AA6BAQ,MAAM,CAACC,OAAP,GAAiBf,cAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst Artistic_Event = sequelize.define('artisticevent', {\n    id : {\n        type : Sequelize.INTEGER,\n        autoIncrement : true,\n        allowNull : false,\n        primaryKey : true\n    },\n    title : {\n        type : Sequelize.STRING,\n        allowNull : false,\n    },\n    date : {\n        type : Sequelize.STRING,\n        allowNull : true,\n    },\n    factsheet : { //it must include the date\n        type : Sequelize.STRING,\n        allowNull : true,\n    },\n    abstract : {\n        type : Sequelize.STRING,\n        allowNull : true,\n    },\n    image : { //photo gallery\n        type : Sequelize.STRING,\n        allowNull : true\n    }\n});\n\nmodule.exports = Artistic_Event;"
      ]
    },
    "sourceType": "module",
    "mtime": 1577794697677
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models/seminary.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"plugins\":[],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models/seminary.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models/seminary.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models/seminary.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models",
        "sourceFileName": "seminary.js"
      }
    },
    "ast": null,
    "code": "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst Seminary = sequelize.define('seminary', {\n  id: {\n    type: Sequelize.INTEGER,\n    autoIncrement: true,\n    allowNull: false,\n    primaryKey: true\n  },\n  title: {\n    type: Sequelize.STRING,\n    allowNull: false\n  },\n  date: {\n    type: Sequelize.STRING,\n    allowNull: true\n  },\n  location: {\n    type: Sequelize.STRING,\n    allowNull: true\n  }\n});\nmodule.exports = Seminary;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlbWluYXJ5LmpzIl0sIm5hbWVzIjpbIlNlcXVlbGl6ZSIsInJlcXVpcmUiLCJzZXF1ZWxpemUiLCJTZW1pbmFyeSIsImRlZmluZSIsImlkIiwidHlwZSIsIklOVEVHRVIiLCJhdXRvSW5jcmVtZW50IiwiYWxsb3dOdWxsIiwicHJpbWFyeUtleSIsInRpdGxlIiwiU1RSSU5HIiwiZGF0ZSIsImxvY2F0aW9uIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsU0FBUyxHQUFHQyxPQUFPLENBQUMsV0FBRCxDQUF6Qjs7QUFFQSxNQUFNQyxTQUFTLEdBQUdELE9BQU8sQ0FBQyxtQkFBRCxDQUF6Qjs7QUFFQSxNQUFNRSxRQUFRLEdBQUdELFNBQVMsQ0FBQ0UsTUFBVixDQUFpQixVQUFqQixFQUE2QjtBQUMxQ0MsRUFBQUEsRUFBRSxFQUFHO0FBQ0RDLElBQUFBLElBQUksRUFBR04sU0FBUyxDQUFDTyxPQURoQjtBQUVEQyxJQUFBQSxhQUFhLEVBQUcsSUFGZjtBQUdEQyxJQUFBQSxTQUFTLEVBQUcsS0FIWDtBQUlEQyxJQUFBQSxVQUFVLEVBQUc7QUFKWixHQURxQztBQU8xQ0MsRUFBQUEsS0FBSyxFQUFHO0FBQ0pMLElBQUFBLElBQUksRUFBR04sU0FBUyxDQUFDWSxNQURiO0FBRUpILElBQUFBLFNBQVMsRUFBRztBQUZSLEdBUGtDO0FBVzFDSSxFQUFBQSxJQUFJLEVBQUc7QUFDSFAsSUFBQUEsSUFBSSxFQUFHTixTQUFTLENBQUNZLE1BRGQ7QUFFSEgsSUFBQUEsU0FBUyxFQUFHO0FBRlQsR0FYbUM7QUFlMUNLLEVBQUFBLFFBQVEsRUFBRztBQUNQUixJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ1ksTUFEVjtBQUVQSCxJQUFBQSxTQUFTLEVBQUc7QUFGTDtBQWYrQixDQUE3QixDQUFqQjtBQXFCQU0sTUFBTSxDQUFDQyxPQUFQLEdBQWlCYixRQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvQWxlc3NhbmRyb19NdXNvbGluby9EZXNrdG9wL0h5cGVybWVkaWEvRHJlYW1MYW5kRmVzdGl2YWxfL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFNlcXVlbGl6ZSA9IHJlcXVpcmUoJ3NlcXVlbGl6ZScpO1xuXG5jb25zdCBzZXF1ZWxpemUgPSByZXF1aXJlKCcuLi91dGlscy9kYXRhYmFzZScpO1xuXG5jb25zdCBTZW1pbmFyeSA9IHNlcXVlbGl6ZS5kZWZpbmUoJ3NlbWluYXJ5Jywge1xuICAgIGlkIDoge1xuICAgICAgICB0eXBlIDogU2VxdWVsaXplLklOVEVHRVIsXG4gICAgICAgIGF1dG9JbmNyZW1lbnQgOiB0cnVlLFxuICAgICAgICBhbGxvd051bGwgOiBmYWxzZSxcbiAgICAgICAgcHJpbWFyeUtleSA6IHRydWVcbiAgICB9LFxuICAgIHRpdGxlIDoge1xuICAgICAgICB0eXBlIDogU2VxdWVsaXplLlNUUklORyxcbiAgICAgICAgYWxsb3dOdWxsIDogZmFsc2UsXG4gICAgfSxcbiAgICBkYXRlIDoge1xuICAgICAgICB0eXBlIDogU2VxdWVsaXplLlNUUklORyxcbiAgICAgICAgYWxsb3dOdWxsIDogdHJ1ZSxcbiAgICB9LFxuICAgIGxvY2F0aW9uIDoge1xuICAgICAgICB0eXBlIDogU2VxdWVsaXplLlNUUklORyxcbiAgICAgICAgYWxsb3dOdWxsIDogdHJ1ZVxuICAgIH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFNlbWluYXJ5OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "seminary.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "sequelize",
        "Seminary",
        "define",
        "id",
        "type",
        "INTEGER",
        "autoIncrement",
        "allowNull",
        "primaryKey",
        "title",
        "STRING",
        "date",
        "location",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,MAAMC,SAAS,GAAGD,OAAO,CAAC,mBAAD,CAAzB;;AAEA,MAAME,QAAQ,GAAGD,SAAS,CAACE,MAAV,CAAiB,UAAjB,EAA6B;AAC1CC,EAAAA,EAAE,EAAG;AACDC,IAAAA,IAAI,EAAGN,SAAS,CAACO,OADhB;AAEDC,IAAAA,aAAa,EAAG,IAFf;AAGDC,IAAAA,SAAS,EAAG,KAHX;AAIDC,IAAAA,UAAU,EAAG;AAJZ,GADqC;AAO1CC,EAAAA,KAAK,EAAG;AACJL,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADb;AAEJH,IAAAA,SAAS,EAAG;AAFR,GAPkC;AAW1CI,EAAAA,IAAI,EAAG;AACHP,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADd;AAEHH,IAAAA,SAAS,EAAG;AAFT,GAXmC;AAe1CK,EAAAA,QAAQ,EAAG;AACPR,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADV;AAEPH,IAAAA,SAAS,EAAG;AAFL;AAf+B,CAA7B,CAAjB;AAqBAM,MAAM,CAACC,OAAP,GAAiBb,QAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst Seminary = sequelize.define('seminary', {\n    id : {\n        type : Sequelize.INTEGER,\n        autoIncrement : true,\n        allowNull : false,\n        primaryKey : true\n    },\n    title : {\n        type : Sequelize.STRING,\n        allowNull : false,\n    },\n    date : {\n        type : Sequelize.STRING,\n        allowNull : true,\n    },\n    location : {\n        type : Sequelize.STRING,\n        allowNull : true\n    }\n});\n\nmodule.exports = Seminary;"
      ]
    },
    "sourceType": "module",
    "mtime": 1577803119054
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models/type.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"plugins\":[],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models/type.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models/type.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models/type.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models",
        "sourceFileName": "type.js"
      }
    },
    "ast": null,
    "code": "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst Type = sequelize.define('type', {\n  id: {\n    type: Sequelize.INTEGER,\n    autoIncrement: true,\n    allowNull: false,\n    primaryKey: true\n  },\n  name: {\n    type: Sequelize.STRING,\n    allowNull: false\n  }\n});\nmodule.exports = Type;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInR5cGUuanMiXSwibmFtZXMiOlsiU2VxdWVsaXplIiwicmVxdWlyZSIsInNlcXVlbGl6ZSIsIlR5cGUiLCJkZWZpbmUiLCJpZCIsInR5cGUiLCJJTlRFR0VSIiwiYXV0b0luY3JlbWVudCIsImFsbG93TnVsbCIsInByaW1hcnlLZXkiLCJuYW1lIiwiU1RSSU5HIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsU0FBUyxHQUFHQyxPQUFPLENBQUMsV0FBRCxDQUF6Qjs7QUFFQSxNQUFNQyxTQUFTLEdBQUdELE9BQU8sQ0FBQyxtQkFBRCxDQUF6Qjs7QUFFQSxNQUFNRSxJQUFJLEdBQUdELFNBQVMsQ0FBQ0UsTUFBVixDQUFpQixNQUFqQixFQUF5QjtBQUNsQ0MsRUFBQUEsRUFBRSxFQUFHO0FBQ0RDLElBQUFBLElBQUksRUFBR04sU0FBUyxDQUFDTyxPQURoQjtBQUVEQyxJQUFBQSxhQUFhLEVBQUcsSUFGZjtBQUdEQyxJQUFBQSxTQUFTLEVBQUcsS0FIWDtBQUlEQyxJQUFBQSxVQUFVLEVBQUc7QUFKWixHQUQ2QjtBQU9sQ0MsRUFBQUEsSUFBSSxFQUFHO0FBQ0hMLElBQUFBLElBQUksRUFBR04sU0FBUyxDQUFDWSxNQURkO0FBRUhILElBQUFBLFNBQVMsRUFBRztBQUZUO0FBUDJCLENBQXpCLENBQWI7QUFjQUksTUFBTSxDQUFDQyxPQUFQLEdBQWlCWCxJQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvQWxlc3NhbmRyb19NdXNvbGluby9EZXNrdG9wL0h5cGVybWVkaWEvRHJlYW1MYW5kRmVzdGl2YWxfL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFNlcXVlbGl6ZSA9IHJlcXVpcmUoJ3NlcXVlbGl6ZScpO1xuXG5jb25zdCBzZXF1ZWxpemUgPSByZXF1aXJlKCcuLi91dGlscy9kYXRhYmFzZScpO1xuXG5jb25zdCBUeXBlID0gc2VxdWVsaXplLmRlZmluZSgndHlwZScsIHtcbiAgICBpZCA6IHtcbiAgICAgICAgdHlwZSA6IFNlcXVlbGl6ZS5JTlRFR0VSLFxuICAgICAgICBhdXRvSW5jcmVtZW50IDogdHJ1ZSxcbiAgICAgICAgYWxsb3dOdWxsIDogZmFsc2UsXG4gICAgICAgIHByaW1hcnlLZXkgOiB0cnVlXG4gICAgfSxcbiAgICBuYW1lIDoge1xuICAgICAgICB0eXBlIDogU2VxdWVsaXplLlNUUklORyxcbiAgICAgICAgYWxsb3dOdWxsIDogZmFsc2UsXG4gICAgfSxcblxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gVHlwZTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "type.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "sequelize",
        "Type",
        "define",
        "id",
        "type",
        "INTEGER",
        "autoIncrement",
        "allowNull",
        "primaryKey",
        "name",
        "STRING",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,MAAMC,SAAS,GAAGD,OAAO,CAAC,mBAAD,CAAzB;;AAEA,MAAME,IAAI,GAAGD,SAAS,CAACE,MAAV,CAAiB,MAAjB,EAAyB;AAClCC,EAAAA,EAAE,EAAG;AACDC,IAAAA,IAAI,EAAGN,SAAS,CAACO,OADhB;AAEDC,IAAAA,aAAa,EAAG,IAFf;AAGDC,IAAAA,SAAS,EAAG,KAHX;AAIDC,IAAAA,UAAU,EAAG;AAJZ,GAD6B;AAOlCC,EAAAA,IAAI,EAAG;AACHL,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADd;AAEHH,IAAAA,SAAS,EAAG;AAFT;AAP2B,CAAzB,CAAb;AAcAI,MAAM,CAACC,OAAP,GAAiBX,IAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst Type = sequelize.define('type', {\n    id : {\n        type : Sequelize.INTEGER,\n        autoIncrement : true,\n        allowNull : false,\n        primaryKey : true\n    },\n    name : {\n        type : Sequelize.STRING,\n        allowNull : false,\n    },\n\n});\n\nmodule.exports = Type;"
      ]
    },
    "sourceType": "module",
    "mtime": 1577896630473
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models/typologyae.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"plugins\":[],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models/typologyae.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models/typologyae.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models/typologyae.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models",
        "sourceFileName": "typologyae.js"
      }
    },
    "ast": null,
    "code": "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst Typologyae = sequelize.define('typologyae', {\n  id: {\n    type: Sequelize.INTEGER,\n    autoIncrement: true,\n    allowNull: false,\n    primaryKey: true\n  }\n});\nmodule.exports = Typologyae;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInR5cG9sb2d5YWUuanMiXSwibmFtZXMiOlsiU2VxdWVsaXplIiwicmVxdWlyZSIsInNlcXVlbGl6ZSIsIlR5cG9sb2d5YWUiLCJkZWZpbmUiLCJpZCIsInR5cGUiLCJJTlRFR0VSIiwiYXV0b0luY3JlbWVudCIsImFsbG93TnVsbCIsInByaW1hcnlLZXkiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxTQUFTLEdBQUdDLE9BQU8sQ0FBQyxXQUFELENBQXpCOztBQUVBLE1BQU1DLFNBQVMsR0FBR0QsT0FBTyxDQUFDLG1CQUFELENBQXpCOztBQUVBLE1BQU1FLFVBQVUsR0FBR0QsU0FBUyxDQUFDRSxNQUFWLENBQWlCLFlBQWpCLEVBQStCO0FBQzlDQyxFQUFBQSxFQUFFLEVBQUc7QUFDREMsSUFBQUEsSUFBSSxFQUFHTixTQUFTLENBQUNPLE9BRGhCO0FBRURDLElBQUFBLGFBQWEsRUFBRyxJQUZmO0FBR0RDLElBQUFBLFNBQVMsRUFBRyxLQUhYO0FBSURDLElBQUFBLFVBQVUsRUFBRztBQUpaO0FBRHlDLENBQS9CLENBQW5CO0FBU0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlQsVUFBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL0FsZXNzYW5kcm9fTXVzb2xpbm8vRGVza3RvcC9IeXBlcm1lZGlhL0RyZWFtTGFuZEZlc3RpdmFsXy9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBTZXF1ZWxpemUgPSByZXF1aXJlKCdzZXF1ZWxpemUnKTtcblxuY29uc3Qgc2VxdWVsaXplID0gcmVxdWlyZSgnLi4vdXRpbHMvZGF0YWJhc2UnKTtcblxuY29uc3QgVHlwb2xvZ3lhZSA9IHNlcXVlbGl6ZS5kZWZpbmUoJ3R5cG9sb2d5YWUnLCB7XG4gICAgaWQgOiB7XG4gICAgICAgIHR5cGUgOiBTZXF1ZWxpemUuSU5URUdFUixcbiAgICAgICAgYXV0b0luY3JlbWVudCA6IHRydWUsXG4gICAgICAgIGFsbG93TnVsbCA6IGZhbHNlLFxuICAgICAgICBwcmltYXJ5S2V5IDogdHJ1ZVxuICAgIH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFR5cG9sb2d5YWU7Il19",
    "map": {
      "version": 3,
      "sources": [
        "typologyae.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "sequelize",
        "Typologyae",
        "define",
        "id",
        "type",
        "INTEGER",
        "autoIncrement",
        "allowNull",
        "primaryKey",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,MAAMC,SAAS,GAAGD,OAAO,CAAC,mBAAD,CAAzB;;AAEA,MAAME,UAAU,GAAGD,SAAS,CAACE,MAAV,CAAiB,YAAjB,EAA+B;AAC9CC,EAAAA,EAAE,EAAG;AACDC,IAAAA,IAAI,EAAGN,SAAS,CAACO,OADhB;AAEDC,IAAAA,aAAa,EAAG,IAFf;AAGDC,IAAAA,SAAS,EAAG,KAHX;AAIDC,IAAAA,UAAU,EAAG;AAJZ;AADyC,CAA/B,CAAnB;AASAC,MAAM,CAACC,OAAP,GAAiBT,UAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst Typologyae = sequelize.define('typologyae', {\n    id : {\n        type : Sequelize.INTEGER,\n        autoIncrement : true,\n        allowNull : false,\n        primaryKey : true\n    }\n});\n\nmodule.exports = Typologyae;"
      ]
    },
    "sourceType": "module",
    "mtime": 1577897304683
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models/typologyse.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"plugins\":[],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models/typologyse.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models/typologyse.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models/typologyse.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models",
        "sourceFileName": "typologyse.js"
      }
    },
    "ast": null,
    "code": "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst Typologyse = sequelize.define('typologyse', {\n  id: {\n    type: Sequelize.INTEGER,\n    autoIncrement: true,\n    allowNull: false,\n    primaryKey: true\n  }\n});\nmodule.exports = Typologyse;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInR5cG9sb2d5c2UuanMiXSwibmFtZXMiOlsiU2VxdWVsaXplIiwicmVxdWlyZSIsInNlcXVlbGl6ZSIsIlR5cG9sb2d5c2UiLCJkZWZpbmUiLCJpZCIsInR5cGUiLCJJTlRFR0VSIiwiYXV0b0luY3JlbWVudCIsImFsbG93TnVsbCIsInByaW1hcnlLZXkiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxTQUFTLEdBQUdDLE9BQU8sQ0FBQyxXQUFELENBQXpCOztBQUVBLE1BQU1DLFNBQVMsR0FBR0QsT0FBTyxDQUFDLG1CQUFELENBQXpCOztBQUVBLE1BQU1FLFVBQVUsR0FBR0QsU0FBUyxDQUFDRSxNQUFWLENBQWlCLFlBQWpCLEVBQStCO0FBQzlDQyxFQUFBQSxFQUFFLEVBQUc7QUFDREMsSUFBQUEsSUFBSSxFQUFHTixTQUFTLENBQUNPLE9BRGhCO0FBRURDLElBQUFBLGFBQWEsRUFBRyxJQUZmO0FBR0RDLElBQUFBLFNBQVMsRUFBRyxLQUhYO0FBSURDLElBQUFBLFVBQVUsRUFBRztBQUpaO0FBRHlDLENBQS9CLENBQW5CO0FBU0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlQsVUFBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL0FsZXNzYW5kcm9fTXVzb2xpbm8vRGVza3RvcC9IeXBlcm1lZGlhL0RyZWFtTGFuZEZlc3RpdmFsXy9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBTZXF1ZWxpemUgPSByZXF1aXJlKCdzZXF1ZWxpemUnKTtcblxuY29uc3Qgc2VxdWVsaXplID0gcmVxdWlyZSgnLi4vdXRpbHMvZGF0YWJhc2UnKTtcblxuY29uc3QgVHlwb2xvZ3lzZSA9IHNlcXVlbGl6ZS5kZWZpbmUoJ3R5cG9sb2d5c2UnLCB7XG4gICAgaWQgOiB7XG4gICAgICAgIHR5cGUgOiBTZXF1ZWxpemUuSU5URUdFUixcbiAgICAgICAgYXV0b0luY3JlbWVudCA6IHRydWUsXG4gICAgICAgIGFsbG93TnVsbCA6IGZhbHNlLFxuICAgICAgICBwcmltYXJ5S2V5IDogdHJ1ZVxuICAgIH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFR5cG9sb2d5c2U7Il19",
    "map": {
      "version": 3,
      "sources": [
        "typologyse.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "sequelize",
        "Typologyse",
        "define",
        "id",
        "type",
        "INTEGER",
        "autoIncrement",
        "allowNull",
        "primaryKey",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,MAAMC,SAAS,GAAGD,OAAO,CAAC,mBAAD,CAAzB;;AAEA,MAAME,UAAU,GAAGD,SAAS,CAACE,MAAV,CAAiB,YAAjB,EAA+B;AAC9CC,EAAAA,EAAE,EAAG;AACDC,IAAAA,IAAI,EAAGN,SAAS,CAACO,OADhB;AAEDC,IAAAA,aAAa,EAAG,IAFf;AAGDC,IAAAA,SAAS,EAAG,KAHX;AAIDC,IAAAA,UAAU,EAAG;AAJZ;AADyC,CAA/B,CAAnB;AASAC,MAAM,CAACC,OAAP,GAAiBT,UAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst Typologyse = sequelize.define('typologyse', {\n    id : {\n        type : Sequelize.INTEGER,\n        autoIncrement : true,\n        allowNull : false,\n        primaryKey : true\n    }\n});\n\nmodule.exports = Typologyse;"
      ]
    },
    "sourceType": "module",
    "mtime": 1577897316258
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models/performer.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"plugins\":[],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models/performer.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models/performer.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models/performer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models",
        "sourceFileName": "performer.js"
      }
    },
    "ast": null,
    "code": "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst Performer = sequelize.define('performer', {\n  id: {\n    type: Sequelize.INTEGER,\n    autoIncrement: true,\n    allowNull: false,\n    primaryKey: true\n  },\n  name: {\n    type: Sequelize.STRING,\n    allowNull: false\n  },\n  company_members: {\n    type: Sequelize.STRING,\n    allowNull: true\n  },\n  current_affiliation: {\n    type: Sequelize.STRING,\n    allowNull: true\n  },\n  main_achievements: {\n    type: Sequelize.STRING,\n    allowNull: true\n  },\n  image: {\n    //photo gallery\n    type: Sequelize.STRING,\n    allowNull: true\n  },\n  details: {\n    type: Sequelize.STRING,\n    allowNull: true\n  },\n  isCompany: {\n    type: Sequelize.BOOLEAN,\n    allowNull: false\n  }\n});\nmodule.exports = Performer;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBlcmZvcm1lci5qcyJdLCJuYW1lcyI6WyJTZXF1ZWxpemUiLCJyZXF1aXJlIiwic2VxdWVsaXplIiwiUGVyZm9ybWVyIiwiZGVmaW5lIiwiaWQiLCJ0eXBlIiwiSU5URUdFUiIsImF1dG9JbmNyZW1lbnQiLCJhbGxvd051bGwiLCJwcmltYXJ5S2V5IiwibmFtZSIsIlNUUklORyIsImNvbXBhbnlfbWVtYmVycyIsImN1cnJlbnRfYWZmaWxpYXRpb24iLCJtYWluX2FjaGlldmVtZW50cyIsImltYWdlIiwiZGV0YWlscyIsImlzQ29tcGFueSIsIkJPT0xFQU4iLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxTQUFTLEdBQUdDLE9BQU8sQ0FBQyxXQUFELENBQXpCOztBQUVBLE1BQU1DLFNBQVMsR0FBR0QsT0FBTyxDQUFDLG1CQUFELENBQXpCOztBQUVBLE1BQU1FLFNBQVMsR0FBR0QsU0FBUyxDQUFDRSxNQUFWLENBQWlCLFdBQWpCLEVBQThCO0FBQzVDQyxFQUFBQSxFQUFFLEVBQUc7QUFDREMsSUFBQUEsSUFBSSxFQUFHTixTQUFTLENBQUNPLE9BRGhCO0FBRURDLElBQUFBLGFBQWEsRUFBRyxJQUZmO0FBR0RDLElBQUFBLFNBQVMsRUFBRyxLQUhYO0FBSURDLElBQUFBLFVBQVUsRUFBRztBQUpaLEdBRHVDO0FBTzVDQyxFQUFBQSxJQUFJLEVBQUc7QUFDSEwsSUFBQUEsSUFBSSxFQUFHTixTQUFTLENBQUNZLE1BRGQ7QUFFSEgsSUFBQUEsU0FBUyxFQUFHO0FBRlQsR0FQcUM7QUFXNUNJLEVBQUFBLGVBQWUsRUFBRztBQUNkUCxJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ1ksTUFESDtBQUVkSCxJQUFBQSxTQUFTLEVBQUc7QUFGRSxHQVgwQjtBQWU1Q0ssRUFBQUEsbUJBQW1CLEVBQUc7QUFDbEJSLElBQUFBLElBQUksRUFBR04sU0FBUyxDQUFDWSxNQURDO0FBRWxCSCxJQUFBQSxTQUFTLEVBQUc7QUFGTSxHQWZzQjtBQW1CNUNNLEVBQUFBLGlCQUFpQixFQUFHO0FBQ2hCVCxJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ1ksTUFERDtBQUVoQkgsSUFBQUEsU0FBUyxFQUFHO0FBRkksR0FuQndCO0FBdUI1Q08sRUFBQUEsS0FBSyxFQUFHO0FBQUU7QUFDTlYsSUFBQUEsSUFBSSxFQUFHTixTQUFTLENBQUNZLE1BRGI7QUFFSkgsSUFBQUEsU0FBUyxFQUFHO0FBRlIsR0F2Qm9DO0FBMkI1Q1EsRUFBQUEsT0FBTyxFQUFHO0FBQ05YLElBQUFBLElBQUksRUFBR04sU0FBUyxDQUFDWSxNQURYO0FBRU5ILElBQUFBLFNBQVMsRUFBRztBQUZOLEdBM0JrQztBQStCNUNTLEVBQUFBLFNBQVMsRUFBRztBQUNSWixJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ21CLE9BRFQ7QUFFUlYsSUFBQUEsU0FBUyxFQUFHO0FBRko7QUEvQmdDLENBQTlCLENBQWxCO0FBcUNBVyxNQUFNLENBQUNDLE9BQVAsR0FBaUJsQixTQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvQWxlc3NhbmRyb19NdXNvbGluby9EZXNrdG9wL0h5cGVybWVkaWEvRHJlYW1MYW5kRmVzdGl2YWxfL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFNlcXVlbGl6ZSA9IHJlcXVpcmUoJ3NlcXVlbGl6ZScpO1xuXG5jb25zdCBzZXF1ZWxpemUgPSByZXF1aXJlKCcuLi91dGlscy9kYXRhYmFzZScpO1xuXG5jb25zdCBQZXJmb3JtZXIgPSBzZXF1ZWxpemUuZGVmaW5lKCdwZXJmb3JtZXInLCB7XG4gICAgaWQgOiB7XG4gICAgICAgIHR5cGUgOiBTZXF1ZWxpemUuSU5URUdFUixcbiAgICAgICAgYXV0b0luY3JlbWVudCA6IHRydWUsXG4gICAgICAgIGFsbG93TnVsbCA6IGZhbHNlLFxuICAgICAgICBwcmltYXJ5S2V5IDogdHJ1ZVxuICAgIH0sXG4gICAgbmFtZSA6IHtcbiAgICAgICAgdHlwZSA6IFNlcXVlbGl6ZS5TVFJJTkcsXG4gICAgICAgIGFsbG93TnVsbCA6IGZhbHNlLFxuICAgIH0sXG4gICAgY29tcGFueV9tZW1iZXJzIDoge1xuICAgICAgICB0eXBlIDogU2VxdWVsaXplLlNUUklORyxcbiAgICAgICAgYWxsb3dOdWxsIDogdHJ1ZSxcbiAgICB9LFxuICAgIGN1cnJlbnRfYWZmaWxpYXRpb24gOiB7XG4gICAgICAgIHR5cGUgOiBTZXF1ZWxpemUuU1RSSU5HLFxuICAgICAgICBhbGxvd051bGwgOiB0cnVlLFxuICAgIH0sXG4gICAgbWFpbl9hY2hpZXZlbWVudHMgOiB7XG4gICAgICAgIHR5cGUgOiBTZXF1ZWxpemUuU1RSSU5HLFxuICAgICAgICBhbGxvd051bGwgOiB0cnVlLFxuICAgIH0sXG4gICAgaW1hZ2UgOiB7IC8vcGhvdG8gZ2FsbGVyeVxuICAgICAgICB0eXBlIDogU2VxdWVsaXplLlNUUklORyxcbiAgICAgICAgYWxsb3dOdWxsIDogdHJ1ZVxuICAgIH0sXG4gICAgZGV0YWlscyA6IHtcbiAgICAgICAgdHlwZSA6IFNlcXVlbGl6ZS5TVFJJTkcsXG4gICAgICAgIGFsbG93TnVsbCA6IHRydWUsXG4gICAgfSxcbiAgICBpc0NvbXBhbnkgOiB7XG4gICAgICAgIHR5cGUgOiBTZXF1ZWxpemUuQk9PTEVBTixcbiAgICAgICAgYWxsb3dOdWxsIDogZmFsc2UsXG4gICAgfVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gUGVyZm9ybWVyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "performer.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "sequelize",
        "Performer",
        "define",
        "id",
        "type",
        "INTEGER",
        "autoIncrement",
        "allowNull",
        "primaryKey",
        "name",
        "STRING",
        "company_members",
        "current_affiliation",
        "main_achievements",
        "image",
        "details",
        "isCompany",
        "BOOLEAN",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,MAAMC,SAAS,GAAGD,OAAO,CAAC,mBAAD,CAAzB;;AAEA,MAAME,SAAS,GAAGD,SAAS,CAACE,MAAV,CAAiB,WAAjB,EAA8B;AAC5CC,EAAAA,EAAE,EAAG;AACDC,IAAAA,IAAI,EAAGN,SAAS,CAACO,OADhB;AAEDC,IAAAA,aAAa,EAAG,IAFf;AAGDC,IAAAA,SAAS,EAAG,KAHX;AAIDC,IAAAA,UAAU,EAAG;AAJZ,GADuC;AAO5CC,EAAAA,IAAI,EAAG;AACHL,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADd;AAEHH,IAAAA,SAAS,EAAG;AAFT,GAPqC;AAW5CI,EAAAA,eAAe,EAAG;AACdP,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADH;AAEdH,IAAAA,SAAS,EAAG;AAFE,GAX0B;AAe5CK,EAAAA,mBAAmB,EAAG;AAClBR,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADC;AAElBH,IAAAA,SAAS,EAAG;AAFM,GAfsB;AAmB5CM,EAAAA,iBAAiB,EAAG;AAChBT,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADD;AAEhBH,IAAAA,SAAS,EAAG;AAFI,GAnBwB;AAuB5CO,EAAAA,KAAK,EAAG;AAAE;AACNV,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADb;AAEJH,IAAAA,SAAS,EAAG;AAFR,GAvBoC;AA2B5CQ,EAAAA,OAAO,EAAG;AACNX,IAAAA,IAAI,EAAGN,SAAS,CAACY,MADX;AAENH,IAAAA,SAAS,EAAG;AAFN,GA3BkC;AA+B5CS,EAAAA,SAAS,EAAG;AACRZ,IAAAA,IAAI,EAAGN,SAAS,CAACmB,OADT;AAERV,IAAAA,SAAS,EAAG;AAFJ;AA/BgC,CAA9B,CAAlB;AAqCAW,MAAM,CAACC,OAAP,GAAiBlB,SAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst Performer = sequelize.define('performer', {\n    id : {\n        type : Sequelize.INTEGER,\n        autoIncrement : true,\n        allowNull : false,\n        primaryKey : true\n    },\n    name : {\n        type : Sequelize.STRING,\n        allowNull : false,\n    },\n    company_members : {\n        type : Sequelize.STRING,\n        allowNull : true,\n    },\n    current_affiliation : {\n        type : Sequelize.STRING,\n        allowNull : true,\n    },\n    main_achievements : {\n        type : Sequelize.STRING,\n        allowNull : true,\n    },\n    image : { //photo gallery\n        type : Sequelize.STRING,\n        allowNull : true\n    },\n    details : {\n        type : Sequelize.STRING,\n        allowNull : true,\n    },\n    isCompany : {\n        type : Sequelize.BOOLEAN,\n        allowNull : false,\n    }\n});\n\nmodule.exports = Performer;"
      ]
    },
    "sourceType": "module",
    "mtime": 1577528863974
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models/performance.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"plugins\":[],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models/performance.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models/performance.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models/performance.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models",
        "sourceFileName": "performance.js"
      }
    },
    "ast": null,
    "code": "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst Performance = sequelize.define('performance', {\n  id: {\n    type: Sequelize.INTEGER,\n    autoIncrement: true,\n    allowNull: false,\n    primaryKey: true\n  }\n});\nmodule.exports = Performance;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBlcmZvcm1hbmNlLmpzIl0sIm5hbWVzIjpbIlNlcXVlbGl6ZSIsInJlcXVpcmUiLCJzZXF1ZWxpemUiLCJQZXJmb3JtYW5jZSIsImRlZmluZSIsImlkIiwidHlwZSIsIklOVEVHRVIiLCJhdXRvSW5jcmVtZW50IiwiYWxsb3dOdWxsIiwicHJpbWFyeUtleSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFNBQVMsR0FBR0MsT0FBTyxDQUFDLFdBQUQsQ0FBekI7O0FBRUEsTUFBTUMsU0FBUyxHQUFHRCxPQUFPLENBQUMsbUJBQUQsQ0FBekI7O0FBRUEsTUFBTUUsV0FBVyxHQUFHRCxTQUFTLENBQUNFLE1BQVYsQ0FBaUIsYUFBakIsRUFBZ0M7QUFDaERDLEVBQUFBLEVBQUUsRUFBRztBQUNEQyxJQUFBQSxJQUFJLEVBQUdOLFNBQVMsQ0FBQ08sT0FEaEI7QUFFREMsSUFBQUEsYUFBYSxFQUFHLElBRmY7QUFHREMsSUFBQUEsU0FBUyxFQUFHLEtBSFg7QUFJREMsSUFBQUEsVUFBVSxFQUFHO0FBSlo7QUFEMkMsQ0FBaEMsQ0FBcEI7QUFTQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCVCxXQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvQWxlc3NhbmRyb19NdXNvbGluby9EZXNrdG9wL0h5cGVybWVkaWEvRHJlYW1MYW5kRmVzdGl2YWxfL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFNlcXVlbGl6ZSA9IHJlcXVpcmUoJ3NlcXVlbGl6ZScpO1xuXG5jb25zdCBzZXF1ZWxpemUgPSByZXF1aXJlKCcuLi91dGlscy9kYXRhYmFzZScpO1xuXG5jb25zdCBQZXJmb3JtYW5jZSA9IHNlcXVlbGl6ZS5kZWZpbmUoJ3BlcmZvcm1hbmNlJywge1xuICAgIGlkIDoge1xuICAgICAgICB0eXBlIDogU2VxdWVsaXplLklOVEVHRVIsXG4gICAgICAgIGF1dG9JbmNyZW1lbnQgOiB0cnVlLFxuICAgICAgICBhbGxvd051bGwgOiBmYWxzZSxcbiAgICAgICAgcHJpbWFyeUtleSA6IHRydWVcbiAgICB9XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBQZXJmb3JtYW5jZTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "performance.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "sequelize",
        "Performance",
        "define",
        "id",
        "type",
        "INTEGER",
        "autoIncrement",
        "allowNull",
        "primaryKey",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,MAAMC,SAAS,GAAGD,OAAO,CAAC,mBAAD,CAAzB;;AAEA,MAAME,WAAW,GAAGD,SAAS,CAACE,MAAV,CAAiB,aAAjB,EAAgC;AAChDC,EAAAA,EAAE,EAAG;AACDC,IAAAA,IAAI,EAAGN,SAAS,CAACO,OADhB;AAEDC,IAAAA,aAAa,EAAG,IAFf;AAGDC,IAAAA,SAAS,EAAG,KAHX;AAIDC,IAAAA,UAAU,EAAG;AAJZ;AAD2C,CAAhC,CAApB;AASAC,MAAM,CAACC,OAAP,GAAiBT,WAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst Performance = sequelize.define('performance', {\n    id : {\n        type : Sequelize.INTEGER,\n        autoIncrement : true,\n        allowNull : false,\n        primaryKey : true\n    }\n});\n\nmodule.exports = Performance;"
      ]
    },
    "sourceType": "module",
    "mtime": 1576866381903
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes/performer.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"plugins\":[],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes/performer.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes/performer.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes/performer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes",
        "sourceFileName": "performer.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst {\n  body,\n  query\n} = require('express-validator/check');\n\nconst router = express.Router();\n\nconst isAuth = require('../middleware/is-auth');\n\nconst performerController = require('../controllers/performer');\n\nconst path = require('path');\n\nconst multer = require('multer');\n\nconst uuidv4 = require('uuid/v4');\n\nconst storage = multer.diskStorage({\n  destination: (req, file, callback) => {\n    callback(null, 'public/images');\n  },\n  filename: (req, file, callback) => {\n    //callback(null, Date.now() + '-' + file.originalname);\n    callback(null, uuidv4() + path.extname(file.originalname));\n  }\n});\n\nconst fileFilter = (req, file, callback) => {\n  if (file.mimetype == 'image/png' || file.mimetype == 'image/jpg' || file.mimetype == 'image/jpeg') {\n    callback(null, true);\n  } else {\n    req.fileValidationError = \"Estensione non consentita solo: 'image/jpg' | 'image/png' | 'image/jpeg'\";\n    callback(null, false);\n  }\n};\n\nvar upload = multer({\n  storage: storage,\n  fileFilter: fileFilter\n});\nvar cpUpload = upload.single('image');\nrouter.get('/performer', performerController.getPerformers);\nrouter.get('/performer/search', performerController.searchPerformer);\nrouter.get('/performer/:id', performerController.getPerformer);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBlcmZvcm1lci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImJvZHkiLCJxdWVyeSIsInJvdXRlciIsIlJvdXRlciIsImlzQXV0aCIsInBlcmZvcm1lckNvbnRyb2xsZXIiLCJwYXRoIiwibXVsdGVyIiwidXVpZHY0Iiwic3RvcmFnZSIsImRpc2tTdG9yYWdlIiwiZGVzdGluYXRpb24iLCJyZXEiLCJmaWxlIiwiY2FsbGJhY2siLCJmaWxlbmFtZSIsImV4dG5hbWUiLCJvcmlnaW5hbG5hbWUiLCJmaWxlRmlsdGVyIiwibWltZXR5cGUiLCJmaWxlVmFsaWRhdGlvbkVycm9yIiwidXBsb2FkIiwiY3BVcGxvYWQiLCJzaW5nbGUiLCJnZXQiLCJnZXRQZXJmb3JtZXJzIiwic2VhcmNoUGVyZm9ybWVyIiwiZ2V0UGVyZm9ybWVyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxNQUFNO0FBQUVDLEVBQUFBLElBQUY7QUFBUUMsRUFBQUE7QUFBUixJQUFrQkYsT0FBTyxDQUFDLHlCQUFELENBQS9COztBQUNBLE1BQU1HLE1BQU0sR0FBR0osT0FBTyxDQUFDSyxNQUFSLEVBQWY7O0FBRUEsTUFBTUMsTUFBTSxHQUFHTCxPQUFPLENBQUMsdUJBQUQsQ0FBdEI7O0FBRUEsTUFBTU0sbUJBQW1CLEdBQUdOLE9BQU8sQ0FBQywwQkFBRCxDQUFuQzs7QUFFQSxNQUFNTyxJQUFJLEdBQUdQLE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUNBLE1BQU1RLE1BQU0sR0FBR1IsT0FBTyxDQUFDLFFBQUQsQ0FBdEI7O0FBQ0EsTUFBTVMsTUFBTSxHQUFHVCxPQUFPLENBQUMsU0FBRCxDQUF0Qjs7QUFFQSxNQUFNVSxPQUFPLEdBQUdGLE1BQU0sQ0FBQ0csV0FBUCxDQUFtQjtBQUMvQkMsRUFBQUEsV0FBVyxFQUFHLENBQUNDLEdBQUQsRUFBTUMsSUFBTixFQUFZQyxRQUFaLEtBQXlCO0FBQ25DQSxJQUFBQSxRQUFRLENBQUMsSUFBRCxFQUFPLGVBQVAsQ0FBUjtBQUNILEdBSDhCO0FBSS9CQyxFQUFBQSxRQUFRLEVBQUcsQ0FBQ0gsR0FBRCxFQUFNQyxJQUFOLEVBQVlDLFFBQVosS0FBeUI7QUFDaEM7QUFDQUEsSUFBQUEsUUFBUSxDQUFDLElBQUQsRUFBT04sTUFBTSxLQUFLRixJQUFJLENBQUNVLE9BQUwsQ0FBYUgsSUFBSSxDQUFDSSxZQUFsQixDQUFsQixDQUFSO0FBQ0g7QUFQOEIsQ0FBbkIsQ0FBaEI7O0FBVUEsTUFBTUMsVUFBVSxHQUFJLENBQUNOLEdBQUQsRUFBTUMsSUFBTixFQUFZQyxRQUFaLEtBQXlCO0FBQ3pDLE1BQUdELElBQUksQ0FBQ00sUUFBTCxJQUFpQixXQUFqQixJQUFnQ04sSUFBSSxDQUFDTSxRQUFMLElBQWlCLFdBQWpELElBQWdFTixJQUFJLENBQUNNLFFBQUwsSUFBaUIsWUFBcEYsRUFBa0c7QUFDOUZMLElBQUFBLFFBQVEsQ0FBQyxJQUFELEVBQU8sSUFBUCxDQUFSO0FBQ0gsR0FGRCxNQUVPO0FBQ0hGLElBQUFBLEdBQUcsQ0FBQ1EsbUJBQUosR0FBMEIsMEVBQTFCO0FBQ0FOLElBQUFBLFFBQVEsQ0FBQyxJQUFELEVBQU8sS0FBUCxDQUFSO0FBQ0g7QUFDSixDQVBEOztBQVNBLElBQUlPLE1BQU0sR0FBR2QsTUFBTSxDQUFDO0FBQUVFLEVBQUFBLE9BQU8sRUFBR0EsT0FBWjtBQUFxQlMsRUFBQUEsVUFBVSxFQUFHQTtBQUFsQyxDQUFELENBQW5CO0FBRUEsSUFBSUksUUFBUSxHQUFHRCxNQUFNLENBQUNFLE1BQVAsQ0FBYyxPQUFkLENBQWY7QUFFQXJCLE1BQU0sQ0FBQ3NCLEdBQVAsQ0FBVyxZQUFYLEVBQXlCbkIsbUJBQW1CLENBQUNvQixhQUE3QztBQUNBdkIsTUFBTSxDQUFDc0IsR0FBUCxDQUFXLG1CQUFYLEVBQWdDbkIsbUJBQW1CLENBQUNxQixlQUFwRDtBQUNBeEIsTUFBTSxDQUFDc0IsR0FBUCxDQUFXLGdCQUFYLEVBQTZCbkIsbUJBQW1CLENBQUNzQixZQUFqRDtBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUIzQixNQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvQWxlc3NhbmRyb19NdXNvbGluby9EZXNrdG9wL0h5cGVybWVkaWEvRHJlYW1MYW5kRmVzdGl2YWxfL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG5jb25zdCB7IGJvZHksIHF1ZXJ5IH0gPSByZXF1aXJlKCdleHByZXNzLXZhbGlkYXRvci9jaGVjaycpO1xuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcblxuY29uc3QgaXNBdXRoID0gcmVxdWlyZSgnLi4vbWlkZGxld2FyZS9pcy1hdXRoJyk7XG5cbmNvbnN0IHBlcmZvcm1lckNvbnRyb2xsZXIgPSByZXF1aXJlKCcuLi9jb250cm9sbGVycy9wZXJmb3JtZXInKTtcblxuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbmNvbnN0IG11bHRlciA9IHJlcXVpcmUoJ211bHRlcicpO1xuY29uc3QgdXVpZHY0ID0gcmVxdWlyZSgndXVpZC92NCcpO1xuXG5jb25zdCBzdG9yYWdlID0gbXVsdGVyLmRpc2tTdG9yYWdlKHtcbiAgICBkZXN0aW5hdGlvbiA6IChyZXEsIGZpbGUsIGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIGNhbGxiYWNrKG51bGwsICdwdWJsaWMvaW1hZ2VzJyk7XG4gICAgfSxcbiAgICBmaWxlbmFtZSA6IChyZXEsIGZpbGUsIGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIC8vY2FsbGJhY2sobnVsbCwgRGF0ZS5ub3coKSArICctJyArIGZpbGUub3JpZ2luYWxuYW1lKTtcbiAgICAgICAgY2FsbGJhY2sobnVsbCwgdXVpZHY0KCkgKyBwYXRoLmV4dG5hbWUoZmlsZS5vcmlnaW5hbG5hbWUpKTtcbiAgICB9LFxufSk7XG5cbmNvbnN0IGZpbGVGaWx0ZXIgPSAoKHJlcSwgZmlsZSwgY2FsbGJhY2spID0+IHtcbiAgICBpZihmaWxlLm1pbWV0eXBlID09ICdpbWFnZS9wbmcnIHx8IGZpbGUubWltZXR5cGUgPT0gJ2ltYWdlL2pwZycgfHwgZmlsZS5taW1ldHlwZSA9PSAnaW1hZ2UvanBlZycpIHtcbiAgICAgICAgY2FsbGJhY2sobnVsbCwgdHJ1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmVxLmZpbGVWYWxpZGF0aW9uRXJyb3IgPSBcIkVzdGVuc2lvbmUgbm9uIGNvbnNlbnRpdGEgc29sbzogJ2ltYWdlL2pwZycgfCAnaW1hZ2UvcG5nJyB8ICdpbWFnZS9qcGVnJ1wiO1xuICAgICAgICBjYWxsYmFjayhudWxsLCBmYWxzZSk7XG4gICAgfVxufSk7XG5cbnZhciB1cGxvYWQgPSBtdWx0ZXIoeyBzdG9yYWdlIDogc3RvcmFnZSwgZmlsZUZpbHRlciA6IGZpbGVGaWx0ZXJ9KTtcblxudmFyIGNwVXBsb2FkID0gdXBsb2FkLnNpbmdsZSgnaW1hZ2UnKTtcblxucm91dGVyLmdldCgnL3BlcmZvcm1lcicsIHBlcmZvcm1lckNvbnRyb2xsZXIuZ2V0UGVyZm9ybWVycyk7XG5yb3V0ZXIuZ2V0KCcvcGVyZm9ybWVyL3NlYXJjaCcsIHBlcmZvcm1lckNvbnRyb2xsZXIuc2VhcmNoUGVyZm9ybWVyKTtcbnJvdXRlci5nZXQoJy9wZXJmb3JtZXIvOmlkJywgcGVyZm9ybWVyQ29udHJvbGxlci5nZXRQZXJmb3JtZXIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "performer.js"
      ],
      "names": [
        "express",
        "require",
        "body",
        "query",
        "router",
        "Router",
        "isAuth",
        "performerController",
        "path",
        "multer",
        "uuidv4",
        "storage",
        "diskStorage",
        "destination",
        "req",
        "file",
        "callback",
        "filename",
        "extname",
        "originalname",
        "fileFilter",
        "mimetype",
        "fileValidationError",
        "upload",
        "cpUpload",
        "single",
        "get",
        "getPerformers",
        "searchPerformer",
        "getPerformer",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAM;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,IAAkBF,OAAO,CAAC,yBAAD,CAA/B;;AACA,MAAMG,MAAM,GAAGJ,OAAO,CAACK,MAAR,EAAf;;AAEA,MAAMC,MAAM,GAAGL,OAAO,CAAC,uBAAD,CAAtB;;AAEA,MAAMM,mBAAmB,GAAGN,OAAO,CAAC,0BAAD,CAAnC;;AAEA,MAAMO,IAAI,GAAGP,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMQ,MAAM,GAAGR,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMS,MAAM,GAAGT,OAAO,CAAC,SAAD,CAAtB;;AAEA,MAAMU,OAAO,GAAGF,MAAM,CAACG,WAAP,CAAmB;AAC/BC,EAAAA,WAAW,EAAG,CAACC,GAAD,EAAMC,IAAN,EAAYC,QAAZ,KAAyB;AACnCA,IAAAA,QAAQ,CAAC,IAAD,EAAO,eAAP,CAAR;AACH,GAH8B;AAI/BC,EAAAA,QAAQ,EAAG,CAACH,GAAD,EAAMC,IAAN,EAAYC,QAAZ,KAAyB;AAChC;AACAA,IAAAA,QAAQ,CAAC,IAAD,EAAON,MAAM,KAAKF,IAAI,CAACU,OAAL,CAAaH,IAAI,CAACI,YAAlB,CAAlB,CAAR;AACH;AAP8B,CAAnB,CAAhB;;AAUA,MAAMC,UAAU,GAAI,CAACN,GAAD,EAAMC,IAAN,EAAYC,QAAZ,KAAyB;AACzC,MAAGD,IAAI,CAACM,QAAL,IAAiB,WAAjB,IAAgCN,IAAI,CAACM,QAAL,IAAiB,WAAjD,IAAgEN,IAAI,CAACM,QAAL,IAAiB,YAApF,EAAkG;AAC9FL,IAAAA,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAR;AACH,GAFD,MAEO;AACHF,IAAAA,GAAG,CAACQ,mBAAJ,GAA0B,0EAA1B;AACAN,IAAAA,QAAQ,CAAC,IAAD,EAAO,KAAP,CAAR;AACH;AACJ,CAPD;;AASA,IAAIO,MAAM,GAAGd,MAAM,CAAC;AAAEE,EAAAA,OAAO,EAAGA,OAAZ;AAAqBS,EAAAA,UAAU,EAAGA;AAAlC,CAAD,CAAnB;AAEA,IAAII,QAAQ,GAAGD,MAAM,CAACE,MAAP,CAAc,OAAd,CAAf;AAEArB,MAAM,CAACsB,GAAP,CAAW,YAAX,EAAyBnB,mBAAmB,CAACoB,aAA7C;AACAvB,MAAM,CAACsB,GAAP,CAAW,mBAAX,EAAgCnB,mBAAmB,CAACqB,eAApD;AACAxB,MAAM,CAACsB,GAAP,CAAW,gBAAX,EAA6BnB,mBAAmB,CAACsB,YAAjD;AAEAC,MAAM,CAACC,OAAP,GAAiB3B,MAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes",
      "sourcesContent": [
        "const express = require('express');\nconst { body, query } = require('express-validator/check');\nconst router = express.Router();\n\nconst isAuth = require('../middleware/is-auth');\n\nconst performerController = require('../controllers/performer');\n\nconst path = require('path');\nconst multer = require('multer');\nconst uuidv4 = require('uuid/v4');\n\nconst storage = multer.diskStorage({\n    destination : (req, file, callback) => {\n        callback(null, 'public/images');\n    },\n    filename : (req, file, callback) => {\n        //callback(null, Date.now() + '-' + file.originalname);\n        callback(null, uuidv4() + path.extname(file.originalname));\n    },\n});\n\nconst fileFilter = ((req, file, callback) => {\n    if(file.mimetype == 'image/png' || file.mimetype == 'image/jpg' || file.mimetype == 'image/jpeg') {\n        callback(null, true);\n    } else {\n        req.fileValidationError = \"Estensione non consentita solo: 'image/jpg' | 'image/png' | 'image/jpeg'\";\n        callback(null, false);\n    }\n});\n\nvar upload = multer({ storage : storage, fileFilter : fileFilter});\n\nvar cpUpload = upload.single('image');\n\nrouter.get('/performer', performerController.getPerformers);\nrouter.get('/performer/search', performerController.searchPerformer);\nrouter.get('/performer/:id', performerController.getPerformer);\n\nmodule.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1577442367269
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers/performer.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"plugins\":[],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers/performer.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers/performer.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers/performer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers",
        "sourceFileName": "performer.js"
      }
    },
    "ast": null,
    "code": "const {\n  validationResult\n} = require('express-validator/check');\n\nconst Sequelize = require('sequelize');\n\nconst Op = Sequelize.Op;\n\nconst path = require('path');\n\nconst fs = require('fs');\n\nconst Performer = require('../models/performer');\n\nconst Artisticevent = require('../models/artisticevent');\n\nconst Performance = require('../models/performance');\n\nconst User = require('../models/user');\n\nexports.getPerformers = (req, res, next) => {\n  Performer.findAll().then(performers => {\n    var promises = [];\n    performers.forEach(performer => {\n      const performerWithArtisticEvents = performer.getArtisticevents().then(artisticevents => {\n        performer.dataValues.artisticevents = artisticevents;\n      }).then(() => {\n        return performer;\n      });\n      promises.push(performerWithArtisticEvents);\n    });\n    return Promise.all(promises);\n  }).then(performers => {\n    res.json({\n      performers: performers\n    });\n  }).catch(err => console.log(err));\n};\n\nexports.getPerformer = (req, res, next) => {\n  const performerId = req.params.id;\n  Performer.findByPk(performerId).then(performer => {\n    if (!performer) {\n      res.status(404).json({\n        messages: 'Performer Not Found'\n      });\n    }\n\n    var promises = [];\n    const performerWithArtisticEvents = performer.getArtisticevents().then(artisticevents => {\n      performer.dataValues.artisticevents = artisticevents;\n    }).then(() => {\n      return performer;\n    });\n    promises.push(performerWithArtisticEvents);\n    return Promise.all(promises);\n  }).then(performer => {\n    res.json({\n      performer: performer\n    });\n  }).catch(err => console.log(err));\n};\n\nexports.searchPerformer = (req, res, next) => {\n  const name = '%' + req.query.name + '%';\n  Performer.findAll({\n    where: {\n      name: {\n        [Op.like]: name\n      }\n    }\n  }).then(performers => {\n    var promises = [];\n    performers.forEach(performer => {\n      const performerWithArtisticEvents = performer.getArtisticevents().then(artisticevents => {\n        performer.dataValues.artisticevents = artisticevents;\n      }).then(() => {\n        return performer;\n      });\n      promises.push(performerWithArtisticEvents);\n    });\n    return Promise.all(promises);\n  }).then(performers => {\n    res.json({\n      performers: performers\n    });\n  }).catch(err => console.log(err));\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "performer.js"
      ],
      "names": [
        "validationResult",
        "require",
        "Sequelize",
        "Op",
        "path",
        "fs",
        "Performer",
        "Artisticevent",
        "Performance",
        "User",
        "exports",
        "getPerformers",
        "req",
        "res",
        "next",
        "findAll",
        "then",
        "performers",
        "promises",
        "forEach",
        "performer",
        "performerWithArtisticEvents",
        "getArtisticevents",
        "artisticevents",
        "dataValues",
        "push",
        "Promise",
        "all",
        "json",
        "catch",
        "err",
        "console",
        "log",
        "getPerformer",
        "performerId",
        "params",
        "id",
        "findByPk",
        "status",
        "messages",
        "searchPerformer",
        "name",
        "query",
        "where",
        "like"
      ],
      "mappings": "AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAuBC,OAAO,CAAC,yBAAD,CAApC;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,WAAD,CAAzB;;AACA,MAAME,EAAE,GAAGD,SAAS,CAACC,EAArB;;AACA,MAAMC,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMI,EAAE,GAAGJ,OAAO,CAAC,IAAD,CAAlB;;AAEA,MAAMK,SAAS,GAAGL,OAAO,CAAC,qBAAD,CAAzB;;AACA,MAAMM,aAAa,GAAGN,OAAO,CAAC,yBAAD,CAA7B;;AACA,MAAMO,WAAW,GAAGP,OAAO,CAAC,uBAAD,CAA3B;;AACA,MAAMQ,IAAI,GAAGR,OAAO,CAAC,gBAAD,CAApB;;AAEAS,OAAO,CAACC,aAAR,GAAwB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACxCR,EAAAA,SAAS,CAACS,OAAV,GACCC,IADD,CACMC,UAAU,IAAI;AAChB,QAAIC,QAAQ,GAAG,EAAf;AACAD,IAAAA,UAAU,CAACE,OAAX,CAAmBC,SAAS,IAAI;AAChC,YAAMC,2BAA2B,GAAGD,SAAS,CAACE,iBAAV,GAC5BN,IAD4B,CACvBO,cAAc,IAAI;AACnBH,QAAAA,SAAS,CAACI,UAAV,CAAqBD,cAArB,GAAsCA,cAAtC;AACH,OAH2B,EAI5BP,IAJ4B,CAIvB,MAAM;AACX,eAAOI,SAAP;AACA,OAN4B,CAApC;AAOAF,MAAAA,QAAQ,CAACO,IAAT,CAAcJ,2BAAd;AACC,KATD;AAUA,WAAOK,OAAO,CAACC,GAAR,CAAYT,QAAZ,CAAP;AACH,GAdD,EAcGF,IAdH,CAcSC,UAAD,IAAgB;AACpBJ,IAAAA,GAAG,CAACe,IAAJ,CAAS;AAACX,MAAAA,UAAU,EAAGA;AAAd,KAAT;AACH,GAhBD,EAgBGY,KAhBH,CAiBIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAjBX;AAmBH,CApBD;;AAsBApB,OAAO,CAACuB,YAAR,GAAuB,CAACrB,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACvC,QAAMoB,WAAW,GAAGtB,GAAG,CAACuB,MAAJ,CAAWC,EAA/B;AACA9B,EAAAA,SAAS,CAAC+B,QAAV,CAAmBH,WAAnB,EACClB,IADD,CACMI,SAAS,IAAI;AACf,QAAG,CAACA,SAAJ,EAAe;AACXP,MAAAA,GAAG,CAACyB,MAAJ,CAAW,GAAX,EAAgBV,IAAhB,CAAqB;AACjBW,QAAAA,QAAQ,EAAG;AADM,OAArB;AAGH;;AACD,QAAIrB,QAAQ,GAAG,EAAf;AACA,UAAMG,2BAA2B,GAAGD,SAAS,CAACE,iBAAV,GACnCN,IADmC,CAC9BO,cAAc,IAAI;AACpBH,MAAAA,SAAS,CAACI,UAAV,CAAqBD,cAArB,GAAsCA,cAAtC;AACF,KAHkC,EAInCP,IAJmC,CAI9B,MAAM;AACP,aAAOI,SAAP;AACJ,KANmC,CAApC;AAOAF,IAAAA,QAAQ,CAACO,IAAT,CAAcJ,2BAAd;AACA,WAAOK,OAAO,CAACC,GAAR,CAAYT,QAAZ,CAAP;AACC,GAjBL,EAiBOF,IAjBP,CAiBaI,SAAD,IAAe;AACnBP,IAAAA,GAAG,CAACe,IAAJ,CAAS;AAACR,MAAAA,SAAS,EAAGA;AAAb,KAAT;AACH,GAnBL,EAmBOS,KAnBP,CAoBQC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CApBf;AAsBH,CAxBD;;AA0BApB,OAAO,CAAC8B,eAAR,GAA0B,CAAC5B,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAC1C,QAAM2B,IAAI,GAAG,MAAM7B,GAAG,CAAC8B,KAAJ,CAAUD,IAAhB,GAAuB,GAApC;AACAnC,EAAAA,SAAS,CAACS,OAAV,CAAkB;AAAC4B,IAAAA,KAAK,EAAG;AAACF,MAAAA,IAAI,EAAG;AAAC,SAACtC,EAAE,CAACyC,IAAJ,GAAYH;AAAb;AAAR;AAAT,GAAlB,EACCzB,IADD,CACMC,UAAU,IAAI;AAChB,QAAIC,QAAQ,GAAG,EAAf;AACAD,IAAAA,UAAU,CAACE,OAAX,CAAmBC,SAAS,IAAI;AAChC,YAAMC,2BAA2B,GAAGD,SAAS,CAACE,iBAAV,GAC5BN,IAD4B,CACvBO,cAAc,IAAI;AACvBH,QAAAA,SAAS,CAACI,UAAV,CAAqBD,cAArB,GAAsCA,cAAtC;AACC,OAH2B,EAI5BP,IAJ4B,CAIvB,MAAM;AACX,eAAOI,SAAP;AACA,OAN4B,CAApC;AAOAF,MAAAA,QAAQ,CAACO,IAAT,CAAcJ,2BAAd;AACC,KATD;AAUA,WAAOK,OAAO,CAACC,GAAR,CAAYT,QAAZ,CAAP;AACH,GAdD,EAcGF,IAdH,CAcSC,UAAD,IAAgB;AAChBJ,IAAAA,GAAG,CAACe,IAAJ,CAAS;AAACX,MAAAA,UAAU,EAAGA;AAAd,KAAT;AACP,GAhBD,EAgBGY,KAhBH,CAiBQC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAjBf;AAmBH,CArBD",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers",
      "sourcesContent": [
        "const { validationResult } = require('express-validator/check');\nconst Sequelize = require('sequelize');\nconst Op = Sequelize.Op;\nconst path = require('path');\nconst fs = require('fs');\n\nconst Performer = require('../models/performer');\nconst Artisticevent = require('../models/artisticevent');\nconst Performance = require('../models/performance');\nconst User = require('../models/user');\n\nexports.getPerformers = (req, res, next) => {\n    Performer.findAll()\n    .then(performers => {\n        var promises = [];\n        performers.forEach(performer => {\n        const performerWithArtisticEvents = performer.getArtisticevents()\n               .then(artisticevents => {\n                    performer.dataValues.artisticevents = artisticevents;\n                })\n               .then(() => {\n                return performer;\n               });\n        promises.push(performerWithArtisticEvents);\n        });\n        return Promise.all(promises);\n    }).then((performers) => {\n        res.json({performers : performers});\n    }).catch(\n        err => console.log(err)\n    );\n};\n\nexports.getPerformer = (req, res, next) => {\n    const performerId = req.params.id;\n    Performer.findByPk(performerId)\n    .then(performer => {\n        if(!performer) {\n            res.status(404).json({\n                messages : 'Performer Not Found',\n            });\n        }\n        var promises = [];\n        const performerWithArtisticEvents = performer.getArtisticevents()\n        .then(artisticevents => {\n            performer.dataValues.artisticevents = artisticevents;\n         })\n        .then(() => {\n             return performer;\n        });\n        promises.push(performerWithArtisticEvents);\n        return Promise.all(promises);\n        }).then((performer) => {\n            res.json({performer : performer});\n        }).catch(\n            err => console.log(err)\n        );\n};\n\nexports.searchPerformer = (req, res, next) => {\n    const name = '%' + req.query.name + '%';\n    Performer.findAll({where : {name : {[Op.like] : name}}})\n    .then(performers => {\n        var promises = [];\n        performers.forEach(performer => {\n        const performerWithArtisticEvents = performer.getArtisticevents()\n               .then(artisticevents => {\n                performer.dataValues.artisticevents = artisticevents;\n                })\n               .then(() => {\n                return performer;\n               });\n        promises.push(performerWithArtisticEvents);\n        });\n        return Promise.all(promises);\n    }).then((performers) => {\n            res.json({performers : performers});\n    }).catch(\n            err => console.log(err)\n    );\n};"
      ]
    },
    "sourceType": "module",
    "mtime": 1577794638587
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes/seminary.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"plugins\":[],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes/seminary.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes/seminary.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes/seminary.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes",
        "sourceFileName": "seminary.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst {\n  body,\n  query\n} = require('express-validator/check');\n\nconst router = express.Router();\n\nconst isAuth = require('../middleware/is-auth');\n\nconst seminaryController = require('../controllers/seminary');\n\nconst path = require('path');\n\nconst multer = require('multer');\n\nconst uuidv4 = require('uuid/v4');\n\nconst storage = multer.diskStorage({\n  destination: (req, file, callback) => {\n    callback(null, 'public/images');\n  },\n  filename: (req, file, callback) => {\n    //callback(null, Date.now() + '-' + file.originalname);\n    callback(null, uuidv4() + path.extname(file.originalname));\n  }\n});\n\nconst fileFilter = (req, file, callback) => {\n  if (file.mimetype == 'image/png' || file.mimetype == 'image/jpg' || file.mimetype == 'image/jpeg') {\n    callback(null, true);\n  } else {\n    req.fileValidationError = \"Estensione non consentita solo: 'image/jpg' | 'image/png' | 'image/jpeg'\";\n    callback(null, false);\n  }\n};\n\nvar upload = multer({\n  storage: storage,\n  fileFilter: fileFilter\n});\nvar cpUpload = upload.single('image');\nrouter.get('/seminary', seminaryController.getSeminaries);\nrouter.get('/seminary/search', seminaryController.searchSeminary);\nrouter.get('/seminary/:id', seminaryController.getSeminary);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlbWluYXJ5LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwiYm9keSIsInF1ZXJ5Iiwicm91dGVyIiwiUm91dGVyIiwiaXNBdXRoIiwic2VtaW5hcnlDb250cm9sbGVyIiwicGF0aCIsIm11bHRlciIsInV1aWR2NCIsInN0b3JhZ2UiLCJkaXNrU3RvcmFnZSIsImRlc3RpbmF0aW9uIiwicmVxIiwiZmlsZSIsImNhbGxiYWNrIiwiZmlsZW5hbWUiLCJleHRuYW1lIiwib3JpZ2luYWxuYW1lIiwiZmlsZUZpbHRlciIsIm1pbWV0eXBlIiwiZmlsZVZhbGlkYXRpb25FcnJvciIsInVwbG9hZCIsImNwVXBsb2FkIiwic2luZ2xlIiwiZ2V0IiwiZ2V0U2VtaW5hcmllcyIsInNlYXJjaFNlbWluYXJ5IiwiZ2V0U2VtaW5hcnkiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLE1BQU07QUFBRUMsRUFBQUEsSUFBRjtBQUFRQyxFQUFBQTtBQUFSLElBQWtCRixPQUFPLENBQUMseUJBQUQsQ0FBL0I7O0FBQ0EsTUFBTUcsTUFBTSxHQUFHSixPQUFPLENBQUNLLE1BQVIsRUFBZjs7QUFFQSxNQUFNQyxNQUFNLEdBQUdMLE9BQU8sQ0FBQyx1QkFBRCxDQUF0Qjs7QUFFQSxNQUFNTSxrQkFBa0IsR0FBR04sT0FBTyxDQUFDLHlCQUFELENBQWxDOztBQUVBLE1BQU1PLElBQUksR0FBR1AsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsTUFBTVEsTUFBTSxHQUFHUixPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFDQSxNQUFNUyxNQUFNLEdBQUdULE9BQU8sQ0FBQyxTQUFELENBQXRCOztBQUVBLE1BQU1VLE9BQU8sR0FBR0YsTUFBTSxDQUFDRyxXQUFQLENBQW1CO0FBQy9CQyxFQUFBQSxXQUFXLEVBQUcsQ0FBQ0MsR0FBRCxFQUFNQyxJQUFOLEVBQVlDLFFBQVosS0FBeUI7QUFDbkNBLElBQUFBLFFBQVEsQ0FBQyxJQUFELEVBQU8sZUFBUCxDQUFSO0FBQ0gsR0FIOEI7QUFJL0JDLEVBQUFBLFFBQVEsRUFBRyxDQUFDSCxHQUFELEVBQU1DLElBQU4sRUFBWUMsUUFBWixLQUF5QjtBQUNoQztBQUNBQSxJQUFBQSxRQUFRLENBQUMsSUFBRCxFQUFPTixNQUFNLEtBQUtGLElBQUksQ0FBQ1UsT0FBTCxDQUFhSCxJQUFJLENBQUNJLFlBQWxCLENBQWxCLENBQVI7QUFDSDtBQVA4QixDQUFuQixDQUFoQjs7QUFVQSxNQUFNQyxVQUFVLEdBQUksQ0FBQ04sR0FBRCxFQUFNQyxJQUFOLEVBQVlDLFFBQVosS0FBeUI7QUFDekMsTUFBR0QsSUFBSSxDQUFDTSxRQUFMLElBQWlCLFdBQWpCLElBQWdDTixJQUFJLENBQUNNLFFBQUwsSUFBaUIsV0FBakQsSUFBZ0VOLElBQUksQ0FBQ00sUUFBTCxJQUFpQixZQUFwRixFQUFrRztBQUM5RkwsSUFBQUEsUUFBUSxDQUFDLElBQUQsRUFBTyxJQUFQLENBQVI7QUFDSCxHQUZELE1BRU87QUFDSEYsSUFBQUEsR0FBRyxDQUFDUSxtQkFBSixHQUEwQiwwRUFBMUI7QUFDQU4sSUFBQUEsUUFBUSxDQUFDLElBQUQsRUFBTyxLQUFQLENBQVI7QUFDSDtBQUNKLENBUEQ7O0FBU0EsSUFBSU8sTUFBTSxHQUFHZCxNQUFNLENBQUM7QUFBRUUsRUFBQUEsT0FBTyxFQUFHQSxPQUFaO0FBQXFCUyxFQUFBQSxVQUFVLEVBQUdBO0FBQWxDLENBQUQsQ0FBbkI7QUFFQSxJQUFJSSxRQUFRLEdBQUdELE1BQU0sQ0FBQ0UsTUFBUCxDQUFjLE9BQWQsQ0FBZjtBQUVBckIsTUFBTSxDQUFDc0IsR0FBUCxDQUFXLFdBQVgsRUFBd0JuQixrQkFBa0IsQ0FBQ29CLGFBQTNDO0FBQ0F2QixNQUFNLENBQUNzQixHQUFQLENBQVcsa0JBQVgsRUFBK0JuQixrQkFBa0IsQ0FBQ3FCLGNBQWxEO0FBQ0F4QixNQUFNLENBQUNzQixHQUFQLENBQVcsZUFBWCxFQUE0Qm5CLGtCQUFrQixDQUFDc0IsV0FBL0M7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCM0IsTUFBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL0FsZXNzYW5kcm9fTXVzb2xpbm8vRGVza3RvcC9IeXBlcm1lZGlhL0RyZWFtTGFuZEZlc3RpdmFsXy9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xuY29uc3QgeyBib2R5LCBxdWVyeSB9ID0gcmVxdWlyZSgnZXhwcmVzcy12YWxpZGF0b3IvY2hlY2snKTtcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbmNvbnN0IGlzQXV0aCA9IHJlcXVpcmUoJy4uL21pZGRsZXdhcmUvaXMtYXV0aCcpO1xuXG5jb25zdCBzZW1pbmFyeUNvbnRyb2xsZXIgPSByZXF1aXJlKCcuLi9jb250cm9sbGVycy9zZW1pbmFyeScpO1xuXG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuY29uc3QgbXVsdGVyID0gcmVxdWlyZSgnbXVsdGVyJyk7XG5jb25zdCB1dWlkdjQgPSByZXF1aXJlKCd1dWlkL3Y0Jyk7XG5cbmNvbnN0IHN0b3JhZ2UgPSBtdWx0ZXIuZGlza1N0b3JhZ2Uoe1xuICAgIGRlc3RpbmF0aW9uIDogKHJlcSwgZmlsZSwgY2FsbGJhY2spID0+IHtcbiAgICAgICAgY2FsbGJhY2sobnVsbCwgJ3B1YmxpYy9pbWFnZXMnKTtcbiAgICB9LFxuICAgIGZpbGVuYW1lIDogKHJlcSwgZmlsZSwgY2FsbGJhY2spID0+IHtcbiAgICAgICAgLy9jYWxsYmFjayhudWxsLCBEYXRlLm5vdygpICsgJy0nICsgZmlsZS5vcmlnaW5hbG5hbWUpO1xuICAgICAgICBjYWxsYmFjayhudWxsLCB1dWlkdjQoKSArIHBhdGguZXh0bmFtZShmaWxlLm9yaWdpbmFsbmFtZSkpO1xuICAgIH0sXG59KTtcblxuY29uc3QgZmlsZUZpbHRlciA9ICgocmVxLCBmaWxlLCBjYWxsYmFjaykgPT4ge1xuICAgIGlmKGZpbGUubWltZXR5cGUgPT0gJ2ltYWdlL3BuZycgfHwgZmlsZS5taW1ldHlwZSA9PSAnaW1hZ2UvanBnJyB8fCBmaWxlLm1pbWV0eXBlID09ICdpbWFnZS9qcGVnJykge1xuICAgICAgICBjYWxsYmFjayhudWxsLCB0cnVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXEuZmlsZVZhbGlkYXRpb25FcnJvciA9IFwiRXN0ZW5zaW9uZSBub24gY29uc2VudGl0YSBzb2xvOiAnaW1hZ2UvanBnJyB8ICdpbWFnZS9wbmcnIHwgJ2ltYWdlL2pwZWcnXCI7XG4gICAgICAgIGNhbGxiYWNrKG51bGwsIGZhbHNlKTtcbiAgICB9XG59KTtcblxudmFyIHVwbG9hZCA9IG11bHRlcih7IHN0b3JhZ2UgOiBzdG9yYWdlLCBmaWxlRmlsdGVyIDogZmlsZUZpbHRlcn0pO1xuXG52YXIgY3BVcGxvYWQgPSB1cGxvYWQuc2luZ2xlKCdpbWFnZScpO1xuXG5yb3V0ZXIuZ2V0KCcvc2VtaW5hcnknLCBzZW1pbmFyeUNvbnRyb2xsZXIuZ2V0U2VtaW5hcmllcyk7XG5yb3V0ZXIuZ2V0KCcvc2VtaW5hcnkvc2VhcmNoJywgc2VtaW5hcnlDb250cm9sbGVyLnNlYXJjaFNlbWluYXJ5KTtcbnJvdXRlci5nZXQoJy9zZW1pbmFyeS86aWQnLCBzZW1pbmFyeUNvbnRyb2xsZXIuZ2V0U2VtaW5hcnkpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "seminary.js"
      ],
      "names": [
        "express",
        "require",
        "body",
        "query",
        "router",
        "Router",
        "isAuth",
        "seminaryController",
        "path",
        "multer",
        "uuidv4",
        "storage",
        "diskStorage",
        "destination",
        "req",
        "file",
        "callback",
        "filename",
        "extname",
        "originalname",
        "fileFilter",
        "mimetype",
        "fileValidationError",
        "upload",
        "cpUpload",
        "single",
        "get",
        "getSeminaries",
        "searchSeminary",
        "getSeminary",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAM;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,IAAkBF,OAAO,CAAC,yBAAD,CAA/B;;AACA,MAAMG,MAAM,GAAGJ,OAAO,CAACK,MAAR,EAAf;;AAEA,MAAMC,MAAM,GAAGL,OAAO,CAAC,uBAAD,CAAtB;;AAEA,MAAMM,kBAAkB,GAAGN,OAAO,CAAC,yBAAD,CAAlC;;AAEA,MAAMO,IAAI,GAAGP,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMQ,MAAM,GAAGR,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMS,MAAM,GAAGT,OAAO,CAAC,SAAD,CAAtB;;AAEA,MAAMU,OAAO,GAAGF,MAAM,CAACG,WAAP,CAAmB;AAC/BC,EAAAA,WAAW,EAAG,CAACC,GAAD,EAAMC,IAAN,EAAYC,QAAZ,KAAyB;AACnCA,IAAAA,QAAQ,CAAC,IAAD,EAAO,eAAP,CAAR;AACH,GAH8B;AAI/BC,EAAAA,QAAQ,EAAG,CAACH,GAAD,EAAMC,IAAN,EAAYC,QAAZ,KAAyB;AAChC;AACAA,IAAAA,QAAQ,CAAC,IAAD,EAAON,MAAM,KAAKF,IAAI,CAACU,OAAL,CAAaH,IAAI,CAACI,YAAlB,CAAlB,CAAR;AACH;AAP8B,CAAnB,CAAhB;;AAUA,MAAMC,UAAU,GAAI,CAACN,GAAD,EAAMC,IAAN,EAAYC,QAAZ,KAAyB;AACzC,MAAGD,IAAI,CAACM,QAAL,IAAiB,WAAjB,IAAgCN,IAAI,CAACM,QAAL,IAAiB,WAAjD,IAAgEN,IAAI,CAACM,QAAL,IAAiB,YAApF,EAAkG;AAC9FL,IAAAA,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAR;AACH,GAFD,MAEO;AACHF,IAAAA,GAAG,CAACQ,mBAAJ,GAA0B,0EAA1B;AACAN,IAAAA,QAAQ,CAAC,IAAD,EAAO,KAAP,CAAR;AACH;AACJ,CAPD;;AASA,IAAIO,MAAM,GAAGd,MAAM,CAAC;AAAEE,EAAAA,OAAO,EAAGA,OAAZ;AAAqBS,EAAAA,UAAU,EAAGA;AAAlC,CAAD,CAAnB;AAEA,IAAII,QAAQ,GAAGD,MAAM,CAACE,MAAP,CAAc,OAAd,CAAf;AAEArB,MAAM,CAACsB,GAAP,CAAW,WAAX,EAAwBnB,kBAAkB,CAACoB,aAA3C;AACAvB,MAAM,CAACsB,GAAP,CAAW,kBAAX,EAA+BnB,kBAAkB,CAACqB,cAAlD;AACAxB,MAAM,CAACsB,GAAP,CAAW,eAAX,EAA4BnB,kBAAkB,CAACsB,WAA/C;AAEAC,MAAM,CAACC,OAAP,GAAiB3B,MAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes",
      "sourcesContent": [
        "const express = require('express');\nconst { body, query } = require('express-validator/check');\nconst router = express.Router();\n\nconst isAuth = require('../middleware/is-auth');\n\nconst seminaryController = require('../controllers/seminary');\n\nconst path = require('path');\nconst multer = require('multer');\nconst uuidv4 = require('uuid/v4');\n\nconst storage = multer.diskStorage({\n    destination : (req, file, callback) => {\n        callback(null, 'public/images');\n    },\n    filename : (req, file, callback) => {\n        //callback(null, Date.now() + '-' + file.originalname);\n        callback(null, uuidv4() + path.extname(file.originalname));\n    },\n});\n\nconst fileFilter = ((req, file, callback) => {\n    if(file.mimetype == 'image/png' || file.mimetype == 'image/jpg' || file.mimetype == 'image/jpeg') {\n        callback(null, true);\n    } else {\n        req.fileValidationError = \"Estensione non consentita solo: 'image/jpg' | 'image/png' | 'image/jpeg'\";\n        callback(null, false);\n    }\n});\n\nvar upload = multer({ storage : storage, fileFilter : fileFilter});\n\nvar cpUpload = upload.single('image');\n\nrouter.get('/seminary', seminaryController.getSeminaries);\nrouter.get('/seminary/search', seminaryController.searchSeminary);\nrouter.get('/seminary/:id', seminaryController.getSeminary);\n\nmodule.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1577442390794
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers/seminary.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"plugins\":[],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers/seminary.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers/seminary.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers/seminary.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers",
        "sourceFileName": "seminary.js"
      }
    },
    "ast": null,
    "code": "const {\n  validationResult\n} = require('express-validator/check');\n\nconst Sequelize = require('sequelize');\n\nconst Op = Sequelize.Op;\n\nconst path = require('path');\n\nconst fs = require('fs');\n\nconst Seminary = require('../models/seminary');\n\nconst User = require('../models/user');\n\nexports.getSeminaries = (req, res, next) => {\n  Seminary.findAll().then(seminaries => {\n    var promises = [];\n    seminaries.forEach(seminary => {\n      const seminaryWithArtisticEvents = seminary.getArtisticevents().then(artisticevents => {\n        seminary.dataValues.artisticevents = artisticevents;\n      }).then(() => {\n        return seminary;\n      });\n      promises.push(seminaryWithArtisticEvents);\n    });\n    return Promise.all(promises);\n  }).then(seminaries => {\n    res.json({\n      seminaries: seminaries\n    });\n  }).catch(err => console.log(err));\n};\n\nexports.getSeminary = (req, res, next) => {\n  const seminaryId = req.params.id;\n  Seminary.findByPk(seminaryId).then(seminary => {\n    if (!seminary) {\n      res.status(404).json({\n        messages: 'Seminary Not Found'\n      });\n    }\n\n    var promises = [];\n    const seminaryWithArtisticEvents = seminary.getArtisticevents().then(artisticevents => {\n      seminary.dataValues.artisticevents = artisticevents;\n    }).then(() => {\n      return seminary;\n    });\n    promises.push(seminaryWithArtisticEvents);\n    return Promise.all(promises);\n  }).then(seminary => {\n    res.json({\n      seminary: seminary\n    });\n  }).catch(err => console.log(err));\n};\n\nexports.searchSeminary = (req, res, next) => {\n  const title = '%' + req.query.title + '%';\n  Seminary.findAll({\n    where: {\n      title: {\n        [Op.like]: title\n      }\n    }\n  }).then(seminaries => {\n    var promises = [];\n    seminaries.forEach(seminary => {\n      const seminaryWithArtisticEvents = seminary.getArtisticevents().then(artisticevents => {\n        seminary.dataValues.artisticevents = artisticevents;\n      }).then(() => {\n        return seminary;\n      });\n      promises.push(seminaryWithArtisticEvents);\n    });\n    return Promise.all(promises);\n  }).then(seminaries => {\n    res.json({\n      seminaries: seminaries\n    });\n  }).catch(err => console.log(err));\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlbWluYXJ5LmpzIl0sIm5hbWVzIjpbInZhbGlkYXRpb25SZXN1bHQiLCJyZXF1aXJlIiwiU2VxdWVsaXplIiwiT3AiLCJwYXRoIiwiZnMiLCJTZW1pbmFyeSIsIlVzZXIiLCJleHBvcnRzIiwiZ2V0U2VtaW5hcmllcyIsInJlcSIsInJlcyIsIm5leHQiLCJmaW5kQWxsIiwidGhlbiIsInNlbWluYXJpZXMiLCJwcm9taXNlcyIsImZvckVhY2giLCJzZW1pbmFyeSIsInNlbWluYXJ5V2l0aEFydGlzdGljRXZlbnRzIiwiZ2V0QXJ0aXN0aWNldmVudHMiLCJhcnRpc3RpY2V2ZW50cyIsImRhdGFWYWx1ZXMiLCJwdXNoIiwiUHJvbWlzZSIsImFsbCIsImpzb24iLCJjYXRjaCIsImVyciIsImNvbnNvbGUiLCJsb2ciLCJnZXRTZW1pbmFyeSIsInNlbWluYXJ5SWQiLCJwYXJhbXMiLCJpZCIsImZpbmRCeVBrIiwic3RhdHVzIiwibWVzc2FnZXMiLCJzZWFyY2hTZW1pbmFyeSIsInRpdGxlIiwicXVlcnkiLCJ3aGVyZSIsImxpa2UiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU07QUFBRUEsRUFBQUE7QUFBRixJQUF1QkMsT0FBTyxDQUFDLHlCQUFELENBQXBDOztBQUNBLE1BQU1DLFNBQVMsR0FBR0QsT0FBTyxDQUFDLFdBQUQsQ0FBekI7O0FBQ0EsTUFBTUUsRUFBRSxHQUFHRCxTQUFTLENBQUNDLEVBQXJCOztBQUNBLE1BQU1DLElBQUksR0FBR0gsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsTUFBTUksRUFBRSxHQUFHSixPQUFPLENBQUMsSUFBRCxDQUFsQjs7QUFFQSxNQUFNSyxRQUFRLEdBQUdMLE9BQU8sQ0FBQyxvQkFBRCxDQUF4Qjs7QUFDQSxNQUFNTSxJQUFJLEdBQUdOLE9BQU8sQ0FBQyxnQkFBRCxDQUFwQjs7QUFFQU8sT0FBTyxDQUFDQyxhQUFSLEdBQXdCLENBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEtBQW9CO0FBQ3hDTixFQUFBQSxRQUFRLENBQUNPLE9BQVQsR0FDQ0MsSUFERCxDQUNNQyxVQUFVLElBQUk7QUFDaEIsUUFBSUMsUUFBUSxHQUFHLEVBQWY7QUFDQUQsSUFBQUEsVUFBVSxDQUFDRSxPQUFYLENBQW1CQyxRQUFRLElBQUk7QUFDL0IsWUFBTUMsMEJBQTBCLEdBQUdELFFBQVEsQ0FBQ0UsaUJBQVQsR0FDM0JOLElBRDJCLENBQ3RCTyxjQUFjLElBQUk7QUFDbkJILFFBQUFBLFFBQVEsQ0FBQ0ksVUFBVCxDQUFvQkQsY0FBcEIsR0FBcUNBLGNBQXJDO0FBQ0gsT0FIMEIsRUFJM0JQLElBSjJCLENBSXRCLE1BQU07QUFDWCxlQUFPSSxRQUFQO0FBQ0EsT0FOMkIsQ0FBbkM7QUFPQUYsTUFBQUEsUUFBUSxDQUFDTyxJQUFULENBQWNKLDBCQUFkO0FBQ0MsS0FURDtBQVVBLFdBQU9LLE9BQU8sQ0FBQ0MsR0FBUixDQUFZVCxRQUFaLENBQVA7QUFDSCxHQWRELEVBY0dGLElBZEgsQ0FjU0MsVUFBRCxJQUFnQjtBQUNwQkosSUFBQUEsR0FBRyxDQUFDZSxJQUFKLENBQVM7QUFBQ1gsTUFBQUEsVUFBVSxFQUFHQTtBQUFkLEtBQVQ7QUFDSCxHQWhCRCxFQWdCR1ksS0FoQkgsQ0FpQklDLEdBQUcsSUFBSUMsT0FBTyxDQUFDQyxHQUFSLENBQVlGLEdBQVosQ0FqQlg7QUFtQkgsQ0FwQkQ7O0FBc0JBcEIsT0FBTyxDQUFDdUIsV0FBUixHQUFzQixDQUFDckIsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsS0FBb0I7QUFDdEMsUUFBTW9CLFVBQVUsR0FBR3RCLEdBQUcsQ0FBQ3VCLE1BQUosQ0FBV0MsRUFBOUI7QUFDQTVCLEVBQUFBLFFBQVEsQ0FBQzZCLFFBQVQsQ0FBa0JILFVBQWxCLEVBQ0NsQixJQURELENBQ01JLFFBQVEsSUFBSTtBQUNkLFFBQUcsQ0FBQ0EsUUFBSixFQUFjO0FBQ1ZQLE1BQUFBLEdBQUcsQ0FBQ3lCLE1BQUosQ0FBVyxHQUFYLEVBQWdCVixJQUFoQixDQUFxQjtBQUNqQlcsUUFBQUEsUUFBUSxFQUFHO0FBRE0sT0FBckI7QUFHSDs7QUFDRCxRQUFJckIsUUFBUSxHQUFHLEVBQWY7QUFDQSxVQUFNRywwQkFBMEIsR0FBR0QsUUFBUSxDQUFDRSxpQkFBVCxHQUNsQ04sSUFEa0MsQ0FDN0JPLGNBQWMsSUFBSTtBQUNwQkgsTUFBQUEsUUFBUSxDQUFDSSxVQUFULENBQW9CRCxjQUFwQixHQUFxQ0EsY0FBckM7QUFDRixLQUhpQyxFQUlsQ1AsSUFKa0MsQ0FJN0IsTUFBTTtBQUNQLGFBQU9JLFFBQVA7QUFDSixLQU5rQyxDQUFuQztBQU9BRixJQUFBQSxRQUFRLENBQUNPLElBQVQsQ0FBY0osMEJBQWQ7QUFDQSxXQUFPSyxPQUFPLENBQUNDLEdBQVIsQ0FBWVQsUUFBWixDQUFQO0FBQ0MsR0FqQkwsRUFpQk9GLElBakJQLENBaUJhSSxRQUFELElBQWM7QUFDbEJQLElBQUFBLEdBQUcsQ0FBQ2UsSUFBSixDQUFTO0FBQUNSLE1BQUFBLFFBQVEsRUFBR0E7QUFBWixLQUFUO0FBQ0gsR0FuQkwsRUFtQk9TLEtBbkJQLENBb0JRQyxHQUFHLElBQUlDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixHQUFaLENBcEJmO0FBc0JILENBeEJEOztBQTBCQXBCLE9BQU8sQ0FBQzhCLGNBQVIsR0FBeUIsQ0FBQzVCLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEtBQW9CO0FBQ3pDLFFBQU0yQixLQUFLLEdBQUcsTUFBTTdCLEdBQUcsQ0FBQzhCLEtBQUosQ0FBVUQsS0FBaEIsR0FBd0IsR0FBdEM7QUFDQWpDLEVBQUFBLFFBQVEsQ0FBQ08sT0FBVCxDQUFpQjtBQUFDNEIsSUFBQUEsS0FBSyxFQUFHO0FBQUNGLE1BQUFBLEtBQUssRUFBRztBQUFDLFNBQUNwQyxFQUFFLENBQUN1QyxJQUFKLEdBQVlIO0FBQWI7QUFBVDtBQUFULEdBQWpCLEVBQ0N6QixJQURELENBQ01DLFVBQVUsSUFBSTtBQUNoQixRQUFJQyxRQUFRLEdBQUcsRUFBZjtBQUNBRCxJQUFBQSxVQUFVLENBQUNFLE9BQVgsQ0FBbUJDLFFBQVEsSUFBSTtBQUMvQixZQUFNQywwQkFBMEIsR0FBR0QsUUFBUSxDQUFDRSxpQkFBVCxHQUMzQk4sSUFEMkIsQ0FDdEJPLGNBQWMsSUFBSTtBQUNuQkgsUUFBQUEsUUFBUSxDQUFDSSxVQUFULENBQW9CRCxjQUFwQixHQUFxQ0EsY0FBckM7QUFDSCxPQUgwQixFQUkzQlAsSUFKMkIsQ0FJdEIsTUFBTTtBQUNYLGVBQU9JLFFBQVA7QUFDQSxPQU4yQixDQUFuQztBQU9BRixNQUFBQSxRQUFRLENBQUNPLElBQVQsQ0FBY0osMEJBQWQ7QUFDQyxLQVREO0FBVUEsV0FBT0ssT0FBTyxDQUFDQyxHQUFSLENBQVlULFFBQVosQ0FBUDtBQUNILEdBZEQsRUFjR0YsSUFkSCxDQWNTQyxVQUFELElBQWdCO0FBQ2hCSixJQUFBQSxHQUFHLENBQUNlLElBQUosQ0FBUztBQUFDWCxNQUFBQSxVQUFVLEVBQUdBO0FBQWQsS0FBVDtBQUNQLEdBaEJELEVBZ0JHWSxLQWhCSCxDQWlCUUMsR0FBRyxJQUFJQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsR0FBWixDQWpCZjtBQW1CSCxDQXJCRCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvQWxlc3NhbmRyb19NdXNvbGluby9EZXNrdG9wL0h5cGVybWVkaWEvRHJlYW1MYW5kRmVzdGl2YWxfL2NvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyB2YWxpZGF0aW9uUmVzdWx0IH0gPSByZXF1aXJlKCdleHByZXNzLXZhbGlkYXRvci9jaGVjaycpO1xuY29uc3QgU2VxdWVsaXplID0gcmVxdWlyZSgnc2VxdWVsaXplJyk7XG5jb25zdCBPcCA9IFNlcXVlbGl6ZS5PcDtcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5jb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG5cbmNvbnN0IFNlbWluYXJ5ID0gcmVxdWlyZSgnLi4vbW9kZWxzL3NlbWluYXJ5Jyk7XG5jb25zdCBVc2VyID0gcmVxdWlyZSgnLi4vbW9kZWxzL3VzZXInKTtcblxuZXhwb3J0cy5nZXRTZW1pbmFyaWVzID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgU2VtaW5hcnkuZmluZEFsbCgpXG4gICAgLnRoZW4oc2VtaW5hcmllcyA9PiB7XG4gICAgICAgIHZhciBwcm9taXNlcyA9IFtdO1xuICAgICAgICBzZW1pbmFyaWVzLmZvckVhY2goc2VtaW5hcnkgPT4ge1xuICAgICAgICBjb25zdCBzZW1pbmFyeVdpdGhBcnRpc3RpY0V2ZW50cyA9IHNlbWluYXJ5LmdldEFydGlzdGljZXZlbnRzKClcbiAgICAgICAgICAgICAgIC50aGVuKGFydGlzdGljZXZlbnRzID0+IHtcbiAgICAgICAgICAgICAgICAgICAgc2VtaW5hcnkuZGF0YVZhbHVlcy5hcnRpc3RpY2V2ZW50cyA9IGFydGlzdGljZXZlbnRzO1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAudGhlbigoKSA9PiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHNlbWluYXJ5O1xuICAgICAgICAgICAgICAgfSk7XG4gICAgICAgIHByb21pc2VzLnB1c2goc2VtaW5hcnlXaXRoQXJ0aXN0aWNFdmVudHMpO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIFByb21pc2UuYWxsKHByb21pc2VzKTtcbiAgICB9KS50aGVuKChzZW1pbmFyaWVzKSA9PiB7XG4gICAgICAgIHJlcy5qc29uKHtzZW1pbmFyaWVzIDogc2VtaW5hcmllc30pO1xuICAgIH0pLmNhdGNoKFxuICAgICAgICBlcnIgPT4gY29uc29sZS5sb2coZXJyKVxuICAgICk7XG59O1xuXG5leHBvcnRzLmdldFNlbWluYXJ5ID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgY29uc3Qgc2VtaW5hcnlJZCA9IHJlcS5wYXJhbXMuaWQ7XG4gICAgU2VtaW5hcnkuZmluZEJ5UGsoc2VtaW5hcnlJZClcbiAgICAudGhlbihzZW1pbmFyeSA9PiB7XG4gICAgICAgIGlmKCFzZW1pbmFyeSkge1xuICAgICAgICAgICAgcmVzLnN0YXR1cyg0MDQpLmpzb24oe1xuICAgICAgICAgICAgICAgIG1lc3NhZ2VzIDogJ1NlbWluYXJ5IE5vdCBGb3VuZCcsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgcHJvbWlzZXMgPSBbXTtcbiAgICAgICAgY29uc3Qgc2VtaW5hcnlXaXRoQXJ0aXN0aWNFdmVudHMgPSBzZW1pbmFyeS5nZXRBcnRpc3RpY2V2ZW50cygpXG4gICAgICAgIC50aGVuKGFydGlzdGljZXZlbnRzID0+IHtcbiAgICAgICAgICAgIHNlbWluYXJ5LmRhdGFWYWx1ZXMuYXJ0aXN0aWNldmVudHMgPSBhcnRpc3RpY2V2ZW50cztcbiAgICAgICAgIH0pXG4gICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgICByZXR1cm4gc2VtaW5hcnk7XG4gICAgICAgIH0pO1xuICAgICAgICBwcm9taXNlcy5wdXNoKHNlbWluYXJ5V2l0aEFydGlzdGljRXZlbnRzKTtcbiAgICAgICAgcmV0dXJuIFByb21pc2UuYWxsKHByb21pc2VzKTtcbiAgICAgICAgfSkudGhlbigoc2VtaW5hcnkpID0+IHtcbiAgICAgICAgICAgIHJlcy5qc29uKHtzZW1pbmFyeSA6IHNlbWluYXJ5fSk7XG4gICAgICAgIH0pLmNhdGNoKFxuICAgICAgICAgICAgZXJyID0+IGNvbnNvbGUubG9nKGVycilcbiAgICAgICAgKTtcbn07XG5cbmV4cG9ydHMuc2VhcmNoU2VtaW5hcnkgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBjb25zdCB0aXRsZSA9ICclJyArIHJlcS5xdWVyeS50aXRsZSArICclJztcbiAgICBTZW1pbmFyeS5maW5kQWxsKHt3aGVyZSA6IHt0aXRsZSA6IHtbT3AubGlrZV0gOiB0aXRsZX19fSlcbiAgICAudGhlbihzZW1pbmFyaWVzID0+IHtcbiAgICAgICAgdmFyIHByb21pc2VzID0gW107XG4gICAgICAgIHNlbWluYXJpZXMuZm9yRWFjaChzZW1pbmFyeSA9PiB7XG4gICAgICAgIGNvbnN0IHNlbWluYXJ5V2l0aEFydGlzdGljRXZlbnRzID0gc2VtaW5hcnkuZ2V0QXJ0aXN0aWNldmVudHMoKVxuICAgICAgICAgICAgICAgLnRoZW4oYXJ0aXN0aWNldmVudHMgPT4ge1xuICAgICAgICAgICAgICAgICAgICBzZW1pbmFyeS5kYXRhVmFsdWVzLmFydGlzdGljZXZlbnRzID0gYXJ0aXN0aWNldmVudHM7XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gc2VtaW5hcnk7XG4gICAgICAgICAgICAgICB9KTtcbiAgICAgICAgcHJvbWlzZXMucHVzaChzZW1pbmFyeVdpdGhBcnRpc3RpY0V2ZW50cyk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5hbGwocHJvbWlzZXMpO1xuICAgIH0pLnRoZW4oKHNlbWluYXJpZXMpID0+IHtcbiAgICAgICAgICAgIHJlcy5qc29uKHtzZW1pbmFyaWVzIDogc2VtaW5hcmllc30pO1xuICAgIH0pLmNhdGNoKFxuICAgICAgICAgICAgZXJyID0+IGNvbnNvbGUubG9nKGVycilcbiAgICApO1xufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "seminary.js"
      ],
      "names": [
        "validationResult",
        "require",
        "Sequelize",
        "Op",
        "path",
        "fs",
        "Seminary",
        "User",
        "exports",
        "getSeminaries",
        "req",
        "res",
        "next",
        "findAll",
        "then",
        "seminaries",
        "promises",
        "forEach",
        "seminary",
        "seminaryWithArtisticEvents",
        "getArtisticevents",
        "artisticevents",
        "dataValues",
        "push",
        "Promise",
        "all",
        "json",
        "catch",
        "err",
        "console",
        "log",
        "getSeminary",
        "seminaryId",
        "params",
        "id",
        "findByPk",
        "status",
        "messages",
        "searchSeminary",
        "title",
        "query",
        "where",
        "like"
      ],
      "mappings": "AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAuBC,OAAO,CAAC,yBAAD,CAApC;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,WAAD,CAAzB;;AACA,MAAME,EAAE,GAAGD,SAAS,CAACC,EAArB;;AACA,MAAMC,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMI,EAAE,GAAGJ,OAAO,CAAC,IAAD,CAAlB;;AAEA,MAAMK,QAAQ,GAAGL,OAAO,CAAC,oBAAD,CAAxB;;AACA,MAAMM,IAAI,GAAGN,OAAO,CAAC,gBAAD,CAApB;;AAEAO,OAAO,CAACC,aAAR,GAAwB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACxCN,EAAAA,QAAQ,CAACO,OAAT,GACCC,IADD,CACMC,UAAU,IAAI;AAChB,QAAIC,QAAQ,GAAG,EAAf;AACAD,IAAAA,UAAU,CAACE,OAAX,CAAmBC,QAAQ,IAAI;AAC/B,YAAMC,0BAA0B,GAAGD,QAAQ,CAACE,iBAAT,GAC3BN,IAD2B,CACtBO,cAAc,IAAI;AACnBH,QAAAA,QAAQ,CAACI,UAAT,CAAoBD,cAApB,GAAqCA,cAArC;AACH,OAH0B,EAI3BP,IAJ2B,CAItB,MAAM;AACX,eAAOI,QAAP;AACA,OAN2B,CAAnC;AAOAF,MAAAA,QAAQ,CAACO,IAAT,CAAcJ,0BAAd;AACC,KATD;AAUA,WAAOK,OAAO,CAACC,GAAR,CAAYT,QAAZ,CAAP;AACH,GAdD,EAcGF,IAdH,CAcSC,UAAD,IAAgB;AACpBJ,IAAAA,GAAG,CAACe,IAAJ,CAAS;AAACX,MAAAA,UAAU,EAAGA;AAAd,KAAT;AACH,GAhBD,EAgBGY,KAhBH,CAiBIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAjBX;AAmBH,CApBD;;AAsBApB,OAAO,CAACuB,WAAR,GAAsB,CAACrB,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACtC,QAAMoB,UAAU,GAAGtB,GAAG,CAACuB,MAAJ,CAAWC,EAA9B;AACA5B,EAAAA,QAAQ,CAAC6B,QAAT,CAAkBH,UAAlB,EACClB,IADD,CACMI,QAAQ,IAAI;AACd,QAAG,CAACA,QAAJ,EAAc;AACVP,MAAAA,GAAG,CAACyB,MAAJ,CAAW,GAAX,EAAgBV,IAAhB,CAAqB;AACjBW,QAAAA,QAAQ,EAAG;AADM,OAArB;AAGH;;AACD,QAAIrB,QAAQ,GAAG,EAAf;AACA,UAAMG,0BAA0B,GAAGD,QAAQ,CAACE,iBAAT,GAClCN,IADkC,CAC7BO,cAAc,IAAI;AACpBH,MAAAA,QAAQ,CAACI,UAAT,CAAoBD,cAApB,GAAqCA,cAArC;AACF,KAHiC,EAIlCP,IAJkC,CAI7B,MAAM;AACP,aAAOI,QAAP;AACJ,KANkC,CAAnC;AAOAF,IAAAA,QAAQ,CAACO,IAAT,CAAcJ,0BAAd;AACA,WAAOK,OAAO,CAACC,GAAR,CAAYT,QAAZ,CAAP;AACC,GAjBL,EAiBOF,IAjBP,CAiBaI,QAAD,IAAc;AAClBP,IAAAA,GAAG,CAACe,IAAJ,CAAS;AAACR,MAAAA,QAAQ,EAAGA;AAAZ,KAAT;AACH,GAnBL,EAmBOS,KAnBP,CAoBQC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CApBf;AAsBH,CAxBD;;AA0BApB,OAAO,CAAC8B,cAAR,GAAyB,CAAC5B,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACzC,QAAM2B,KAAK,GAAG,MAAM7B,GAAG,CAAC8B,KAAJ,CAAUD,KAAhB,GAAwB,GAAtC;AACAjC,EAAAA,QAAQ,CAACO,OAAT,CAAiB;AAAC4B,IAAAA,KAAK,EAAG;AAACF,MAAAA,KAAK,EAAG;AAAC,SAACpC,EAAE,CAACuC,IAAJ,GAAYH;AAAb;AAAT;AAAT,GAAjB,EACCzB,IADD,CACMC,UAAU,IAAI;AAChB,QAAIC,QAAQ,GAAG,EAAf;AACAD,IAAAA,UAAU,CAACE,OAAX,CAAmBC,QAAQ,IAAI;AAC/B,YAAMC,0BAA0B,GAAGD,QAAQ,CAACE,iBAAT,GAC3BN,IAD2B,CACtBO,cAAc,IAAI;AACnBH,QAAAA,QAAQ,CAACI,UAAT,CAAoBD,cAApB,GAAqCA,cAArC;AACH,OAH0B,EAI3BP,IAJ2B,CAItB,MAAM;AACX,eAAOI,QAAP;AACA,OAN2B,CAAnC;AAOAF,MAAAA,QAAQ,CAACO,IAAT,CAAcJ,0BAAd;AACC,KATD;AAUA,WAAOK,OAAO,CAACC,GAAR,CAAYT,QAAZ,CAAP;AACH,GAdD,EAcGF,IAdH,CAcSC,UAAD,IAAgB;AAChBJ,IAAAA,GAAG,CAACe,IAAJ,CAAS;AAACX,MAAAA,UAAU,EAAGA;AAAd,KAAT;AACP,GAhBD,EAgBGY,KAhBH,CAiBQC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAjBf;AAmBH,CArBD",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers",
      "sourcesContent": [
        "const { validationResult } = require('express-validator/check');\nconst Sequelize = require('sequelize');\nconst Op = Sequelize.Op;\nconst path = require('path');\nconst fs = require('fs');\n\nconst Seminary = require('../models/seminary');\nconst User = require('../models/user');\n\nexports.getSeminaries = (req, res, next) => {\n    Seminary.findAll()\n    .then(seminaries => {\n        var promises = [];\n        seminaries.forEach(seminary => {\n        const seminaryWithArtisticEvents = seminary.getArtisticevents()\n               .then(artisticevents => {\n                    seminary.dataValues.artisticevents = artisticevents;\n                })\n               .then(() => {\n                return seminary;\n               });\n        promises.push(seminaryWithArtisticEvents);\n        });\n        return Promise.all(promises);\n    }).then((seminaries) => {\n        res.json({seminaries : seminaries});\n    }).catch(\n        err => console.log(err)\n    );\n};\n\nexports.getSeminary = (req, res, next) => {\n    const seminaryId = req.params.id;\n    Seminary.findByPk(seminaryId)\n    .then(seminary => {\n        if(!seminary) {\n            res.status(404).json({\n                messages : 'Seminary Not Found',\n            });\n        }\n        var promises = [];\n        const seminaryWithArtisticEvents = seminary.getArtisticevents()\n        .then(artisticevents => {\n            seminary.dataValues.artisticevents = artisticevents;\n         })\n        .then(() => {\n             return seminary;\n        });\n        promises.push(seminaryWithArtisticEvents);\n        return Promise.all(promises);\n        }).then((seminary) => {\n            res.json({seminary : seminary});\n        }).catch(\n            err => console.log(err)\n        );\n};\n\nexports.searchSeminary = (req, res, next) => {\n    const title = '%' + req.query.title + '%';\n    Seminary.findAll({where : {title : {[Op.like] : title}}})\n    .then(seminaries => {\n        var promises = [];\n        seminaries.forEach(seminary => {\n        const seminaryWithArtisticEvents = seminary.getArtisticevents()\n               .then(artisticevents => {\n                    seminary.dataValues.artisticevents = artisticevents;\n                })\n               .then(() => {\n                return seminary;\n               });\n        promises.push(seminaryWithArtisticEvents);\n        });\n        return Promise.all(promises);\n    }).then((seminaries) => {\n            res.json({seminaries : seminaries});\n    }).catch(\n            err => console.log(err)\n    );\n};"
      ]
    },
    "sourceType": "module",
    "mtime": 1577794666511
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes/gallery.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"plugins\":[],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes/gallery.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes/gallery.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes/gallery.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes",
        "sourceFileName": "gallery.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst {\n  body,\n  query\n} = require('express-validator/check');\n\nconst router = express.Router();\n\nconst isAuth = require('../middleware/is-auth');\n\nconst galleryController = require('../controllers/gallery');\n\nconst path = require('path');\n\nconst multer = require('multer');\n\nconst uuidv4 = require('uuid/v4');\n\nconst storage = multer.diskStorage({\n  destination: (req, file, callback) => {\n    callback(null, 'public/gallery');\n  },\n  filename: (req, file, callback) => {\n    //callback(null, Date.now() + '-' + file.originalname);\n    callback(null, uuidv4() + path.extname(file.originalname));\n  }\n});\n\nconst fileFilter = (req, file, callback) => {\n  if (file.mimetype == 'image/png' || file.mimetype == 'image/jpg' || file.mimetype == 'image/jpeg') {\n    callback(null, true);\n  } else {\n    req.fileValidationError = \"Estensione non consentita solo: 'image/jpg' | 'image/png' | 'image/jpeg'\";\n    callback(null, false);\n  }\n};\n\nvar upload = multer({\n  storage: storage,\n  fileFilter: fileFilter\n});\nvar cpUpload = upload.fields([{\n  name: 'avatar',\n  maxCount: 1\n}, {\n  name: 'gallery',\n  maxCount: 8\n}]);\nrouter.post('/', [isAuth, cpUpload], galleryController.createGallery);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhbGxlcnkuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJib2R5IiwicXVlcnkiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJpc0F1dGgiLCJnYWxsZXJ5Q29udHJvbGxlciIsInBhdGgiLCJtdWx0ZXIiLCJ1dWlkdjQiLCJzdG9yYWdlIiwiZGlza1N0b3JhZ2UiLCJkZXN0aW5hdGlvbiIsInJlcSIsImZpbGUiLCJjYWxsYmFjayIsImZpbGVuYW1lIiwiZXh0bmFtZSIsIm9yaWdpbmFsbmFtZSIsImZpbGVGaWx0ZXIiLCJtaW1ldHlwZSIsImZpbGVWYWxpZGF0aW9uRXJyb3IiLCJ1cGxvYWQiLCJjcFVwbG9hZCIsImZpZWxkcyIsIm5hbWUiLCJtYXhDb3VudCIsInBvc3QiLCJjcmVhdGVHYWxsZXJ5IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxNQUFNO0FBQUVDLEVBQUFBLElBQUY7QUFBUUMsRUFBQUE7QUFBUixJQUFrQkYsT0FBTyxDQUFDLHlCQUFELENBQS9COztBQUNBLE1BQU1HLE1BQU0sR0FBR0osT0FBTyxDQUFDSyxNQUFSLEVBQWY7O0FBRUEsTUFBTUMsTUFBTSxHQUFHTCxPQUFPLENBQUMsdUJBQUQsQ0FBdEI7O0FBRUEsTUFBTU0saUJBQWlCLEdBQUdOLE9BQU8sQ0FBQyx3QkFBRCxDQUFqQzs7QUFFQSxNQUFNTyxJQUFJLEdBQUdQLE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUNBLE1BQU1RLE1BQU0sR0FBR1IsT0FBTyxDQUFDLFFBQUQsQ0FBdEI7O0FBQ0EsTUFBTVMsTUFBTSxHQUFHVCxPQUFPLENBQUMsU0FBRCxDQUF0Qjs7QUFFQSxNQUFNVSxPQUFPLEdBQUdGLE1BQU0sQ0FBQ0csV0FBUCxDQUFtQjtBQUMvQkMsRUFBQUEsV0FBVyxFQUFHLENBQUNDLEdBQUQsRUFBTUMsSUFBTixFQUFZQyxRQUFaLEtBQXlCO0FBQ25DQSxJQUFBQSxRQUFRLENBQUMsSUFBRCxFQUFPLGdCQUFQLENBQVI7QUFDSCxHQUg4QjtBQUkvQkMsRUFBQUEsUUFBUSxFQUFHLENBQUNILEdBQUQsRUFBTUMsSUFBTixFQUFZQyxRQUFaLEtBQXlCO0FBQ2hDO0FBQ0FBLElBQUFBLFFBQVEsQ0FBQyxJQUFELEVBQU9OLE1BQU0sS0FBS0YsSUFBSSxDQUFDVSxPQUFMLENBQWFILElBQUksQ0FBQ0ksWUFBbEIsQ0FBbEIsQ0FBUjtBQUNIO0FBUDhCLENBQW5CLENBQWhCOztBQVVBLE1BQU1DLFVBQVUsR0FBSSxDQUFDTixHQUFELEVBQU1DLElBQU4sRUFBWUMsUUFBWixLQUF5QjtBQUN6QyxNQUFHRCxJQUFJLENBQUNNLFFBQUwsSUFBaUIsV0FBakIsSUFBZ0NOLElBQUksQ0FBQ00sUUFBTCxJQUFpQixXQUFqRCxJQUFnRU4sSUFBSSxDQUFDTSxRQUFMLElBQWlCLFlBQXBGLEVBQWtHO0FBQzlGTCxJQUFBQSxRQUFRLENBQUMsSUFBRCxFQUFPLElBQVAsQ0FBUjtBQUNILEdBRkQsTUFFTztBQUNIRixJQUFBQSxHQUFHLENBQUNRLG1CQUFKLEdBQTBCLDBFQUExQjtBQUNBTixJQUFBQSxRQUFRLENBQUMsSUFBRCxFQUFPLEtBQVAsQ0FBUjtBQUNIO0FBQ0osQ0FQRDs7QUFTQSxJQUFJTyxNQUFNLEdBQUdkLE1BQU0sQ0FBQztBQUFFRSxFQUFBQSxPQUFPLEVBQUdBLE9BQVo7QUFBcUJTLEVBQUFBLFVBQVUsRUFBR0E7QUFBbEMsQ0FBRCxDQUFuQjtBQUVBLElBQUlJLFFBQVEsR0FBR0QsTUFBTSxDQUFDRSxNQUFQLENBQWMsQ0FDekI7QUFBQ0MsRUFBQUEsSUFBSSxFQUFHLFFBQVI7QUFBa0JDLEVBQUFBLFFBQVEsRUFBRztBQUE3QixDQUR5QixFQUV6QjtBQUFDRCxFQUFBQSxJQUFJLEVBQUcsU0FBUjtBQUFtQkMsRUFBQUEsUUFBUSxFQUFHO0FBQTlCLENBRnlCLENBQWQsQ0FBZjtBQUtBdkIsTUFBTSxDQUFDd0IsSUFBUCxDQUFZLEdBQVosRUFBaUIsQ0FBQ3RCLE1BQUQsRUFBU2tCLFFBQVQsQ0FBakIsRUFBcUNqQixpQkFBaUIsQ0FBQ3NCLGFBQXZEO0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjNCLE1BQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9BbGVzc2FuZHJvX011c29saW5vL0Rlc2t0b3AvSHlwZXJtZWRpYS9EcmVhbUxhbmRGZXN0aXZhbF8vcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbmNvbnN0IHsgYm9keSwgcXVlcnkgfSA9IHJlcXVpcmUoJ2V4cHJlc3MtdmFsaWRhdG9yL2NoZWNrJyk7XG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuXG5jb25zdCBpc0F1dGggPSByZXF1aXJlKCcuLi9taWRkbGV3YXJlL2lzLWF1dGgnKTtcblxuY29uc3QgZ2FsbGVyeUNvbnRyb2xsZXIgPSByZXF1aXJlKCcuLi9jb250cm9sbGVycy9nYWxsZXJ5Jyk7XG5cbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5jb25zdCBtdWx0ZXIgPSByZXF1aXJlKCdtdWx0ZXInKTtcbmNvbnN0IHV1aWR2NCA9IHJlcXVpcmUoJ3V1aWQvdjQnKTtcblxuY29uc3Qgc3RvcmFnZSA9IG11bHRlci5kaXNrU3RvcmFnZSh7XG4gICAgZGVzdGluYXRpb24gOiAocmVxLCBmaWxlLCBjYWxsYmFjaykgPT4ge1xuICAgICAgICBjYWxsYmFjayhudWxsLCAncHVibGljL2dhbGxlcnknKTtcbiAgICB9LFxuICAgIGZpbGVuYW1lIDogKHJlcSwgZmlsZSwgY2FsbGJhY2spID0+IHtcbiAgICAgICAgLy9jYWxsYmFjayhudWxsLCBEYXRlLm5vdygpICsgJy0nICsgZmlsZS5vcmlnaW5hbG5hbWUpO1xuICAgICAgICBjYWxsYmFjayhudWxsLCB1dWlkdjQoKSArIHBhdGguZXh0bmFtZShmaWxlLm9yaWdpbmFsbmFtZSkpO1xuICAgIH0sXG59KTtcblxuY29uc3QgZmlsZUZpbHRlciA9ICgocmVxLCBmaWxlLCBjYWxsYmFjaykgPT4ge1xuICAgIGlmKGZpbGUubWltZXR5cGUgPT0gJ2ltYWdlL3BuZycgfHwgZmlsZS5taW1ldHlwZSA9PSAnaW1hZ2UvanBnJyB8fCBmaWxlLm1pbWV0eXBlID09ICdpbWFnZS9qcGVnJykge1xuICAgICAgICBjYWxsYmFjayhudWxsLCB0cnVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXEuZmlsZVZhbGlkYXRpb25FcnJvciA9IFwiRXN0ZW5zaW9uZSBub24gY29uc2VudGl0YSBzb2xvOiAnaW1hZ2UvanBnJyB8ICdpbWFnZS9wbmcnIHwgJ2ltYWdlL2pwZWcnXCI7XG4gICAgICAgIGNhbGxiYWNrKG51bGwsIGZhbHNlKTtcbiAgICB9XG59KTtcblxudmFyIHVwbG9hZCA9IG11bHRlcih7IHN0b3JhZ2UgOiBzdG9yYWdlLCBmaWxlRmlsdGVyIDogZmlsZUZpbHRlcn0pO1xuXG52YXIgY3BVcGxvYWQgPSB1cGxvYWQuZmllbGRzKFtcbiAgICB7bmFtZSA6ICdhdmF0YXInLCBtYXhDb3VudCA6IDF9LFxuICAgIHtuYW1lIDogJ2dhbGxlcnknLCBtYXhDb3VudCA6IDh9XG5dKTtcblxucm91dGVyLnBvc3QoJy8nLCBbaXNBdXRoLCBjcFVwbG9hZF0sIGdhbGxlcnlDb250cm9sbGVyLmNyZWF0ZUdhbGxlcnkpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "gallery.js"
      ],
      "names": [
        "express",
        "require",
        "body",
        "query",
        "router",
        "Router",
        "isAuth",
        "galleryController",
        "path",
        "multer",
        "uuidv4",
        "storage",
        "diskStorage",
        "destination",
        "req",
        "file",
        "callback",
        "filename",
        "extname",
        "originalname",
        "fileFilter",
        "mimetype",
        "fileValidationError",
        "upload",
        "cpUpload",
        "fields",
        "name",
        "maxCount",
        "post",
        "createGallery",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAM;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,IAAkBF,OAAO,CAAC,yBAAD,CAA/B;;AACA,MAAMG,MAAM,GAAGJ,OAAO,CAACK,MAAR,EAAf;;AAEA,MAAMC,MAAM,GAAGL,OAAO,CAAC,uBAAD,CAAtB;;AAEA,MAAMM,iBAAiB,GAAGN,OAAO,CAAC,wBAAD,CAAjC;;AAEA,MAAMO,IAAI,GAAGP,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMQ,MAAM,GAAGR,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMS,MAAM,GAAGT,OAAO,CAAC,SAAD,CAAtB;;AAEA,MAAMU,OAAO,GAAGF,MAAM,CAACG,WAAP,CAAmB;AAC/BC,EAAAA,WAAW,EAAG,CAACC,GAAD,EAAMC,IAAN,EAAYC,QAAZ,KAAyB;AACnCA,IAAAA,QAAQ,CAAC,IAAD,EAAO,gBAAP,CAAR;AACH,GAH8B;AAI/BC,EAAAA,QAAQ,EAAG,CAACH,GAAD,EAAMC,IAAN,EAAYC,QAAZ,KAAyB;AAChC;AACAA,IAAAA,QAAQ,CAAC,IAAD,EAAON,MAAM,KAAKF,IAAI,CAACU,OAAL,CAAaH,IAAI,CAACI,YAAlB,CAAlB,CAAR;AACH;AAP8B,CAAnB,CAAhB;;AAUA,MAAMC,UAAU,GAAI,CAACN,GAAD,EAAMC,IAAN,EAAYC,QAAZ,KAAyB;AACzC,MAAGD,IAAI,CAACM,QAAL,IAAiB,WAAjB,IAAgCN,IAAI,CAACM,QAAL,IAAiB,WAAjD,IAAgEN,IAAI,CAACM,QAAL,IAAiB,YAApF,EAAkG;AAC9FL,IAAAA,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAR;AACH,GAFD,MAEO;AACHF,IAAAA,GAAG,CAACQ,mBAAJ,GAA0B,0EAA1B;AACAN,IAAAA,QAAQ,CAAC,IAAD,EAAO,KAAP,CAAR;AACH;AACJ,CAPD;;AASA,IAAIO,MAAM,GAAGd,MAAM,CAAC;AAAEE,EAAAA,OAAO,EAAGA,OAAZ;AAAqBS,EAAAA,UAAU,EAAGA;AAAlC,CAAD,CAAnB;AAEA,IAAII,QAAQ,GAAGD,MAAM,CAACE,MAAP,CAAc,CACzB;AAACC,EAAAA,IAAI,EAAG,QAAR;AAAkBC,EAAAA,QAAQ,EAAG;AAA7B,CADyB,EAEzB;AAACD,EAAAA,IAAI,EAAG,SAAR;AAAmBC,EAAAA,QAAQ,EAAG;AAA9B,CAFyB,CAAd,CAAf;AAKAvB,MAAM,CAACwB,IAAP,CAAY,GAAZ,EAAiB,CAACtB,MAAD,EAASkB,QAAT,CAAjB,EAAqCjB,iBAAiB,CAACsB,aAAvD;AAEAC,MAAM,CAACC,OAAP,GAAiB3B,MAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/routes",
      "sourcesContent": [
        "const express = require('express');\nconst { body, query } = require('express-validator/check');\nconst router = express.Router();\n\nconst isAuth = require('../middleware/is-auth');\n\nconst galleryController = require('../controllers/gallery');\n\nconst path = require('path');\nconst multer = require('multer');\nconst uuidv4 = require('uuid/v4');\n\nconst storage = multer.diskStorage({\n    destination : (req, file, callback) => {\n        callback(null, 'public/gallery');\n    },\n    filename : (req, file, callback) => {\n        //callback(null, Date.now() + '-' + file.originalname);\n        callback(null, uuidv4() + path.extname(file.originalname));\n    },\n});\n\nconst fileFilter = ((req, file, callback) => {\n    if(file.mimetype == 'image/png' || file.mimetype == 'image/jpg' || file.mimetype == 'image/jpeg') {\n        callback(null, true);\n    } else {\n        req.fileValidationError = \"Estensione non consentita solo: 'image/jpg' | 'image/png' | 'image/jpeg'\";\n        callback(null, false);\n    }\n});\n\nvar upload = multer({ storage : storage, fileFilter : fileFilter});\n\nvar cpUpload = upload.fields([\n    {name : 'avatar', maxCount : 1},\n    {name : 'gallery', maxCount : 8}\n]);\n\nrouter.post('/', [isAuth, cpUpload], galleryController.createGallery);\n\nmodule.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1576678459101
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers/gallery.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"plugins\":[],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers/gallery.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers/gallery.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers/gallery.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers",
        "sourceFileName": "gallery.js"
      }
    },
    "ast": null,
    "code": "const path = require('path');\n\nexports.createGallery = (req, res, next) => {\n  res.status(201).json({\n    messages: 'Success Operation'\n  });\n\n  if (req.files.length == 0) {\n    return res.status(422).json({\n      message: req.fileValidationError ? req.fileValidationError : 'Nessun immagine allegata'\n    });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhbGxlcnkuanMiXSwibmFtZXMiOlsicGF0aCIsInJlcXVpcmUiLCJleHBvcnRzIiwiY3JlYXRlR2FsbGVyeSIsInJlcSIsInJlcyIsIm5leHQiLCJzdGF0dXMiLCJqc29uIiwibWVzc2FnZXMiLCJmaWxlcyIsImxlbmd0aCIsIm1lc3NhZ2UiLCJmaWxlVmFsaWRhdGlvbkVycm9yIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxJQUFJLEdBQUdDLE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUVBQyxPQUFPLENBQUNDLGFBQVIsR0FBd0IsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsS0FBb0I7QUFFeENELEVBQUFBLEdBQUcsQ0FBQ0UsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ2pCQyxJQUFBQSxRQUFRLEVBQUc7QUFETSxHQUFyQjs7QUFJQSxNQUFHTCxHQUFHLENBQUNNLEtBQUosQ0FBVUMsTUFBVixJQUFvQixDQUF2QixFQUEwQjtBQUN0QixXQUFPTixHQUFHLENBQUNFLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUN4QkksTUFBQUEsT0FBTyxFQUFHUixHQUFHLENBQUNTLG1CQUFKLEdBQTBCVCxHQUFHLENBQUNTLG1CQUE5QixHQUFvRDtBQUR0QyxLQUFyQixDQUFQO0FBR0g7QUFDSixDQVhEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9BbGVzc2FuZHJvX011c29saW5vL0Rlc2t0b3AvSHlwZXJtZWRpYS9EcmVhbUxhbmRGZXN0aXZhbF8vY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuXG5leHBvcnRzLmNyZWF0ZUdhbGxlcnkgPSAocmVxLCByZXMsIG5leHQpID0+IHtcblxuICAgIHJlcy5zdGF0dXMoMjAxKS5qc29uKHtcbiAgICAgICAgbWVzc2FnZXMgOiAnU3VjY2VzcyBPcGVyYXRpb24nLFxuICAgIH0pO1xuXG4gICAgaWYocmVxLmZpbGVzLmxlbmd0aCA9PSAwKSB7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQyMikuanNvbih7XG4gICAgICAgICAgICBtZXNzYWdlIDogcmVxLmZpbGVWYWxpZGF0aW9uRXJyb3IgPyByZXEuZmlsZVZhbGlkYXRpb25FcnJvciA6ICdOZXNzdW4gaW1tYWdpbmUgYWxsZWdhdGEnLFxuICAgICAgICB9KTtcbiAgICB9XG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "gallery.js"
      ],
      "names": [
        "path",
        "require",
        "exports",
        "createGallery",
        "req",
        "res",
        "next",
        "status",
        "json",
        "messages",
        "files",
        "length",
        "message",
        "fileValidationError"
      ],
      "mappings": "AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AAEAC,OAAO,CAACC,aAAR,GAAwB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAExCD,EAAAA,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,IAAAA,QAAQ,EAAG;AADM,GAArB;;AAIA,MAAGL,GAAG,CAACM,KAAJ,CAAUC,MAAV,IAAoB,CAAvB,EAA0B;AACtB,WAAON,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBI,MAAAA,OAAO,EAAGR,GAAG,CAACS,mBAAJ,GAA0BT,GAAG,CAACS,mBAA9B,GAAoD;AADtC,KAArB,CAAP;AAGH;AACJ,CAXD",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/controllers",
      "sourcesContent": [
        "const path = require('path');\n\nexports.createGallery = (req, res, next) => {\n\n    res.status(201).json({\n        messages : 'Success Operation',\n    });\n\n    if(req.files.length == 0) {\n        return res.status(422).json({\n            message : req.fileValidationError ? req.fileValidationError : 'Nessun immagine allegata',\n        });\n    }\n};"
      ]
    },
    "sourceType": "module",
    "mtime": 1577794622688
  },
  "{\"sourceRoot\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"filename\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models/similarity.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"dev\",\"root\":\"/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_\",\"plugins\":[],\"presets\":[]}:7.7.5:dev": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models/similarity.js",
      "babelrc": false,
      "configFile": false,
      "envName": "dev",
      "root": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models/similarity.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models/similarity.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models",
        "sourceFileName": "similarity.js"
      }
    },
    "ast": null,
    "code": "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst Similarity = sequelize.define('similarity', {\n  id: {\n    type: Sequelize.INTEGER,\n    autoIncrement: true,\n    allowNull: false,\n    primaryKey: true\n  }\n});\nmodule.exports = Similarity;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpbWlsYXJpdHkuanMiXSwibmFtZXMiOlsiU2VxdWVsaXplIiwicmVxdWlyZSIsInNlcXVlbGl6ZSIsIlNpbWlsYXJpdHkiLCJkZWZpbmUiLCJpZCIsInR5cGUiLCJJTlRFR0VSIiwiYXV0b0luY3JlbWVudCIsImFsbG93TnVsbCIsInByaW1hcnlLZXkiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxTQUFTLEdBQUdDLE9BQU8sQ0FBQyxXQUFELENBQXpCOztBQUVBLE1BQU1DLFNBQVMsR0FBR0QsT0FBTyxDQUFDLG1CQUFELENBQXpCOztBQUVBLE1BQU1FLFVBQVUsR0FBR0QsU0FBUyxDQUFDRSxNQUFWLENBQWlCLFlBQWpCLEVBQStCO0FBQzlDQyxFQUFBQSxFQUFFLEVBQUc7QUFDREMsSUFBQUEsSUFBSSxFQUFHTixTQUFTLENBQUNPLE9BRGhCO0FBRURDLElBQUFBLGFBQWEsRUFBRyxJQUZmO0FBR0RDLElBQUFBLFNBQVMsRUFBRyxLQUhYO0FBSURDLElBQUFBLFVBQVUsRUFBRztBQUpaO0FBRHlDLENBQS9CLENBQW5CO0FBU0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlQsVUFBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL0FsZXNzYW5kcm9fTXVzb2xpbm8vRGVza3RvcC9IeXBlcm1lZGlhL0RyZWFtTGFuZEZlc3RpdmFsXy9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBTZXF1ZWxpemUgPSByZXF1aXJlKCdzZXF1ZWxpemUnKTtcblxuY29uc3Qgc2VxdWVsaXplID0gcmVxdWlyZSgnLi4vdXRpbHMvZGF0YWJhc2UnKTtcblxuY29uc3QgU2ltaWxhcml0eSA9IHNlcXVlbGl6ZS5kZWZpbmUoJ3NpbWlsYXJpdHknLCB7XG4gICAgaWQgOiB7XG4gICAgICAgIHR5cGUgOiBTZXF1ZWxpemUuSU5URUdFUixcbiAgICAgICAgYXV0b0luY3JlbWVudCA6IHRydWUsXG4gICAgICAgIGFsbG93TnVsbCA6IGZhbHNlLFxuICAgICAgICBwcmltYXJ5S2V5IDogdHJ1ZVxuICAgIH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFNpbWlsYXJpdHk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "similarity.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "sequelize",
        "Similarity",
        "define",
        "id",
        "type",
        "INTEGER",
        "autoIncrement",
        "allowNull",
        "primaryKey",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,MAAMC,SAAS,GAAGD,OAAO,CAAC,mBAAD,CAAzB;;AAEA,MAAME,UAAU,GAAGD,SAAS,CAACE,MAAV,CAAiB,YAAjB,EAA+B;AAC9CC,EAAAA,EAAE,EAAG;AACDC,IAAAA,IAAI,EAAGN,SAAS,CAACO,OADhB;AAEDC,IAAAA,aAAa,EAAG,IAFf;AAGDC,IAAAA,SAAS,EAAG,KAHX;AAIDC,IAAAA,UAAU,EAAG;AAJZ;AADyC,CAA/B,CAAnB;AASAC,MAAM,CAACC,OAAP,GAAiBT,UAAjB",
      "sourceRoot": "/Users/Alessandro_Musolino/Desktop/Hypermedia/DreamLandFestival_/models",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\n\nconst sequelize = require('../utils/database');\n\nconst Similarity = sequelize.define('similarity', {\n    id : {\n        type : Sequelize.INTEGER,\n        autoIncrement : true,\n        allowNull : false,\n        primaryKey : true\n    }\n});\n\nmodule.exports = Similarity;"
      ]
    },
    "sourceType": "module",
    "mtime": 1576867651255
  }
}